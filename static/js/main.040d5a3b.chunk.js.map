{"version":3,"sources":["assets/delete.svg","assets/check.svg","assets/graphIcon.svg","redux/graphData.redux.js","components/dataPanel/dataPanel.js","components/arcLinkItem/arcLinkItem.js","components/linkItem/linkItem.js","util/defaultConfig.js","util/const.js","util/dnetChart.js","components/linkContainer/linkContainer.js","components/dividedLinkItem/dividedLinkItem.js","components/nodeItem/nodeItem.js","components/halfNodeItem/halfNodeItem.js","components/nodeItemContainer/nodeItemContainer.js","components/pieNodeItem/pieNodeItem.js","components/barChartNodeItem/barChartNodeItem.js","components/chartNodeItem/chartNodeItem.js","components/nodeContainer/nodeContainer.js","components/markLineItem/markLineItem.js","components/dnetCharts/timePositionDnet/timePositionDnet.js","components/markItemGraph/markItemGraph.js","components/nodeLinkGraph/nodeLinkGraph.js","components/dnetCharts/timeAnimationDnet/timeAnimationDnet.js","components/dnetCharts/timeSumDnet/timeSumDnet.js","components/dnetCharts/dnetChartContainer/dnetChartContainer.js","util/dealfun.js","util/dnetv.js","components/previewItem/previewItem.js","util/preview.js","components/preview/preview.js","util/initConfig.js","redux/config.redux.js","components/grammarPanel/grammarPanel.js","components/grammar.js","components/exampleBoard/config.js","components/exampleBoard/exampleBoard.js","util/template.js","data/template.js","components/templatePanel/templatePanel.js","components/nodeLinkStylePanel/nodeLinkStylePanel.js","components/sampleItem/sampleItem.js","components/nodeLinkSample/nodeLinkSample.js","components/timePanel/timePanel.js","components/taskPanel/taskPanel.js","components/graphPanel/graphPanel.js","components/combinePanel/combinePanel.js","board.js","redux/index.js","index.js"],"names":["module","exports","initState","testData","graphs","setGraphData","data","type","dataset","dataName","description","getDataDescription","simpleData","insertData","flowData","shortPathData","emailData","tag","result","getDataInfo","times","nodes","links","length","nodeNumber","linkNumber","nodeMap","Map","linkMap","forEach","d","node","get","id","set","link","key","source","target","DataPanel","props","handleChangeData","setState","modalVisible","handleCancel","selectDataset","index","selected","handleCertainButton","selectedData","state","selectedDataName","overviewInfo","name","overview","sliderValue","groups","startToEnd","handleAddButton","groupInfo","slice","handleTimeSliderChange","value","selectGroupItem","selectedGroupIndex","tempStartToEnd","jsonData","compareEncode","filename","this","graphData","marks","0","style","color","label","className","onClick","aria-hidden","xlinkHref","display","justifyContent","alignItems","position","paddingLeft","paddingRight","marginTop","width","marginRight","marginBottom","range","max","defaultValue","onChange","size","marginLeft","overflowY","overflowX","itemLayout","dataSource","renderItem","item","Item","Meta","title","href","visible","onCancel","footer","disabled","React","Component","mapDispatchToProps","connect","ArcLinkItem","fill","stroke","strokeColor","opacity","strokeWidth","strokeDasharray","strokeType","LinkItem","timeId","x1","x","xOffset","y1","y","yOffset","x2","y2","COMPARISON_CONFIG","defaultConfigs","basic","height","eachWidth","eachHeight","margin","layout","chooseType","vertical","offLine","forceDirect","tickCount","grid","columnCount","onLine","bipartite","circle","applyDefault","startRadius","endRadius","rotateAngle","dagre","rankdir","nodeSep","rankSep","nodeStyle","shape","fillColor","radius","textColor","linkStyle","time","chooseTypes","insert","opcity","element","startColor","endColor","number","animation","speed","markLine","timeLine","xDistance","yDistance","comparison","isOn","keyFrame","elements","appearNode","stableNode","disappearNode","appearLink","stableLink","disappearLink","SAMPLE_LINK_SOURCE","SAMPLE_LINK_TARGET","MARK_LINK_SOURCE","MARK_LINK_TARGET","TASK_FIND_ATTR","TASK_FIND_RELATION","TASK_CHANGE_TYPES","TIME_TIMELINE_ELEMENT","TIME_CHART_TYPE","TIME_TIMELINE_TYPE","GRAPH_LAYOUT_TYPE","KEYFRAM_OPTIONS","ROW_BUTTON_STYLE","boxSizing","padding","fontSize","lineHeight","alighItems","PATTERN_TO_CHANGE","TIME_BUTTON_STYLE","REACT_JSON_OPTIONS","displayDataTypes","indentWidth","fontFamily","theme","collapseStringsAfterLength","enableClipboard","displayObjectSize","TIME_CONFIG","LAYOUT_CONFIG","INSERT_POSITION","isTimeConfig","indexOf","isComparisonConfig","isLayoutConfig","getSvgWidthHeight","configs","len","svgWidth","svgHeight","graph","eachDis","getInsertPosition","getPiePathColor","d3","domain","getLinkData","isColor","colorScale","lineData","lastStart","xStep","yStep","i","newStart","push","getLineData","curveData","directFlag","Math","abs","center","stepAngle","PI","lastAngle","sin","cos","getCurveData","getArcPathData","getDividedArcPathData","firstData","secondData","newSource","newTarget","flag","flag2","r","sqrt","pow","mx","my","LinkContainer","linkType","status","motionOpacity","typeA","typeB","getLineType","firstOption","secondOption","middleX","middleY","getDividedOptions","indexA","indexB","getHybridPathData","DividedLinkItem","existTimeIndex","linkData","map","v","NodeItem","cx","cy","HalfNodeItem","direction","NodeItemContainer","PieNodeItem","pathData","Array","pie","arc_generator","innerRadius","outerRadius","getPiePathData","transform","BarChartNodeItem","barChartData","startX","startY","stepX","k","getBarChartNodePath","itemData","ChartNodeItem","pathDatas","stepY","linePoints","resultGroup","line","getChartLineData","NodeContainer","nodesData","config","dataLength","isSum","nodeRenderType","isPosition","isChart","chartType","chart","getNodeRenderType","tempStyle","pointFillColor","pointShape","pointOpacity","MarkLineItem","markLineOptions","TimePositionDnet","timeChooseTypes","isMatrix","sampleWidth","sampleHeight","viewBox","preserveAspectRatio","dataItem","MarkItemGraph","markRadius","NodeLinkGraph","sumData","hasTimeLine","TimeAnimationDnet","timeout","useState","frameIndex","setFrameIndex","playOrPause","setPlayOrPause","setSvgWidth","setSvgHeight","timeConfig","useEffect","clearTimeout","setTimeout","controlAnimation","handlePlayOrPause","isSample","PauseCircleOutlined","PlayCircleOutlined","included","min","tooltipVisible","tooltipPlacement","TimeSumDnet","legendData","DnetChartContainer","renderType","subGraphs","sumGraphs","_intersection","setA","setB","intersection","Set","elem","has","delete","_difference","difference","adjustLayout2Svg","ratio","minX","maxX","minY","maxY","ratioX","ratioY","translateX","translateY","nodeId2Coord","verticalLayout","l","step","nodesObj","bipartiteLayout","timeGraphs","firstNodesObj","secondNodesObj","secondNodes","sNode","_","pop","sumRevertLinksArr","sumLinksArr","souceId","targetId","sLink","timeGraphsValues","Object","values","graphIndex","sNodesArr","assign","subReverLinksArr","revertLink","srLink","tempElement","graphLength","positionTransMap","getTranslateMap","tranX","tranY","dagreLayout","edges","G6","Graph","container","nodeSize","nodesep","ranksep","render","rNodes","cfg","oneMdsLayout","valueArr","value2y","mdsLayout","gridLayout","begin","condense","rows","sortBy","circularLayout","matrixLayout","sumGraph","stepWidth","nodeId2Xobj","yNodes","nodeId2Yobj","linkId2xyNode","linkId2yxNode","linkNodeX2Y","linkNodeY2X","sumLinks","id2Xnode","id2Ynode","id2LinkNodeX2Y","id2LinkNodeY2X","applyPosition2Node","yNode","existTimes","graphLinks","linkX","applyPosition2Link","linkY","tNodes","tLinks","rNode","posTranslate","offLineLayout","force","tick","stop","getmarkLine","tx","ty","keys","markId","markLineItem","getLinkPathData","setStyle","timeColorObj","tempComparison","task","comparisonNode","basicNodeStyle","comparisonLink","basicLinkStyle","getChooseComparisonStyle","isArray","isChooseColor","getGraphLayout","layoutNodes","fromEntries","layoutLinks","timeNodeResult","newNodes","sourceTimeId","targetTimeId","id2xy","_dealCompare","compareGraph","nodeSet","linkSet","appearNodes","disappearNodes","stableNodes","appear","disappear","stable","getFindData","findOptions","find","pattern","basedType","linkId","degree","startIndex","mapId2Index","mapIndex2Id","undefined","matrix","sourceIndex","targetIndex","sIndex","eIndex","dis","distanceArr","start","cols","Error","distance","Infinity","visited","j","minIndex","getShortestDistance","endIndex","maxDistance","shortestPath","shortestDistance","tempPath","Dfs","getShortestPath","nodeInPathMap","linkInPathMap","aId","bId","nodeId","attr","relation","compareTwoFrameAboutAttr","localFrame","compareFrame","compareNodesDegree","localDegree","DNetV","elementsName","linkSets","timeGraphSet","setData","setConfigs","oldData","_lodash","window","timeIndex","node2degree","add","existStatus","u","dealTask","dealLayout","change","taskType","changeOptionsToStatus","splice","nodeKey","linkKey","dealCompareData","timeArr","timeSet","graphSet","lastTime","lastGraphSet","nextTime","nextGraphSet","s","simulation","Promise","resolve","on","PreviewItem","setSubGraphs","setSumGraphs","setMarkLine","setRenderType","dnetvInstance","initData","arr","initConfig","circular","mds","pointRadius","pointStrokeWidth","pointStrokeColor","pointStrokeType","structure","chooseItem","modifyConfig","payload","update","grammarType","setGrammarType","console","log","content","JSON","stringify","blob","Blob","isFileSaverSupported","e","FileSaver","saveAs","open","encodeURI","src","Grammar","Export","jsonOptions","fileList","showUploadList","beforeUpload","file","reader","FileReader","readAsText","onload","myData","myJson","parse","onSubmit","options","configSet","ExampleBoard","configItem","sumConfigs","filter","layoutKeys","tempArr","assignConfigs","keySort","a","b","aIndex","Number","split","getStorageKeyArr","localStorage","storageKeyArr","isDnetStorageKey","sort","defaultTemplates","template","storageLength","setStorageLength","setStorageKeyArr","coverConfig","newInitConfig","vConfig","addPatternAndChange","lastIndex","setItem","alert","storageIndex","vContent","getItem","checkSvg","handleTemplateCheck","deleteSvg","storeKey","removeItem","exampleData","colorIndexToName","Option","Select","Panel","Collapse","NodeLinkStylePanel","colorPickerDisplay","setColorPickerDisplay","changeOptions","strokeDasharrayOption","parseInt","changeElementStyle","option","optionKey","handleStyleChange","handleStrokeDashChange","join","handleElementColorClick","handleElementColorChange","colorCode","hex","expandIconPosition","backgroundColor","header","SampleItem","SLS","SLT","NodeLinkSample","handleIconsClick","Group","Button","TimePanel","elementColorPickerDisplay","optionObject","changeTimeConfig","handleTimeOptionsInput","handleTimeOptionsSelect","handleTimeLayoutType","handleButtonOnClick","handleTimeOptionsChange","event","tempIndex","MLS","MLT","columnButtonStyle","rowButtonStyle","index2chooseItem","TaskPanel","handleOptionChange","handleComparisonChange","handleSelectChange","handleFindChange","handleColumnChange","nodeOrLink","handleRowChange","changeAttr","handleIsOnChange","handleCheckChange","list","indeterminate","checkAll","handleAllCheckChange","checked","handleChangeCheckChange","handleTaskPanelChange","handleAllChangeCheckChange","changeTaskConfig","handleTaskPatternSelect","handleTaskChangeSelect","taskChange","changeIndeterminate","changeCheckAll","changeList","taskPattern","changeKey","defaultActiveKey","flexDirection","textAlign","GraphPanel","handleConfigChange","changeGraphConfig","optionItem","displayItem","handleLayoutTypeChange","layoutItem","CombinePanel","Board","handleBoardSwitch","board","jsonfile","alt","graphSvg","combineReducers","action","store","createStore","reducers","script","document","createElement","getElementById","appendChild","ReactDOM"],"mappings":"kpneAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,weCGrCC,EAAYC,EAAiBC,OAa5B,SAASC,EAAaC,GAE5B,MAAO,CAAEC,KAhBa,iBAgBSD,Q,iDCJ1BE,EAAU,CACZ,CACIC,SAAU,gBACVC,YAAaC,EAAmBR,EAAiBC,OAAO,UAExDE,KAAMH,GAEV,CACIM,SAAU,gBACVC,YAAaC,EAAmBC,EAAmBR,OAAO,SAE1DE,KAAMM,GAEV,CACIH,SAAU,gBACVC,YAAaC,EAAmBE,EAAmBT,OAAO,UAE1DE,KAAMO,GAEV,CACIJ,SAAU,gBAEVC,YAAa,uCAEbJ,KAAMQ,GAEV,CACIL,SAAU,gBACVC,YAAaC,EAAmBI,EAAsBX,OAAO,aAE7DE,KAAMS,GAEV,CACIN,SAAU,YACVC,YAAaC,EAAmBK,EAAkBZ,OAAO,OAEzDE,KAAMU,IAId,SAASL,EAAmBL,EAAKW,GAC7B,IAAMC,EAASC,EAAYb,GAG3B,MADiB,kBAAcY,EAAOE,MAArB,qBAAuCF,EAAOG,MAA9C,qBAAgEH,EAAOI,MAAvE,KAIrB,SAASH,EAAYb,GACjB,IAAMc,EAAQd,EAAKiB,OACfC,EAAa,EACbC,EAAa,EACbC,EAAU,IAAIC,IACdC,EAAU,IAAID,IAgBlB,OAfArB,EAAKuB,SAAQ,SAACC,GACVA,EAAET,MAAMQ,SAAQ,SAACE,GACRL,EAAQM,IAAID,EAAKE,MAClBP,EAAQQ,IAAIH,EAAKE,IAAI,GACrBT,QAGRM,EAAER,MAAMO,SAAQ,SAACM,GACb,IAAMC,EAAG,UAAMD,EAAKE,OAAX,YAAqBF,EAAKG,QAC9BV,EAAQI,IAAII,KACbR,EAAQM,IAAIE,GAAK,GACjBX,WAIL,CAAEL,QAAOC,MAAOG,EAAYF,MAAOG,G,IAExCc,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAgBVC,iBAAmB,WACf,EAAKC,SAAS,CACVC,cAAc,KAnBH,EAsBnBC,aAAe,WACX,EAAKF,SAAS,CACVC,cAAc,KAxBH,EA2BnBE,cAAgB,SAACC,GACb,EAAKJ,SAAS,CACVK,SAAUD,KA7BC,EAiDnBE,oBAAsB,WAClB,IAAMC,EAAezC,EAAQ,EAAK0C,MAAMH,UAAUzC,KAAKF,OACjD+C,EAAmB3C,EAAQ,EAAK0C,MAAMH,UAAUtC,SACtD,GAAIwC,GAAgBA,EAAa1B,OAAQ,CACrC,IAAM6B,EAAejC,EAAY8B,GACjCG,EAAaC,KAAOF,EACpB,EAAKT,SAAS,CACVC,cAAc,EACdW,SAAUF,EACVG,YAAa,CAAC,EAAGH,EAAahC,OAC9BoC,OAAQ,CAAC,2BAEEJ,GAFH,IAGAK,WAAY,CAAC,EAAGL,EAAahC,YAKzC,EAAKoB,MAAMnC,aAAaG,EAAQ,EAAK0C,MAAMH,UAAUzC,KAAKF,UAnE/C,EAsEnBsD,gBAAkB,WACd,GAAI,EAAKR,MAAMK,YAAY,KAAO,EAAKL,MAAMK,YAAY,GAAI,CACzD,IAEMI,EAAYxC,EAFDX,EAAQ,EAAK0C,MAAMH,UAAUzC,KAAKF,OACxBwD,MAAM,EAAKV,MAAMK,YAAY,GAAI,EAAKL,MAAMK,YAAY,KAEnF,EAAKb,SAAS,CACVc,OAAO,GAAD,mBACC,EAAKN,MAAMM,QADZ,4BAGKG,GAHL,IAIEF,WAAY,EAAKP,MAAMK,oBAhFxB,EAsFnBM,uBAAyB,SAACC,GACtB,EAAKpB,SAAS,CACVa,YAAaO,KAxFF,EA2FnBC,gBAAkB,SAACjB,GACf,EAAKJ,SAAS,CACVsB,mBAAoBlB,IAExB,IAAMmB,EAAiB,EAAKf,MAAMM,OAAOV,GAAOW,WAE1CnD,EAAO,CACT4D,SAAU,CACN9D,OAHaI,EAAQ,EAAK0C,MAAMH,UAAUzC,KAAKF,OAG1BwD,MAAMK,EAAe,GAAIA,EAAe,IAC7DE,cAAe3D,EAAQ,EAAK0C,MAAMH,UAAUzC,KAAK6D,eAErDC,SAAU5D,EAAQ,EAAK0C,MAAMH,UAAUvC,SAG3C,EAAKgC,MAAMnC,aAAaC,EAAK4D,SAAS9D,SAvGtC,EAAK8C,MAAQ,CACTP,cAAc,EACdI,SAAU,EACVO,SAAU,CACND,KAAM,GACNjC,MAAO,EACPC,MAAO,EACPC,MAAO,GAEXiC,YAAa,GACbC,OAAQ,GACRQ,mBAAoB,EACpB1D,KAAM,IAdK,E,gEAiCf,IAAM6C,EAAmB3C,EAAQ6D,KAAKnB,MAAMH,UAAUtC,SACtD,GAAI4D,KAAK7B,MAAM8B,WAAaD,KAAK7B,MAAM8B,UAAU/C,OAAQ,CACrD,IAAM6B,EAAejC,EAAYkD,KAAK7B,MAAM8B,WAC5ClB,EAAaC,KAAOF,EACpBkB,KAAK3B,SAAS,CACVY,SAAUF,EACVG,YAAa,CAAC,EAAGH,EAAahC,OAC9BoC,OAAQ,CAAC,2BAEEJ,GAFH,IAGAK,WAAY,CAAC,EAAGL,EAAahC,e,+BAgEvC,IAAD,OACCmD,EAAK,aACPC,EAAG,CACCC,MAAO,CACHC,MAAO,QAEXC,MAAO,IAEVN,KAAKnB,MAAMI,SAASlC,MAAQ,CACzBqD,MAAO,CACHC,MAAO,QAEXC,MAAON,KAAKnB,MAAMI,SAASlC,QAGnC,OACI,yBAAKwD,UAAU,YACX,yBAAKA,UAAU,aACV,IADL,YAGI,yBAAKA,UAAU,OAAOC,QAASR,KAAK5B,iBAAkBqC,cAAY,QAC9D,yBAAKC,UAAU,mBAGvB,yBAAKH,UAAU,WAAf,YACA,yBAAKA,UAAU,SACX,yBACIH,MAAO,CACHO,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,SAAU,WACVC,YAAa,GACbC,aAAc,GACdC,UAAW,KAGf,6CAAejB,KAAKnB,MAAMI,SAASD,OACnC,8CAAgBgB,KAAKnB,MAAMI,SAASlC,SAExC,yBACIqD,MAAO,CACHO,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,SAAU,WACVC,YAAa,GACbC,aAAc,GACdC,UAAW,KAGf,8CAAgBjB,KAAKnB,MAAMI,SAASjC,QACpC,8CAAgBgD,KAAKnB,MAAMI,SAAShC,UAG5C,yBAAKsD,UAAU,WAAf,aACCP,KAAKnB,MAAMI,SAASlC,MAAQ,EACzB,yBACIqD,MAAO,CACHO,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,SAAU,WACVC,YAAa,GACbC,aAAc,KAGlB,yBACIZ,MAAO,CACHc,MAAO,MACPC,YAAa,GACbC,aAAc,KAJtB,SAOW,KAEX,kBAAC,IAAD,CACIC,OAAK,EACLnB,MAAOA,EACPoB,IAAKtB,KAAKnB,MAAMI,SAASlC,MACzBwE,aAAc,CAAC,EAAGvB,KAAKnB,MAAMI,SAASlC,OACtCqD,MAAO,CACHc,MAAO,OAEXM,SAAUxB,KAAKR,yBAEnB,kBAAC,IAAD,CAEIiC,KAAK,QACLjB,QAASR,KAAKX,gBACde,MAAO,CACHsB,WAAY,GACZN,aAAc,KANtB,QAYJ,KACJ,yBAAKb,UAAU,WAAf,SACCP,KAAKnB,MAAMM,OAAOjC,OAAS,EACxB,yBACIqD,UAAU,uBACVH,MAAO,CACHsB,WAAY,EACZP,YAAa,EACbQ,UAAW,SACXC,UAAW,WAGf,kBAAC,IAAD,CACIC,WAAW,aACXC,WAAY9B,KAAKnB,MAAMM,OACvB4C,WAAY,SAACC,EAAMvD,GAAP,OACR,kBAAC,IAAKwD,KAAN,CAAWzB,QAAS,kBAAM,EAAKd,gBAAgBjB,KAC3C,kBAAC,IAAKwD,KAAKC,KAAX,CACIC,MACI,uBAAGC,KAAK,sBAAR,iBACeJ,EAAK5C,WAAW,GAD/B,YACqC4C,EAAK5C,WAAW,IAChDX,IAAU,EAAKI,MAAMc,mBAChB,YACA,IAGdtD,YAAW,iBAAY2F,EAAKhF,MAAjB,oBAAkCgF,EAAK/E,OAClDsD,UACI9B,IAAU,EAAKI,MAAMc,mBACf,WACA,UAO9B,KACJ,kBAAC,IAAD,CACIwC,MAAM,UACNE,QAASrC,KAAKnB,MAAMP,aACpBgE,SAAUtC,KAAKzB,aACfgE,OAAQ,IAER,kBAAC,IAAD,CACIV,WAAW,aACXC,WAAY3F,EACZ4F,WAAY,SAACC,EAAMvD,GAAP,OACR,kBAAC,IAAKwD,KAAN,CAAWzB,QAAS,kBAAM,EAAKhC,cAAcC,KACzC,kBAAC,IAAKwD,KAAKC,KAAX,CACIC,MACI,uBAAGC,KAAK,sBACHJ,EAAK5F,SACLqC,IAAU,EAAKI,MAAMH,SAAW,YAAc,IAGvDrC,YAAa2F,EAAK3F,YAClBkE,UAAW9B,IAAU,EAAKI,MAAMH,SAAW,WAAa,SAKxE,yBACI0B,MAAO,CACHO,QAAS,OACTC,eAAgB,eAChBK,UAAW,KAGf,kBAAC,IAAD,CAEIQ,KAAK,QACLe,UAAmC,IAAzBxC,KAAKnB,MAAMH,SACrB8B,QAASR,KAAKrB,qBAJlB,iB,GAnRA8D,IAAMC,WAsSxBC,EAAqB,CAC1B3G,gBAGc4G,eARS,SAAC/D,GAAD,MAAU,CACjCoB,UAAWpB,EAAMoB,aAOqB0C,EAAxBC,CAA4C1E,G,uBC5X5C,SAAS2E,EAAY1E,GAChC,OAAIA,EAAMlC,KAIN,0BACIwB,EAAGU,EAAMlC,KACT6G,KAAM,OACNC,OAAQ5E,EAAM6E,YACdC,QAAS9E,EAAM8E,QACfC,YAAW,UAAK/E,EAAM+E,YAAX,MACXC,gBACyB,UAArBhF,EAAMiF,WAAyB,GAAK,SAVrC,KCFA,SAASC,EAASlF,GAC7B,OACI,0BACIP,GAAIO,EAAMmF,OACVC,GAAIpF,EAAMH,OAAOwF,GAAKrF,EAAMsF,QAAUtF,EAAMsF,QAAU,GACtDC,GAAIvF,EAAMH,OAAO2F,GAAKxF,EAAMyF,QAAUzF,EAAMyF,QAAU,GACtDC,GAAI1F,EAAMF,OAAOuF,GAAKrF,EAAMsF,QAAUtF,EAAMsF,QAAU,GACtDK,GAAI3F,EAAMF,OAAO0F,GAAKxF,EAAMyF,QAAUzF,EAAMyF,QAAU,GACtDb,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXD,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WACA,GADN,UAE6B,EAApBjF,EAAM+E,YAFf,YAEsD,EAApB/E,EAAM+E,YAFxC,OCdT,IAAMa,EAAoB,CAC7B,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAGSC,EAAiB,CAC1BC,MAAO,CACH/C,MAAO,IACPgD,OAAQ,IACRC,UAAW,IACXC,WAAY,IACZC,OAAQ,GACRC,OAAQ,CACJC,WAAY,UACZC,SAAU,GACVC,QAAS,GACTC,YAAa,CACTC,UAAW,IAEfC,KAAM,CACFC,YAAa,GAEjBC,OAAQ,GACRC,UAAW,GACXC,OAAQ,CACJC,cAAc,EACdC,YAAa,GACbC,UAAW,IACXC,YAAa,KAEjBC,MAAO,CACHC,QAAS,KACTC,QAAS,EACTC,QAAS,IAGjBC,UAAW,CACPC,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,SAEfC,UAAW,CACPJ,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbC,gBAAiB,QAIzBmB,OAAQ,CACJC,WAAY,UACZC,SAAU,GACVC,QAAS,GACTC,YAAa,CACTC,UAAW,IAEfC,KAAM,CACFC,YAAa,GAEjBC,OAAQ,GACRC,UAAW,GACXC,OAAQ,CACJC,cAAc,EACdC,YAAa,GACbC,UAAW,IACXC,YAAa,KAEjBC,MAAO,CACHC,QAAS,KACTC,QAAS,EACTC,QAAS,IAGjBO,KAAM,CACFC,YAAa,GACbC,OAAQ,CACJnF,SAAU,SACVuD,OAAQ,GACRoB,UAAW,CACPC,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACXK,OAAQ,GAEZJ,UAAW,CACPJ,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,QAGzB9C,MAAO,CACH8F,QAAS,MACTC,WAAY,UACZC,SAAU,UACVC,OAAQ,GAEZC,UAAW,CACPC,MAAO,MAEXC,SAAU,CACNf,MAAO,OACPtC,WAAY,SACZJ,YAAa,UACbE,YAAa,EACbC,gBAAiB,OAErBuD,SAAU,CACNC,UAAW,IACXC,UAAW,EAEXT,QAAS,QAGjBU,WAAY,CACRC,MAAM,EACNC,SAAU,OACVC,SAAU,MACVhB,YAAajC,EAEbkD,WAAY,CACRvB,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACbE,WAAY,QACZyC,UAAW,QACXD,OAAQ,EACR3C,QAAS,GAEbiE,WAAY,CACRxB,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEbkE,cAAe,CACXzB,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEbmE,WAAY,CACR1B,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,OAErBkE,WAAY,CACR3B,MAAO,OACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,OAErBmE,cAAe,CACX5B,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,S,QC5LhBoE,EAAqB,CAChC/D,EAAG,EACHG,EAAG,GAEQ6D,EAAqB,CAChChE,EAAG,GACHG,EAAG,IAGQ8D,EAAmB,CAC9BjE,EAAG,GACHG,EAAG,IAGQ+D,EAAmB,CAC9BlE,EAAG,IACHG,EAAG,IAWQgE,EAAiB,CAAC,UAElBC,EAAqB,CAAC,KAAK,IAAI,MAG/BC,EAAoB,CAAC,eAAgB,eAAgB,kBAAmB,kBAAkB,gBAAgB,iBAE1GC,EAAwB,CAAC,OAAQ,OAAQ,OACzCC,EAAkB,CAAC,OAAQ,OAC3BC,EAAqB,CAAC,WAAW,UACjCC,EAAoB,CAAC,SAAS,OAAO,cAAc,YAAa,WAAW,WAAW,QAAQ,MAAM,UAEpGC,EAAkB,CAAC,OAAQ,QAG3BC,EAAmB,CAC9BC,UAAW,aACXlH,MAAO,OACPmH,QAAS,MACTC,SAAU,OACVpE,OAAQ,OACRqE,WAAY,OACZC,WAAY,UAGDC,GAAoB,CAC/B,oBAAoB,GAApB,OAAwBZ,GACxB,eAAe,GAAf,OAAoBA,GACpB,iBAAiB,GAAjB,OAAsBA,GACtB,YAAY,GAAZ,OAAiBA,GACjB,MAAS,CAAC,gBAAgB,iBAC1B,gBAAiB,CAAC,gBAAgB,gBAAgB,eAAe,gBACjE,YAAa,CAAC,gBAAgB,gBAAgB,eAAe,gBAC7D,iBAAkB,CAAC,gBAAgB,gBAAgB,eAAe,mBAClE,cAAe,CAAC,gBAAgB,gBAAgB,iBAGrCa,GAAoB,CAC/BN,UAAW,aACXlH,MAAO,QACPmH,QAAS,MACTC,SAAU,OACVpE,OAAQ,OACRqE,WAAY,OACZC,WAAY,UAGDG,GAAqB,CAChCC,kBAAkB,EAClB5J,KAAM,KACN6J,YAAa,EACbC,WAAY,UACZC,MAAM,uBACN3I,MAAM,CACJ0I,WAAY,WAEdE,2BAA4B,GAE5BC,iBAAiB,EACjBC,mBAAmB,G,oBChFfC,GAAc,CAAC,WAAY,YAAa,QAAS,WAAY,UAC7DC,GAAgB,CAAC,UAAW,WAAY,SAAU,SAAU,aACrDC,GAAkB,CAAE,SAAU,SAAU,MAAO,SAAU,OAAQ,QAAS,UAAW,WAAY,cAAe,cA+K7H,SAASC,GAAatH,GAClB,OAAOmH,GAAYI,QAAQvH,IAAS,EAGxC,SAASwH,GAAmBxH,GACxB,OAAO+B,EAAkBwF,QAAQvH,IAAS,EAG9C,SAASyH,GAAezH,GACpB,OAAOoH,GAAcG,QAAQvH,IAAS,EAInC,SAAS0H,GAAkBC,EAASC,GACvC,IAAIC,EAAUC,EAD8B,EAEFH,EAAQI,MAA1C5F,EAFoC,EAEpCA,UAAWC,EAFyB,EAEzBA,WAAYC,EAFa,EAEbA,OAFa,EAGNsF,EAAQ5D,KAAKW,SAA3CC,EAHoC,EAGpCA,UAAWC,EAHyB,EAGzBA,UACnB,GAAU,aAJkC,EAGf1K,KACR,CACjB,IAAM8N,EAAU7F,EAAUC,EAAaD,EAAWC,EAElD0F,EADAD,EAAWG,GAASJ,EAAI,GAAY,EAAPvF,EAAmB,EAAR2F,OAGpCL,EAAQ5D,KAAKC,YAAYuD,QAAQ,aAAe,GAChDM,EAAoB,EAATxF,EAAaF,EAAYwC,GAAaiD,EAAM,GACvDE,EAAqB,EAATzF,EAAaD,EAAawC,GAAagD,EAAM,KAEzDC,EAAoB,EAATxF,EAAaF,EACxB2F,EAAqB,EAATzF,EAAaD,GAGjC,MAAO,CAAEyF,WAAUC,aAIhB,SAASG,GAAkBN,GAC9B,IAAInG,EAAEG,EADgC,EAENgG,EAAQI,MAAjC5F,EAF+B,EAE/BA,UAAWC,EAFoB,EAEpBA,WAFoB,EAGXuF,EAAQ5D,KAAKE,OAAjC5B,EAH+B,EAG/BA,OACP,OAJsC,EAGvBvD,UAEX,IAAK,MACD0C,EAAIW,EAAU,EACdR,EAAIU,EACJ,MACJ,IAAK,SACDb,EAAIW,EAAU,EACdR,EAAIS,EAAaC,EACjB,MACJ,IAAK,OACDb,EAAIa,EACJV,EAAIS,EAAW,EACf,MACJ,IAAK,QACDZ,EAAIW,EAAYE,EAChBV,EAAIS,EAAW,EACf,MACJ,IAAK,SACDZ,EAAIW,EAAU,EACdR,EAAIS,EAAW,EACf,MACJ,IAAK,UACDZ,EAAIa,EACJV,EAAIU,EACJ,MACJ,IAAK,WACDb,EAAIW,EAAYE,EAChBV,EAAIU,EACJ,MACJ,IAAK,aACDb,EAAIa,EACJV,EAAIS,EAAaC,EACjB,MACJ,IAAK,cACDb,EAAIW,EAAYE,EAChBV,EAAIS,EAAaC,EACjB,MACJ,QACIb,EAAIW,EAAU,EACdR,EAAIS,EAAaC,EAGzB,MAAO,CAACb,IAAEG,KAuUP,SAASuG,GAAgBN,EAAKxD,EAAYC,GAY7C,OATKD,GAAeC,EAIH8D,gBAERC,OAAO,CAAC,EAAGR,EAAM,IACjBvI,MAAM,CAAC+E,EAAYC,IANX8D,iBAAkBC,OAAOD,QAASP,IAAMvI,MAAM8I,oBAgJ5D,SAASE,GAAYT,EAAK3N,EAAMyJ,EAAO4E,EAAStH,EAAYuH,GAC/D,MAAiB,SAAV7E,EA1CJ,SAAqBkE,EAAK3N,EAAMqO,EAAStH,EAAYuH,GACxD,IAAMC,EAAW,GACbC,EAAY,CACZjH,EAAGvH,EAAK+B,OAAOwF,EACfG,EAAG1H,EAAK+B,OAAO2F,GAEf+G,GAASzO,EAAKgC,OAAOuF,EAAIvH,EAAK+B,OAAOwF,GAAKoG,EAC1Ce,GAAS1O,EAAKgC,OAAO0F,EAAI1H,EAAK+B,OAAO2F,GAAKiG,EAC1CgB,EAAI,EACR,GAAGN,EACC,KAAOM,EAAIhB,GAAK,CACZ,IAAMiB,EAAW,CACbrH,EAAGiH,EAAUjH,EAAIkH,EACjB/G,EAAG8G,EAAU9G,EAAIgH,GAErBH,EAASM,KAAK,CACV9M,OAAQyM,EACRxM,OAAQ4M,EACRxK,MAAOkK,EAAWK,KAEtBH,EAAYI,EACZD,SAGJ,KAAOA,EAAIhB,GAAK,CACZ,IAAMiB,EAAW,CACbrH,EAAGiH,EAAUjH,EAAIkH,EACjB/G,EAAG8G,EAAU9G,EAAIgH,GAErBH,EAASM,KAAK,CACV9M,OAAQyM,EACRxM,OAAQ4M,EACRxK,MAAO2C,IAEXyH,EAAYI,EACZD,IAGR,OAAOJ,EAIoBO,CAAYnB,EAAK3N,EAAMqO,EAAStH,EAAYuH,GA5FpE,SAAsBX,EAAK3N,EAAMqO,EAAStH,EAAYuH,GACzD,IAAMS,EAAY,GACdP,EAAY,CACZjH,EAAGvH,EAAK+B,OAAOwF,EACfG,EAAG1H,EAAK+B,OAAO2F,GAEbsH,EAAahP,EAAK+B,OAAO2F,EAAG1H,EAAKgC,OAAO0F,EAAI,GAAK,EACjDiC,EAASsF,KAAKC,KAAKlP,EAAK+B,OAAO2F,EAAI1H,EAAKgC,OAAO0F,GAAG,GAElDyH,EACCnP,EAAK+B,OAAOwF,EADb4H,GAEEnP,EAAK+B,OAAO2F,EAAI1H,EAAKgC,OAAO0F,GAAG,EAGjC0H,EAAYH,KAAKI,GAAG1B,EACtB2B,EAAYF,EAEZT,EAAI,EACR,GAAGN,EACC,KAAOM,EAAIhB,GAAK,CACZ,IAAMiB,EAAW,CACbrH,EAAG4H,EAAWH,EAAWrF,EAAOsF,KAAKM,IAAID,GACzC5H,EAAGyH,EAAWH,EAAWrF,EAAOsF,KAAKO,IAAIF,IAE7CP,EAAUF,KAAK,CACX7O,KAAK,KAAD,OAAOwO,EAAUjH,EAAjB,YAAsBiH,EAAU9G,EAAhC,cAAuCiC,EAAvC,YAAiDA,EAAjD,kBAAiEiF,EAASrH,EAA1E,YAA+EqH,EAASlH,EAAxF,KACJtD,MAAOkK,EAAWK,KAEtBW,GAAaF,EACbZ,EAAYI,EACZD,SAGJ,KAAOA,EAAIhB,GAAK,CACZ,IAAMiB,EAAW,CACbrH,EAAG4H,EAAWH,EAAWrF,EAAOsF,KAAKM,IAAID,GACzC5H,EAAGyH,EAAWH,EAAWrF,EAAOsF,KAAKO,IAAIF,IAE7CP,EAAUF,KAAK,CACX7O,KAAK,KAAD,OAAOwO,EAAUjH,EAAjB,YAAsBiH,EAAU9G,EAAhC,cAAuCiC,EAAvC,YAAiDA,EAAjD,kBAAiEiF,EAASrH,EAA1E,YAA+EqH,EAASlH,EAAxF,KACJtD,MAAO2C,IAEXuI,GAAaF,EACbZ,EAAYI,EACZD,IAGR,OAAOI,EA6C6EU,CAAa9B,EAAK3N,EAAMqO,EAAStH,EAAYuH,GA2B9H,SAASoB,GAAe3N,EAAQC,GAAS,IAAD,EACV2N,GAAsB5N,EAAQC,GAC/D,OAF2C,EACnC4N,UADmC,EACxBC,WA2FhB,SAASF,GAAsB5N,EAAQC,GAC1C,IAAI8N,EAAWC,EAEXhO,EAAO2F,EAAI1F,EAAO0F,GAClBoI,EAAY9N,EACZ+N,EAAYhO,IAEZ+N,EAAY/N,EACZgO,EAAY/N,GAEhB,IAAMsF,EAAKwI,EAAUvI,EACfE,EAAKqI,EAAUpI,EACfE,EAAKmI,EAAUxI,EACfM,EAAKkI,EAAUrI,EACfsI,EAAO1I,EAAKM,EAAK,GAAK,EACtBqI,EAAQ3I,EAAKM,EAAK,EAAI,EACtBsI,EAAKjB,KAAKkB,KAAKlB,KAAKmB,IAAIvI,EAAKJ,EAAI,GAAKwH,KAAKmB,IAAIxI,EAAKN,EAAI,IAAM2H,KAAKkB,KAAK,GAAM,EACpF,GAAU,IAAND,EACA,MAAO,CAAEN,UAAW,KAAMC,WAAY,MAE1C,IAAIQ,GAAM/I,EAAKM,GAAM,EAAKoI,GAAQ,EAAIf,KAAKkB,KAAK,GAAK,GAAKD,GAAKrI,EAAKJ,IAAQwH,KAAKkB,KAAK,GAAKD,GACvFI,GAAM7I,EAAKI,GAAM,EAAKmI,GAAQ,EAAIf,KAAKkB,KAAK,GAAK,GAAKD,GAAK5I,EAAKM,IAAQqH,KAAKkB,KAAK,GAAKD,GAI3F,MAAO,CAAEN,UAHM,YAAQtI,EAAR,YAAcG,EAAd,YAAoByI,EAApB,YAAyBA,EAAzB,gBAAkCD,EAAlC,YAA2CI,EAA3C,YAAiDC,GAG5CT,WAFJ,YAAQQ,EAAR,YAAcC,EAAd,YAAoBJ,EAApB,YAAyBA,EAAzB,gBAAkCD,EAAlC,YAA2CrI,EAA3C,YAAiDC,ICt2BtD,SAAS0I,GAAcrO,GAAQ,IAGtCsO,EAFIzO,EAAuDG,EAAvDH,OAAQC,EAA+CE,EAA/CF,OADyB,EACsBE,EAAvC8E,eADiB,MACP,EADO,IACsB9E,EAA1BuO,cADI,MACG,GADH,EACOxQ,EAAeiC,EAAfjC,KAAMkE,EAASjC,EAATiC,MAGtD,GAAU,SAAPlE,GAAiC,IAAlBwQ,EAAOxP,OAGrB,MAAgB,WADhBuP,EAAWrM,EAAM0F,UAAUJ,OAGnB,kBAAC7C,EAAD,eACI5G,KAAQ0P,GAAe3N,EAAQC,IAC3BmC,EAAM0F,UAFd,CAGI6G,cAAe1J,KAKnB,kBAACI,EAAD,iBACQjD,EAAM0F,UADd,CAEI6G,cAAe1J,GACX9E,IAKd,GAAsB,IAAlBuO,EAAOxP,OAGb,MAAgB,WADhBuP,EAAWrM,EAAMsM,EAAO,IAAIhH,OAGpB,kBAAC7C,EAAD,eACI5G,KAAQ0P,GAAe3N,EAAQC,IAC3BmC,EAAMsM,EAAO,IAFrB,CAGIC,cAAe1J,KAKnB,kBAACI,EAAD,iBACQjD,EAAMsM,EAAO,IADrB,CAEIC,cAAe1J,GACX9E,IAIb,GAAsB,IAAlBuO,EAAOxP,OAAc,CAI5B,GAAgB,WADhBuP,EDyrBD,SAAqBC,EAAQtM,GAChC,IAAMwM,EAAQxM,EAAMsM,EAAO,IAAIhH,MACzBmH,EAAQzM,EAAMsM,EAAO,IAAIhH,MAC/B,OAAGkH,IAAUC,EACQ,UAAVD,EAAmB,QAAS,OAE5B,CAACA,EAAOC,GC/rBJC,CAAYJ,EAAQtM,IACP,CAAC,IAAD,EACawL,GAAsB5N,EAAQC,GAAvD4N,EADY,EACZA,UAAWC,EADC,EACDA,WACnB,OACI,oCACI,kBAACjJ,EAAD,eACI5G,KAAQ4P,GACJzL,EAAMsM,EAAO,MAErB,kBAAC7J,EAAD,eACI5G,KAAQ6P,GACJ1L,EAAMsM,EAAO,OAI3B,GAAgB,SAAbD,EAAoB,CAAC,IAAD,ED0c9B,SAA2BtO,EAAOuO,GACrC,IAAMK,EAAW,2BACV5O,GACAA,EAAMiC,MAAMsM,EAAO,KAEpBM,EAAY,2BACX7O,GACAA,EAAMiC,MAAMsM,EAAO,KAEpBO,GAAW9O,EAAMH,OAAOwF,EAAIrF,EAAMF,OAAOuF,GAAK,EAC9C0J,GAAW/O,EAAMH,OAAO2F,EAAIxF,EAAMF,OAAO0F,GAAK,EAWpD,OAVAoJ,EAAY9O,OAAZ,2BACO8O,EAAY9O,QADnB,IAEIuF,EAAGyJ,EACHtJ,EAAGuJ,IAEPF,EAAahP,OAAb,2BACOgP,EAAahP,QADpB,IAEIwF,EAAGyJ,EACHtJ,EAAGuJ,IAEA,CAAEH,cAAaC,gBC9dwBG,CAAkBhP,EAAOuO,GAAvDK,EADiB,EACjBA,YAAaC,EADI,EACJA,aACrB,OACI,oCACI,kBAAC3J,EAAa0J,GACd,kBAAC1J,EAAa2J,IAItB,IAAII,EAAS,EAAIC,EAAS,EACT,UAAdZ,EAAS,KACRW,EAAS,EACTC,EAAS,GAJZ,MDirBN,SAA2BrP,EAAQC,GACtC,IAAI8N,EAAWC,EAEXhO,EAAO2F,EAAI1F,EAAO0F,GAClBoI,EAAY9N,EACZ+N,EAAYhO,IAEZ+N,EAAY/N,EACZgO,EAAY/N,GAEhB,IAAMsF,EAAKwI,EAAUvI,EACfE,EAAKqI,EAAUpI,EACfE,EAAKmI,EAAUxI,EACfM,EAAKkI,EAAUrI,EACfsI,EAAO1I,EAAKM,EAAK,GAAK,EACtBqI,EAAQ3I,EAAKM,EAAK,EAAI,EACtBsI,EAAKjB,KAAKkB,KAAKlB,KAAKmB,IAAIvI,EAAKJ,EAAI,GAAKwH,KAAKmB,IAAIxI,EAAKN,EAAI,IAAM2H,KAAKkB,KAAK,GAAM,EACpF,GAAU,IAAND,EACA,MAAO,CAAEN,UAAW,KAAMC,WAAY,MAE1C,IAAIQ,GAAM/I,EAAKM,GAAM,EAAKoI,GAAQ,EAAIf,KAAKkB,KAAK,GAAK,GAAKD,GAAKrI,EAAKJ,IAAQwH,KAAKkB,KAAK,GAAKD,GACvFI,GAAM7I,EAAKI,GAAM,EAAKmI,GAAQ,EAAIf,KAAKkB,KAAK,GAAK,GAAKD,GAAK5I,EAAKM,IAAQqH,KAAKkB,KAAK,GAAKD,GAI3F,MAAO,CAAEN,UAHM,YAAQtI,EAAR,YAAcG,EAAd,YAAoByI,EAApB,YAAyBA,EAAzB,gBAAkCD,EAAlC,YAA2CI,EAA3C,YAAiDC,GAG5CT,WAFJ,YAAQQ,EAAR,YAAcC,EAAd,cAAsB1I,EAAtB,YAA4BC,IClsBHwJ,CAAkBtP,EAAQC,GAAnD4N,EANP,EAMOA,UAAWC,EANlB,EAMkBA,WACnB,OACI,oCACI,kBAACjJ,EAAD,eACI5G,KAAQ4P,GACJzL,EAAMsM,EAAOU,MAErB,kBAACvK,EAAD,eACI5G,KAAQ6P,GACJ1L,EAAMsM,EAAOW,QC/F1B,SAASE,GAAgBpP,GAAQ,IACpClC,EAAuGkC,EAAvGlC,KAAM2N,EAAiGzL,EAAjGyL,IAAKW,EAA4FpM,EAA5FoM,WAAYrH,EAAgF/E,EAAhF+E,YAAaE,EAAmEjF,EAAnEiF,WAAYoK,EAAuDrP,EAAvDqP,eAAgB9H,EAAuCvH,EAAvCuH,MAD7B,EACoEvH,EAAhCmM,QACzEmD,EAAWpD,GAAYT,EAAK3N,EAAMyJ,OAFG,SACoEvH,EAAhB6E,YAC5BuH,GAEnE,OACI,2BACe,SAAV7E,EACK+H,EAASC,KAAI,SAACC,EAAGlP,GACb,OAA8B,IAA1B+O,EAAe/O,GAEX,0BACIV,IAAG,UAAKU,GACR8E,GAAIoK,EAAE3P,OAAOwF,EACbE,GAAIiK,EAAE3P,OAAO2F,EACbE,GAAI8J,EAAE1P,OAAOuF,EACbM,GAAI6J,EAAE1P,OAAO0F,EACbZ,OAAQ4K,EAAEtN,MACV6C,YAAW,UAAKA,EAAL,MACXC,gBACmB,UAAfC,EACM,GADN,UAEuB,EAAdF,EAFT,YAE0C,EAAdA,EAF5B,OAQR,0BACInF,IAAKU,EACL8E,GAAIoK,EAAE3P,OAAOwF,EACbE,GAAIiK,EAAE3P,OAAO2F,EACbE,GAAI8J,EAAE1P,OAAOuF,EACbM,GAAI6J,EAAE1P,OAAO0F,EACbZ,OAAQ,UACRG,YAAW,UAAKA,EAAL,MACXC,gBACmB,UAAfC,EACM,GADN,UAEuB,EAAdF,EAFT,YAE0C,EAAdA,EAF5B,UAQpBuK,EAASC,KAAI,SAACC,EAAGlP,GACb,OAA8B,IAA1B+O,EAAe/O,GAEX,0BACIV,IAAG,eAAUU,GACbhB,EAAGkQ,EAAE1R,KACL6G,KAAM,OACNC,OAAQ4K,EAAEtN,MACV6C,YAAW,UAAKA,EAAL,MACXC,gBACmB,UAAfC,EACM,GADN,UAEuB,EAAdF,EAFT,YAE0C,EAAdA,EAF5B,OAQR,0BACInF,IAAG,eAAUU,GACbhB,EAAGkQ,EAAE1R,KACL6G,KAAM,OACNC,OAAQ,UACRG,YAAW,UAAKA,EAAL,MACXC,gBACmB,UAAfC,EACM,GADN,UAEuB,EAAdF,EAFT,YAE0C,EAAdA,EAF5B,WCtEvB,SAAS0K,GAASzP,GAC7B,MAAoB,WAAhBA,EAAMuH,MAEF,4BACI9H,GAAIO,EAAMmF,OACVuK,GAAI1P,EAAMqF,GAAKrF,EAAMsF,QAAUtF,EAAMsF,QAAU,GAC/CqK,GAAI3P,EAAMwF,GAAKxF,EAAMyF,QAAUzF,EAAMyF,QAAU,GAC/Cd,KAAM3E,EAAMwH,UACZ5C,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXiJ,EAAGhO,EAAMyH,OACT3C,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WAAyB,GAA/B,UAAuCjF,EAAMyH,OAAS,EAAtD,YAA2DzH,EAAMyH,OAAS,EAA1E,OAMR,0BACIhI,GAAIO,EAAMmF,OACVE,EAAGrF,EAAMqF,GAAKrF,EAAMsF,QAAUtF,EAAMsF,QAAU,GAAKtF,EAAMyH,OACzDjC,EAAGxF,EAAMwF,GAAKxF,EAAMyF,QAAUzF,EAAMyF,QAAU,GAAKzF,EAAMyH,OACzD9C,KAAM3E,EAAMwH,UAAYxH,EAAMwH,UAAYxH,EAAM6E,YAChDD,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXhC,MAAsB,EAAf/C,EAAMyH,OACb1B,OAAuB,EAAf/F,EAAMyH,OACd3C,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WAAyB,GAA/B,UAAuCjF,EAAMyH,OAAS,EAAtD,YAA2DzH,EAAMyH,OAAS,EAA1E,OC9BL,SAASmI,GAAa5P,GACjC,MAAwB,SAApBA,EAAM6P,UACc,WAAhB7P,EAAMuH,MAEF,0BACIjI,EAAC,WAAMU,EAAMqF,EAAZ,YAAiBrF,EAAMwF,EAAIxF,EAAMyH,OAAjC,eAA8CzH,EAAMyH,OAApD,YACGzH,EAAMyH,OADT,kBAESzH,EAAMqF,EAFf,YAEoBrF,EAAMwF,EAAIxF,EAAMyH,QACrC9C,KAAM3E,EAAMwH,UAAYxH,EAAMwH,UAAWxH,EAAM6E,YAC/CD,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXD,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WACA,GADN,UAESjF,EAAMyH,OAAS,EAFxB,YAE6BzH,EAAMyH,OAAS,EAF5C,OAQR,0BACInI,EAAC,WAAMU,EAAMqF,EAAZ,YAAiBrF,EAAMwF,EAAIxF,EAAMyH,OAAjC,6BACLzH,EAAMqF,EAAIrF,EAAMyH,OADX,YACqBzH,EAAMwF,EAAIxF,EAAMyH,OADrC,4BAELzH,EAAMqF,EAAIrF,EAAMyH,OAFX,YAEqBzH,EAAMwF,EAAIxF,EAAMyH,OAFrC,4BAGLzH,EAAMqF,EAHD,YAGMrF,EAAMwF,EAAIxF,EAAMyH,OAHtB,KAID9C,KAAM3E,EAAMwH,UAAYxH,EAAMwH,UAAWxH,EAAM6E,YAC/CD,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXD,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WACA,GADN,UAESjF,EAAMyH,OAAS,EAFxB,YAE6BzH,EAAMyH,OAAS,EAF5C,OAQI,WAAhBzH,EAAMuH,MAEF,0BACIjI,EAAC,WAAMU,EAAMqF,EAAZ,YAAiBrF,EAAMwF,EAAIxF,EAAMyH,OAAjC,eAA8CzH,EAAMyH,OAApD,YACGzH,EAAMyH,OADT,kBAESzH,EAAMqF,EAFf,YAEoBrF,EAAMwF,EAAIxF,EAAMyH,QACrC9C,KAAM3E,EAAMwH,UAAYxH,EAAMwH,UAAWxH,EAAM6E,YAC/CD,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXD,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WACA,GADN,UAESjF,EAAMyH,OAAS,EAFxB,YAE6BzH,EAAMyH,OAAS,EAF5C,OAQR,0BACInI,EAAC,WAAMU,EAAMqF,EAAZ,YAAiBrF,EAAMwF,EAAIxF,EAAMyH,OAAjC,6BACLzH,EAAMqF,EAAIrF,EAAMyH,OADX,YACqBzH,EAAMwF,EAAIxF,EAAMyH,OADrC,4BAELzH,EAAMqF,EAAIrF,EAAMyH,OAFX,YAEqBzH,EAAMwF,EAAIxF,EAAMyH,OAFrC,4BAGLzH,EAAMqF,EAHD,YAGMrF,EAAMwF,EAAIxF,EAAMyH,OAHtB,KAID9C,KAAM3E,EAAMwH,UAAYxH,EAAMwH,UAAWxH,EAAM6E,YAC/CD,OAAQ5E,EAAM6E,YACdE,YAAW,UAAK/E,EAAM+E,YAAX,MACXD,QAAS9E,EAAM8E,QACfE,gBACyB,UAArBhF,EAAMiF,WACA,GADN,UAESjF,EAAMyH,OAAS,EAFxB,YAE6BzH,EAAMyH,OAAS,EAF5C,OClET,SAASqI,GAAkB9P,GAAQ,IAAD,EACZA,EAA1BuO,cADsC,MAC/B,GAD+B,EAC3BxQ,EAAeiC,EAAfjC,KAAMkE,EAASjC,EAATiC,MACxB,MAAU,SAAPlE,GAAiC,IAAlBwQ,EAAOxP,OACd,kBAAC0Q,GAAD,iBAAcxN,EAAMqF,UAAetH,IAClB,IAAlBuO,EAAOxP,OACN,kBAAC0Q,GAAD,iBAAcxN,EAAMsM,EAAO,IAASvO,IACnB,IAAlBuO,EAAOxP,OAET,oCACI,kBAAC6Q,GAAD,eAAcC,UAAW,QAAY5N,EAAMsM,EAAO,IAASvO,IAC3D,kBAAC4P,GAAD,eAAcC,UAAW,SAAa5N,EAAMsM,EAAO,IAASvO,UAJjE,ECPI,SAAS+P,GAAY/P,GAAQ,IAChClC,EAAkHkC,EAAlHlC,KAAM2N,EAA4GzL,EAA5GyL,IAAKW,EAAuGpM,EAAvGoM,WAAYiD,EAA2FrP,EAA3FqP,eAAgBxK,EAA2E7E,EAA3E6E,YAAaE,EAA8D/E,EAA9D+E,YAAaE,EAAiDjF,EAAjDiF,WAAYwC,EAAqCzH,EAArCyH,OAAQD,EAA6BxH,EAA7BwH,UADtD,EACmFxH,EAAnBmM,eADhE,SAGjC6D,ENsiBH,SAAwBvI,EAAQgE,GACnC,IAAMzN,EAAU,IAAIiS,MAAMxE,GAAK9G,KAAK,GAGhCuL,EAAMlE,QAGNmE,EAAgBnE,QAASoE,YAAY,GAAGC,YAAY5I,GAMxD,OAHcyI,EAAIlS,GAEOuR,KAAI,SAACC,GAAD,OAAOW,EAAcX,MMljBjCc,CAAe7I,EAAQgE,GACxC,OACI,oCACI,uBAAG8E,UAAS,oBAAezS,EAAKuH,EAApB,aAA0BvH,EAAK0H,EAA/B,MACPwK,EAAST,KAAI,SAACC,EAAGlP,GAChB,OAA2B,IAAxB+O,EAAe/O,GAEZ,0BACIhB,EAAGkQ,EACH7K,KAAMwH,EAAUC,EAAW9L,GAAQkH,EACnC5H,IAAG,wBAAmBU,KAK1B,0BACIhB,EAAGkQ,EACH7K,KAAM,UACN/E,IAAG,wBAAmBU,SAMtC,4BACIoP,GAAI5R,EAAKuH,EACTsK,GAAI7R,EAAK0H,EACTZ,OAAQC,EACRF,KAAM,OACNI,YAAW,UAAKA,EAAL,MACXiJ,EAAGvG,EACHzC,gBACmB,UAAfC,EAAyB,GAAzB,UAAiCwC,EAAS,EAA1C,YAA+CA,EAAS,EAAxD,QCnCL,SAAS+I,GAAiBxQ,GAAQ,IACrClC,EAAiHkC,EAAjHlC,KAAM2N,EAA2GzL,EAA3GyL,IAAKW,EAAsGpM,EAAtGoM,WAAYiD,EAA0FrP,EAA1FqP,eAAgBxK,EAA0E7E,EAA1E6E,YAAaE,EAA6D/E,EAA7D+E,YAAaE,EAAgDjF,EAAhDiF,WAAYwC,EAAoCzH,EAApCyH,OAAOD,EAA6BxH,EAA7BwH,UADhD,EAC6ExH,EAAnBmM,eAD1D,SAEtCsE,EPujBH,SAA6BhJ,EAAQgE,GAKxC,IAJA,IAAMuE,EAAW,GACbU,GAAU,EAAEjJ,EAAQkJ,GAAU,EAAElJ,EAChCmJ,EAAe,EAAPnJ,EAASgE,EACjBoF,EAAI,EACFA,EAAEpF,GACJuE,EAASrD,KAAK,CACVtH,EAAGqL,EACHlL,EAAGmL,EACH5N,MAAO6N,EACP7K,OAAe,EAAP0B,IAEZiJ,GAAUE,EACVC,IAEJ,OAAOb,EOtkBcc,CAAoBrJ,EAAQgE,GACjD,OACI,oCACI,uBAAG8E,UAAS,oBAAezS,EAAKuH,EAApB,aAA0BvH,EAAK0H,EAA/B,MACPiL,EAAalB,KAAI,SAACwB,EAAUzQ,GAC3B,OAA2B,IAAxB+O,EAAe/O,GAEZ,0BACIV,IAAG,yBAAoBU,GACvBb,GAAIO,EAAMmF,OACVE,EAAG0L,EAAS1L,EACZG,EAAGuL,EAASvL,EACZb,KAAMwH,EAAUC,EAAW9L,GAAOkH,EAClC5C,OAAQC,EACRE,YAAa,MACbhC,MAAOgO,EAAShO,MAChBgD,OAAQgL,EAAShL,OACjBjB,QAAS9E,EAAM8E,UAKnB,0BACIlF,IAAG,yBAAoBU,GACvBb,GAAIO,EAAMmF,OACVE,EAAG0L,EAAS1L,EACZG,EAAGuL,EAASvL,EACZb,KAAM,UACNC,OAAQC,EACRE,YAAa,MACbhC,MAAOgO,EAAShO,MAChBgD,OAAQgL,EAAShL,OACjBjB,QAAS9E,EAAM8E,cAM/B,0BACIO,EAAGvH,EAAKuH,EAAIoC,EACZjC,EAAG1H,EAAK0H,EAAIiC,EACZ7C,OAAQC,EACRF,KAAM,OACNI,YAAW,UAAKA,EAAL,MACXhC,MAAgB,EAAT0E,EACP1B,OAAiB,EAAT0B,EACRzC,gBACmB,UAAfC,EAAyB,GAAzB,UAAiCwC,EAAS,EAA1C,YAA+CA,EAAS,EAAxD,QChDL,SAASuJ,GAAchR,GAAQ,IAClClC,EAA4GkC,EAA5GlC,KAAKqO,EAAuGnM,EAAvGmM,QAASC,EAA8FpM,EAA9FoM,WAAY7E,EAAkFvH,EAAlFuH,MAAO8H,EAA2ErP,EAA3EqP,eAAgBxK,EAA2D7E,EAA3D6E,YAAaE,EAA8C/E,EAA9C+E,YAAYyC,EAAkCxH,EAAlCwH,UAAWvC,EAAuBjF,EAAvBiF,WAAYwC,EAAWzH,EAAXyH,OACnGwJ,ERi3BH,SAA0BxJ,EAAQ4H,EAAiBjD,EAAYD,EAAQtH,GAsB1E,IArBA,IAAI6L,GAAU,EAAEjJ,EACVmJ,EAAe,EAAPnJ,GAAU4H,EAAetQ,OAAO,GACxCmS,EAAQzJ,EAAO,EACf0J,EAAa9B,EAAeE,KAAI,SAACC,EAAElP,GACrC,IAAI5B,EAcJ,OAZIA,EADK,IAAN8Q,EACW,CACNnK,EAAGqL,EACHlL,GAAI,EAAE0L,GAGA,CACN7L,EAAGqL,EACHlL,EAAG0L,GAIXR,GAAUE,EACHlS,KAEP0S,EAAc,GACV3E,EAAI,EAAEA,EAAE0E,EAAWpS,OAAO0N,IAC9B2E,EAAYzE,KAAK,CAAC9M,OAAOsR,EAAW1E,EAAE,GAAG3M,OAAOqR,EAAW1E,KAG/D,IAAI9M,EAAOqM,mBAEN3G,GAAE,SAAU/F,GACT,OAAOA,EAAE+F,KAEZG,GAAE,SAAUlG,GACT,OAAOA,EAAEkG,KASjB,OAPsB4L,EAAY7B,KAAI,SAAC8B,EAAM/Q,GACzC,MAAO,CACHxC,KAAM6B,EAAK0R,GACXnP,MAAOiK,EAAUC,EAAW9L,GAASuE,MQt5B3ByM,CAAiB7J,EAAQ4H,EAAgBjD,EAAYD,EAAStH,GAChF,OACI,oCACI,kBAAC4K,GAAD,CACIpK,EAAGvH,EAAKuH,EACRG,EAAG1H,EAAK0H,EACR+B,MAAOA,EACPC,UAAWA,EACX3C,YAAaA,EACbE,YAAa,EACb0C,OAAQA,EACRxC,WAAYA,IAGhB,uBAAGsL,UAAS,oBAAezS,EAAKuH,EAApB,aAA0BvH,EAAK0H,EAA/B,MAEJyL,EAAU1B,KAAI,SAACS,EAAU1P,GACrB,OAAO,0BACHV,IAAG,qBAAgBU,EAAhB,YAAyB0P,EAASlS,MACrCwB,EAAG0Q,EAASlS,KACZ8G,OAAQoL,EAAS9N,MACjB6C,YAAW,UAAKA,EAAL,MACXJ,KAAM,aAKtB,kBAAC8K,GAAD,CACIpK,EAAGvH,EAAKuH,EACRG,EAAG1H,EAAK0H,EACR+B,MAAOA,EACPC,UAAW,OACX3C,YAAaA,EACbE,YAAaA,EACb0C,OAAQA,EACRxC,WAAYA,KClCb,SAASsM,GAAcvR,GAAQ,IAC5BwR,EAA8CxR,EAApDlC,KAAiB2T,EAAmCzR,EAAnCyR,OAAaC,EAAsB1R,EAA3ByL,IAAiBkG,EAAU3R,EAAV2R,MAE5CxF,EADkBsF,EAAO7J,KAAKC,YACJuD,QAAQ,UAAY,EAC9CwG,ETomBH,SAA2BH,EAAQtF,GAA4B,IAAnB0F,IAAkB,yDAC3DC,EAAUL,EAAO7J,KAAKC,YAAYuD,QAAQ,UAAY,EACpD9D,EAAcmK,EAAO7F,MAArBtE,UACFyK,EAAYN,EAAO7J,KAAKoK,OAAOP,EAAO7J,KAAKoK,MAAMjU,KAAO0T,EAAO7J,KAAKoK,MAAMjU,KAAM,OACtF,OAAG+T,EACgB,SAAZC,EACQ,gBAEc,WAAlBzK,EAAUC,MACF,UAEA,UAGV4E,GAAS0F,EACO,WAAlBvK,EAAUC,MACF,UAEA,UAGJ,aSznBY0K,CAAkBR,EAAQtF,EAASwF,GAC1D,GAAuB,eAAnBC,EACA,OACI,oCACKJ,EAAUjC,KAAI,SAAChQ,GACZ,OAAO,kBAACuQ,GAAD,iBAAuBvQ,EAAvB,CAA6BK,IAAG,eAAUL,EAAKE,WAI/D,MAE8BgS,EAAO7F,MAAhCtE,EAFL,EAEKA,UAAWK,EAFhB,EAEgBA,UAFhB,EAGsD8J,EAAO7J,KAAK1F,MAHlE,IAGK+F,kBAHL,MAGkB,UAHlB,MAG6BC,SAC5BkE,EAAaL,GAAgB2F,EAAYzJ,OAJ1C,MAGwC,UAHxC,GAKH,OAAQ2J,GACJ,IAAK,gBACD,OACI,oCACKJ,EAAUjC,KAAI,SAAChQ,EAAMe,GAElB,IAAM4R,EACY,cAAd3S,EAAKxB,KAAL,2BAEauJ,GAFb,IAGUE,UAAWG,EAAUwK,eACrB5K,MAAOI,EAAUyK,WACjBtN,QAAS6C,EAAU0K,eAEvB/K,EAEV,OACI,kBAAC0J,GAAD,eACIlT,KAAMyB,EACN8P,eAAgB9P,EAAK8P,eACrBjD,WAAYA,EACZD,QAASA,EACTvM,IAAG,0BAAqBU,IACpB4R,QAM5B,IAAK,UACD,OACI,oCACKV,EAAUjC,KAAI,SAAChQ,EAAMe,GAClB,MAAqB,cAAdf,EAAKxB,MACuB,SAA/BwB,EAAK0C,MAAMqF,UAAUC,MACrB,kBAACiJ,GAAD,eACI/E,IAAKiG,EACL5T,KAAMyB,EACN8P,eAAgB9P,EAAK8P,eACrBlD,QAASA,EACTC,WAAYA,EACZxM,IAAG,mBAAcU,GACjBmH,OAAQH,EAAUG,QACdH,EARR,CASIC,MAAOI,EAAUyK,WACjB5K,UAAWG,EAAUwK,eACrBrN,QAAS6C,EAAUwK,kBAGvB,kBAACpC,GAAD,eACItE,IAAKiG,EACL5T,KAAMyB,EACN8P,eAAgB9P,EAAK8P,eACrBjD,WAAYA,EACZD,QAASA,EACTvM,IAAG,mBAAcU,IACbgH,QAM5B,IAAK,UACD,OACI,oCACKkK,EAAUjC,KAAI,SAAChQ,EAAMe,GAClB,OACI,kBAACkQ,GAAD,eACI/E,IAAKiG,EACL5T,KAAMyB,EACN8P,eAAgB9P,EAAK8P,eACrBlD,QAASA,EACTC,WAAYA,EACZxM,IAAG,mBAAcU,IACbgH,QAM5B,QACI,OAAO,MCrGR,SAASgL,GAAatS,GAAQ,IACjCsI,EAA8BtI,EAA9BsI,SAAUiK,EAAoBvS,EAApBuS,gBACdnG,EAAaL,GAAgB,IAAK,UAAW,WACjD,OACI,2BACKzD,EAASiH,KAAI,SAACzQ,EAAOwB,GAClB,OACI,uBAAGV,IAAG,kBAAaU,IACdxB,EAAMhB,KAAKyR,KAAI,SAACC,EAAGlP,GAChB,OACI,0BACIhB,EAAGkQ,EAEH5K,OAAQwH,EAAW9L,GACnByE,YAAW,UAAKwN,EAAgBxN,YAArB,MACXD,QAASyN,EAAgBzN,QACzBH,KAAM,OACNK,gBACmC,UAA/BuN,EAAgBtN,WACV,GACAsN,EAAgBvN,gBAE1BpF,IAAG,qBAAgBU,aCnBxC,SAASkS,GAAiBxS,GAAQ,IACrClC,EAA2BkC,EAA3BlC,KAAM2T,EAAqBzR,EAArByR,OAAQnJ,EAAatI,EAAbsI,SAChBoJ,EAAa5T,EAAKiB,OACxB,GAAmB,IAAf2S,EAAkB,OAAO,KAHe,MAIZnG,GAAkBkG,EAAQC,GAAlDhG,EAJoC,EAIpCA,SAAUC,EAJ0B,EAI1BA,UACZ4G,EAAkBd,EAAO7J,KAAKU,SALQ,EAMdmJ,EAAO7F,MAA7BjE,EANoC,EAMpCA,UAAWxB,EANyB,EAMzBA,OANyB,EASasL,EAAO7J,KAAK1F,MATzB,IASpC+F,kBAToC,MASvB,UATuB,MASZC,SAC5BkE,EAAaL,GAAgB2F,EAAYzJ,OAVD,MASD,UATC,GAWtCwK,EAAkBhB,EAAO7J,KAAKC,YAC9BsE,EAAUsG,EAAgBrH,QAAQ,UAAY,EAC9C0G,EAAUW,EAAgBrH,QAAQ,UAAY,EAC9CsH,EAAiC,WAAtBvM,EAAOC,WACxB,OACI,yBACIhE,UAAU,oBACVW,MAAK,UAAK/C,EAAM2S,YAAc3S,EAAM2S,YAAcjH,EAA7C,MACL3F,OAAM,UAAK/F,EAAM4S,aAAe5S,EAAM4S,aAAejH,EAA/C,MACNkH,QAAO,cAASnH,EAAT,YAAqBC,GAC5BmH,oBAAoB,YAEnBxK,EACG,kBAACgK,GAAD,CAAchK,SAAUA,EAAUiK,gBAAiBA,IACnD,KACHzU,EAAKyR,KAAI,SAACwD,EAAUzS,GACjB,OACI,uBAAGV,IAAG,mBAAcU,IAChB,2BACMwR,IAAYY,EACRK,EAASjU,MAAMyQ,KAAI,SAAC5P,EAAMW,GACtB,OACI,kBAAC8O,GAAD,eACI3D,IAAKiG,EACL5T,KAAM6B,EACN0P,eAAgB1P,EAAK0P,eACrBjD,WAAYA,EACZD,QAASA,EACTvM,IAAG,0BAAqBU,IACpBqH,OAIhBoL,EAASjU,MAAMyQ,KAAI,SAAC5P,GAChB,OAAO,kBAAC0O,GAAD,iBAAmB1O,EAAnB,CAAyBC,IAAG,eAAUD,EAAKF,WAGhE,2BACI,kBAAC8R,GAAD,CACI9F,IAAKiG,EACL5T,KAAMiV,EAASlU,MACf4S,OAAQA,EACRE,OAAO,U,wBC1DxB,SAASqB,GAAchT,GAAQ,IAClClC,EAA0BkC,EAA1BlC,KAAMyU,EAAoBvS,EAApBuS,gBACd,OACI,2BACKzU,EAAKe,MAAM0Q,KAAI,SAAChQ,EAAMe,GACnB,OACI,0BACIV,IAAG,UAAKL,EAAKE,GAAV,YAAgBa,GACnBb,GAAIF,EAAKE,GACT4F,EAAG9F,EAAK8F,EbQC,EaPTG,EAAGjG,EAAKiG,EbOC,EaNTb,KAAM4N,EAAgB1N,YACtBE,YAAW,MACXhC,MAAOkQ,GACPlN,OAAQkN,GACRnO,QAAS,SCTlB,SAASoO,GAAclT,GAAQ,IAEtClC,EASAkC,EATAlC,KACA2T,EAQAzR,EARAyR,OACAC,EAOA1R,EAPA0R,WACA3O,EAMA/C,EANA+C,MACAgD,EAKA/F,EALA+F,OACAoN,EAIAnT,EAJAmT,QACA7K,EAGAtI,EAHAsI,SACAiK,EAEAvS,EAFAuS,gBACAa,EACApT,EADAoT,YAVqC,EAaX3B,EAAO7F,MAA7BjE,EAbiC,EAajCA,UAAWxB,EAbsB,EAatBA,OAbsB,EAcgBsL,EAAO7J,KAAK1F,MAd5B,IAcjC+F,kBAdiC,MAcpB,UAdoB,MAcTC,SAC5BkE,EAAaL,GAAgB2F,EAAYzJ,OAfJ,MAcE,UAdF,GAgBnCwK,EAAkBhB,EAAO7J,KAAKC,YAC9BsE,EAAUsG,EAAgBrH,QAAQ,UAAY,EAC9C0G,EAAUW,EAAgBrH,QAAQ,UAAY,EAC9CsH,EAAiC,WAAtBvM,EAAOC,WACxB,OACI,yBACIhE,UAAU,oBACVW,MAAK,UAAK/C,EAAM2S,YAAc3S,EAAM2S,YAAc5P,EAA7C,MACLgD,OAAM,UAAK/F,EAAM4S,aAAe5S,EAAM4S,aAAe7M,EAA/C,MACN8M,QAAO,cAAS9P,EAAT,YAAkBgD,GACzB+M,oBAAoB,YAEnBxK,EACG8K,EACI,kBAACd,GAAD,CAAchK,SAAUA,EAAUiK,gBAAiBA,IAEnD,kBAACS,GAAD,CAAelV,KAAMqV,EAASZ,gBAAiBA,IAEnD,KACJ,2BACKT,IAAYY,EACP5U,EAAKgB,MAAMyQ,KAAI,SAAC5P,EAAMW,GAClB,OACI,kBAAC8O,GAAD,eACI3D,IAAKiG,EACL5T,KAAM6B,EACN0P,eAAgB1P,EAAK0P,eACrBjD,WAAYA,EACZD,QAASA,EACTvM,IAAG,0BAAqBU,IACpBqH,OAIhB7J,EAAKgB,MAAMyQ,KAAI,SAAC5P,GACZ,OAAO,kBAAC0O,GAAD,iBAAmB1O,EAAnB,CAAyBC,IAAG,eAAUD,EAAKF,WAqChE,2BACI,kBAAC8R,GAAD,CAAe9F,IAAKiG,EAAY5T,KAAMA,EAAKe,MAAO4S,OAAQA,EAAQE,OAAO,M,OC3F1E,SAAS0B,GAAkBrT,GAAQ,IAS1CsT,EATyC,EACTC,mBAAS,GADA,mBACtCC,EADsC,KAC1BC,EAD0B,OAEPF,oBAAS,GAFF,mBAEtCG,EAFsC,KAEzBC,EAFyB,OAGbJ,mBAAS,GAHI,mBAGtC7H,EAHsC,KAG5BkI,EAH4B,OAIXL,mBAAS,GAJE,mBAItC5H,EAJsC,KAI3BkI,EAJ2B,KAKrC/V,EAAmCkC,EAAnClC,KAAM2T,EAA6BzR,EAA7ByR,OAAO0B,EAAsBnT,EAAtBmT,QAAS7K,EAAatI,EAAbsI,SACxBwL,EAAarC,EAAO7J,KACpBS,EAAQyL,EAAW1L,UAAUC,MAC7B+K,EAAcU,EAAWjM,YAAYuD,QAAQ,aAAe,EAgClE,GA7BA2I,qBAAU,WACN,IAAMrV,EAAS6M,GAAkBkG,EAAQ3T,EAAKiB,QAC9C6U,EAAYlV,EAAOgN,UACnBmI,EAAanV,EAAOiN,aACrB,CAAC7N,EAAKiB,OAAQ0S,EAAO3L,MAAO2L,EAAO7J,OAEtCmM,qBAAU,WACFT,GACAU,aAAaV,GAGjBK,GAAe,GACfF,EAAc,GACdQ,YAAW,WAEPN,GAAe,KAChBtL,KACJ,CAACrI,EAAMlC,OAEViW,qBAAU,WACNG,MACD,CAACV,IAEJO,qBAAU,WACFL,GACAQ,MAEL,CAACR,IAEgB,IAAhB5V,EAAKiB,OAAc,OAAO,KAE9B,SAASoV,IACLR,GAAgBD,GAGpB,SAASQ,IAEDZ,GACAU,aAAaV,GAEjBA,EAAUW,YAAW,WACjB,GAAIP,EAAa,CACb,IAAMjI,EAAM3N,EAAKiB,OAEjB0U,GADmBD,EAAa,GAAK/H,MAG1CpD,GAEP,OAAOvK,EAAK0V,GACR,oCAEI,kBAACN,GAAD,CACIpV,KAAMkC,EAAMlC,KAAK0V,GACjB9B,WAAY5T,EAAKiB,OACjB0S,OAAQA,EACR1L,OAAQ4F,EACRgH,YAAa3S,EAAM2S,YACnBC,aAAc5S,EAAM4S,aACpB7P,MAAO2I,EACPyH,QAAWA,EACX7K,SAAYA,EACZiK,gBAAmBuB,EAAWxL,SAC9B8K,YAAeA,IAEjBpT,EAAMoU,SA0BJ,KAzBA,yBAAKhS,UAAU,yBACVsR,EACG,kBAACW,GAAA,EAAD,CACIjS,UAAU,mBACVC,QAAS8R,IAGb,kBAACG,GAAA,EAAD,CACIlS,UAAU,mBACVC,QAAS8R,IAGjB,kBAAC,IAAD,CACIlS,MAAO,CACHc,MAAO,QACPQ,WAAY,QAEhBgR,UAAU,EACVjT,MAAOkS,EACPgB,IAAK,EACLrR,IAAKnD,EAAMlC,KAAKiB,OAAS,EACzB0V,gBAAc,EACdC,iBAAkB,aAKlC,KCxGO,SAASC,GAAY3U,GAChC,GAAkB,IAAdA,EAAMyL,IAAW,OAAO,KAC5B,IAAMgH,EAAkBzS,EAAMyR,OAAO7J,KAAKC,YAGpC+M,EAAa,IAAI3E,MAAMjQ,EAAMyL,KAAK9G,KAAK,GALN,EAQkB3E,EAAMyR,OAAO7J,KAAK1F,MARpC,IAQ/B+F,kBAR+B,MAQlB,UARkB,MAQPC,gBARO,MAQI,UARJ,EASnCkE,EAAaL,GAAgB/L,EAAMyL,IAAKxD,EAAYC,GATjB,EAUqBlI,EAAMyR,OAAO7F,MAAjE5F,EAV+B,EAU/BA,UAAWC,EAVoB,EAUpBA,WAAYC,EAVQ,EAURA,OAAQyB,EAVA,EAUAA,UAAUxB,EAVV,EAUUA,OAE3CgG,EAAUsG,EAAgBrH,QAAQ,UAAY,EAC9C0G,EAAU3F,GAAWsG,EAAgBrH,QAAQ,UAAY,EACzDsH,EAAiC,WAAtBvM,EAAOC,WAElBsF,EAAW1F,EAAqB,EAATE,EACvByF,EAAY1F,EAAsB,EAATC,EAE/B,OACI,qCACMlG,EAAMoU,UAAYjI,EAChB,yBACIlK,MAAO,CACHc,MAAO,OACPgD,OAAQ,OACRvD,QAAS,OACTC,eAAgB,aAChByD,OAAQ,SAGZ,yBACI9D,UAAU,cACVH,MAAO,CACHiE,OAAQ,WAHhB,KAQA,yBACI9D,UAAU,aACVW,MAAK,UAnCC,GAmCwB/C,EAAMyL,IAA/B,MACL1F,OAAQ,OACR8M,QAAO,cArCD,GAqC8B7S,EAAMyL,IAAnC,OACPqH,oBAAoB,YAEnB8B,EAAWrF,KAAI,SAACwD,EAAUzS,GACvB,OACI,0BACIV,IAAG,oBAAeU,GAClB+E,EA5CN,GA4CS/E,EACHkF,EAAG,EACHb,KAAMyH,EAAW9L,GACjByC,MA/CN,GAgDMgD,OAhDN,SAqDV,yBACI9D,MAAO,CACHiE,OAAQ,WAGXlG,EAAMyL,IAAM,IAGrB,KACJ,yBACIrJ,UAAU,oBACVW,MAAK,UAAK/C,EAAM2S,YAAc3S,EAAM2S,YAAcjH,EAA7C,MACL3F,OAAM,UAAK/F,EAAM4S,aAAe5S,EAAM4S,aAAejH,EAA/C,MACNkH,QAAO,cAASnH,EAAT,YAAqBC,GAC5BmH,oBAAoB,YAIhBhB,IAAYY,EACN1S,EAAMlC,KAAKgB,MAAMyQ,KAAI,SAACwD,EAAUzS,GAC5B,OACI,kBAAC8O,GAAD,eACI3D,IAAKzL,EAAMyL,IACX3N,KAAMiV,EACN1D,eAAgB0D,EAAS1D,eACzBjD,WAAYA,EACZD,QAASA,EACTvM,IAAG,0BAAqBU,IACpBqH,OAIhB3H,EAAMlC,KAAKgB,MAAMyQ,KAAI,SAACwD,EAAUzS,GAC5B,OAAO,kBAAC+N,GAAD,iBAAmB0E,EAAnB,CAA6BnT,IAAG,eAAUmT,EAAStT,UAGxE,kBAAC8R,GAAD,CACI9F,IAAOzL,EAAMyL,IACb3N,KAAQkC,EAAMlC,KAAKe,MACnB4S,OAAUzR,EAAMyR,OAChBE,OAAO,MCnGZ,SAASkD,GAAmB7U,GAAQ,IACvC2S,EAAuG3S,EAAvG2S,YAAYC,EAA2F5S,EAA3F4S,aAAakC,EAA8E9U,EAA9E8U,WAAYxM,EAAkEtI,EAAlEsI,SAAUyM,EAAwD/U,EAAxD+U,UAAWtD,EAA6CzR,EAA7CyR,OAAQhG,EAAqCzL,EAArCyL,IAAKuJ,EAAgChV,EAAhCgV,UADjC,EACiEhV,EAArBoU,gBAD5C,SAE9C,OAAQU,GACJ,IAAK,WACD,OAAO,kBAACtC,GAAD,CACCG,YAAaA,EACbC,aAAcA,EACdtK,SAAUA,EACVxK,KAAMiX,EACNtD,OAAQA,IAEpB,IAAK,YACD,OAAO,kBAAC4B,GAAD,CACCV,YAAaA,EACbC,aAAcA,EACdtK,SAAUA,EACVxK,KAAMiX,EACN5B,QAAS6B,EACTvD,OAAQA,EACR2C,SAAUA,IAEtB,IAAK,MACD,OAAO,kBAACO,GAAD,CACChC,YAAaA,EACbC,aAAcA,EACdnH,IAAKA,EACL3N,KAAMkX,EACNvD,OAAQA,EACR2C,SAAUA,IACtB,QACI,OAAO,M,cC7BNa,GAAgB,SAACC,EAAMC,GAChC,IADyC,EACrCC,EAAe,IAAIC,IAAIH,GADc,cAExBA,GAFwB,IAEzC,2BAAuB,CAAC,IAAfI,EAAc,QACdH,EAAKI,IAAID,IACVF,EAAaI,OAAOF,IAJa,8BAOzC,OAAOF,GAGEK,GAAc,SAACP,EAAMC,GAC9B,IADuC,EACnCO,EAAa,IAAIL,IAAIH,GADc,cAEtBC,GAFsB,IAEvC,2BAAuB,CAAC,IAAfG,EAAc,QACnBI,EAAWF,OAAOF,IAHiB,8BAKvC,OAAOI,GAuHJ,SAASC,GAAiB9W,EAAOC,EAAOiE,EAAOgD,GAClD,IAII6P,EAJAC,EAAO9S,EACP+S,GAAQ,EACRC,EAAOhQ,EACPiQ,GAAQ,EAKZnX,EAAMQ,SAAQ,SAACE,GACPA,EAAK8F,EAAIwQ,IACTA,EAAOtW,EAAK8F,GAEZ9F,EAAK8F,EAAIyQ,IACTA,EAAOvW,EAAK8F,GAEZ9F,EAAKiG,EAAIuQ,IACTA,EAAOxW,EAAKiG,GAEZjG,EAAKiG,EAAIwQ,IACTA,EAAOzW,EAAKiG,MAGpB,IAAMyQ,GAAUH,EAAOD,IAAS9S,EAAQmD,IAClCgQ,GAAUF,EAAOD,IAAShQ,EAASG,IACzC0P,EAAQK,EAASC,EAASD,EAASC,EACnC,IAAMC,EAAaN,EApBJ,GAqBTO,EAAaL,EArBJ,GAsBTM,EAAe,GAErBxX,EAAMQ,SAAQ,SAACE,GAEXA,EAAK8F,GAAK8Q,EACV5W,EAAKiG,GAAK4Q,EAEV7W,EAAK8F,GAAK9F,EAAK8F,EA7BJ,IA6BkBuQ,EA7BlB,GA8BXrW,EAAKiG,GAAKjG,EAAKiG,EA9BJ,IA8BkBoQ,EA9BlB,GA+BXS,EAAa9W,EAAKE,IAAM,CACpB4F,EAAG9F,EAAK8F,EACRG,EAAGjG,EAAKiG,MAGhB1G,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAOwF,EAAIgR,EAAa1W,EAAKE,OAAOJ,IAAI4F,EAC7C1F,EAAKE,OAAO2F,EAAI6Q,EAAa1W,EAAKE,OAAOJ,IAAI+F,EAC7C7F,EAAKG,OAAOuF,EAAIgR,EAAa1W,EAAKG,OAAOL,IAAI4F,EAC7C1F,EAAKG,OAAO0F,EAAI6Q,EAAa1W,EAAKG,OAAOL,IAAI+F,KAI9C,IAAM8Q,GAAiB,SAACtB,EAAWxJ,GAAa,IAC7C3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MADqC,EAER0M,EAAQI,MAA1C5F,EAF0C,EAE1CA,UAAWC,EAF+B,EAE/BA,WAAYC,EAFmB,EAEnBA,OACzBqQ,EAAI1X,EAAME,OACVyX,GAAQvQ,EAAsB,EAATC,GAAcqQ,EACrCE,EAAW,GACf5X,EAAMQ,SAAQ,SAACE,EAAMe,GACjBf,EAAKiG,EAAIgR,EAAOlW,EAAQ4F,EACxB3G,EAAK8F,EAAIW,EAAY,EACrByQ,EAASlX,EAAKE,IAAd,eAAyBF,MAE7BT,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAS4W,EAAS9W,EAAKE,QAC5BF,EAAKG,OAAS2W,EAAS9W,EAAKG,YAIvB4W,GAAkB,SAAC1B,EAAW2B,EAAYnL,GAAY,IAEzD3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAFkD,EAGrB0M,EAAQI,MAA1C5F,EAHuD,EAGvDA,UAAWC,EAH4C,EAG5CA,WAAYC,EAHgC,EAGhCA,OACzBuF,EAAM5M,EAAME,OACZyX,GAAQvQ,EAAsB,EAATC,GAAcuF,EACrCmL,EAAgB,GAChBC,EAAiB,GACjBC,EAAc,GAWlB,IAVAjY,EAAMQ,SAAQ,SAACE,EAAMe,GACjBf,EAAKiG,EAAIgR,EAAOlW,EAAQ4F,EACxB3G,EAAK8F,EAAIa,EACT0Q,EAAcrX,EAAKE,IAAMF,EACzB,IAAIwX,EAAQC,YAAYzX,GACxBwX,EAAM1R,EAAIW,EAAYE,EACtB6Q,EAAMtX,GAAN,YAAgBF,EAAKE,IACrBqX,EAAYnK,KAAKoK,GACjBF,EAAetX,EAAKE,IAAMsX,KAEvBD,EAAY/X,OAAS,GAAG,CAC3B,IAAIgY,EAAQD,EAAYG,MACxBpY,EAAM8N,KAAKoK,GAEf,IAAIG,EAAoB,GAClBC,EAAc,GAepB,IAdArY,EAAMO,SAAQ,SAACM,GACX,IAAMyX,EAAUzX,EAAKE,OACfwX,EAAW1X,EAAKG,OACtBH,EAAKE,OAAS+W,EAAcQ,GAC5BzX,EAAKG,OAAS+W,EAAeQ,GAC7BF,EAAYxX,EAAKF,IAAME,EACvB,IAAI2X,EAAQN,YAAYrX,GACxB2X,EAAM7X,GAAN,YAAgBE,EAAKF,IACrB6X,EAAMzX,OAAS+W,EAAcS,GAC7BC,EAAMxX,OAAS+W,EAAeO,GAC9BD,EAAYG,EAAM7X,IAAM6X,EACxBJ,EAAkBvK,KAAK2K,MAGrBJ,EAAkBnY,OAAO,GAAE,CAC7B,IAAMuY,EAAQJ,EAAkBD,MAChCnY,EAAM6N,KAAK2K,GAGf,IAAIC,EAAmBC,OAAOC,OAAOd,GACrCY,EAAiBlY,SAAQ,SAACuM,EAAO8L,GAE7B,IAAIC,EAAY,GAShB,IARAH,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChCqY,GAAOrY,EAAMqX,EAAcrX,EAAKE,KAChC,IAAIsX,EAAQC,YAAYzX,GACxBwX,EAAM1R,EAAIW,EAAYE,EACtB6Q,EAAMtX,GAAN,YAAgBF,EAAKE,IACrBkY,EAAUhL,KAAKoK,MAGZY,EAAU5Y,OAAS,GAAG,CACzB,IAAIgY,EAAQY,EAAUV,MACtBrL,EAAM/M,MAAMkY,EAAMtX,IAAMsX,EAG5B,IAAIc,EAAiB,GASrB,IAPAL,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GAChC,IAAMmY,EAAad,YAAYrX,GAC/BiY,GAAOjY,EAAMqX,YAAYG,EAAYxX,EAAKF,MAC1CqY,EAAWrY,GAAX,YAAqBE,EAAKF,IAC1BmY,GAAOE,EAAYd,YAAYG,EAAYW,EAAWrY,MACtDoY,EAAiBlL,KAAKmL,MAEpBD,EAAiB9Y,OAAO,GAAE,CAC5B,IAAMgZ,EAASF,EAAiBZ,MAChCrL,EAAM9M,MAAMiZ,EAAOtY,IAAMsY,MAKjC,IAAMC,EAAcxM,EAAQ5D,KAAKW,SAASP,QAC1C,GAAIwD,EAAQ5D,KAAKC,YAAYuD,QAAQ,aAAe,EAAG,CACnD,IAAM6M,EAAcV,EAAiBxY,OAC/BmZ,EAAmBC,GAAgB3M,EAASyM,GAC9B,SAAhBD,EACAT,EAAiBlY,SAAQ,SAACuM,EAAO8L,GAAgB,IAAD,EACbQ,EAAiBR,GAArCU,EADiC,EACpC/S,EAAagT,EADuB,EAC1B7S,EAClBgS,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChCA,EAAK8F,EAAI9F,EAAK8F,EAAI+S,EAClB7Y,EAAKiG,EAAIjG,EAAKiG,EAAI6S,QAGH,SAAhBL,EACPT,EAAiBlY,SAAQ,SAACuM,EAAO8L,GAAgB,IAAD,EACbQ,EAAiBR,GAArCU,EADiC,EACpC/S,EAAagT,EADuB,EAC1B7S,EAClBgS,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GAChCA,EAAKE,OAAOwF,GAAK+S,EACjBzY,EAAKG,OAAOuF,GAAK+S,EACjBzY,EAAKE,OAAO2F,GAAK6S,EACjB1Y,EAAKG,OAAO0F,GAAK6S,QAIzBd,EAAiBlY,SAAQ,SAACuM,EAAO8L,GAAgB,IAAD,EACbQ,EAAiBR,GAArCU,EADiC,EACpC/S,EAAagT,EADuB,EAC1B7S,EAClBgS,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChCA,EAAK8F,EAAI9F,EAAK8F,EAAI+S,EAClB7Y,EAAKiG,EAAIjG,EAAKiG,EAAI6S,KAEtBb,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GAChCA,EAAKE,OAAOwF,GAAK+S,EACjBzY,EAAKG,OAAOuF,GAAK+S,EACjBzY,EAAKE,OAAO2F,GAAK6S,EACjB1Y,EAAKG,OAAO0F,GAAK6S,UAMxBC,GAAc,SAACtD,EAAWxJ,GAAa,IAC1C3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAYPhB,EAAO,CACTe,MAZWA,EAAM0Q,KAAI,SAAChQ,GACtB,MAAO,CACHE,GAAIF,EAAKE,OAWb8Y,MARWzZ,EAAMyQ,KAAI,SAAC5P,GACtB,MAAO,CACHE,OAAQF,EAAKE,OACbC,OAAQH,EAAKG,YAV0B,EAiBb0L,EAAQI,MAAlC5F,EAjBuC,EAiBvCA,UAAWC,EAjB4B,EAiB5BA,WACf2F,EAAQ,IAAI4M,WAAGC,MAAM,CACrBC,UAAW,qBACX3V,MAAOiD,EACPD,OAAQE,EAGRE,OAAQ,CACJpI,KAAM,QACNoJ,QAAS,KACTwR,SAAU,CAAC,EAAG,IACdC,QAAS,EACTC,QAAS,KAGjBjN,EAAM9N,KAAKA,GACX8N,EAAMkN,SAjCyC,IAkChCC,EAAWnN,EAAMoN,IAAIlb,KAA5Be,MACJ4X,EAAW,GACf5X,EAAMQ,SAAQ,SAACE,EAAMkN,GACjBlN,EAAK8F,EAAI0T,EAAOtM,GAAGpH,EACnB9F,EAAKiG,EAAIuT,EAAOtM,GAAGjH,EACnBiR,EAASlX,EAAKE,IAAd,eAAyBF,MAE7BT,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAS4W,EAAS9W,EAAKE,QAC5BF,EAAKG,OAAS2W,EAAS9W,EAAKG,WAEhC6V,GAAiB9W,EAAOC,EAAOkH,EAAWC,IAGjCgT,GAAe,SAACjE,EAAW2B,EAAYnL,GAAa,IAAD,EAClBA,EAAQI,MAA1C5F,EADoD,EACpDA,UAAWC,EADyC,EACzCA,WAAYC,EAD6B,EAC7BA,OAD6B,EAE5BsF,EAAQ5D,KAAKW,SAArCC,EAFoD,EAEpDA,UAAWC,EAFyC,EAEzCA,UACb5J,EAAUmW,EAAVnW,MAGFqa,EAAW,GACf1B,OAAOC,OAAOd,GAAYtX,SAAQ,SAACuM,EAAM8L,GACrCF,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChC2Z,EAASvM,KAAKpN,EAAK+B,aAI3B,IAAM6X,EAAUnN,gBAEXC,OAAOD,SAAUkN,IACjBhW,MAAM,CAACgD,EAAQD,EAAaC,IAEjCrH,EAAMQ,SAAQ,SAACE,GACXA,EAAK8F,EAAIW,EAAU,EACnBzG,EAAKiG,EAAI2T,EAAQ5Z,EAAK+B,UAG1BkW,OAAOC,OAAOd,GAAYtX,SAAQ,SAACuM,EAAM8L,GACrCF,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChCA,EAAK8F,EAAIW,EAAU,EAAE0R,EAAWlP,EAChCjJ,EAAKiG,EAAI2T,EAAQ5Z,EAAK+B,OAASoW,EAAWjP,SAKzC2Q,GAAY,SAACpE,EAAWxJ,GAAa,IACxC3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAYPhB,EAAO,CACTe,MAZWA,EAAM0Q,KAAI,SAAChQ,GACtB,MAAO,CACHE,GAAIF,EAAKE,OAWb8Y,MARWzZ,EAAMyQ,KAAI,SAAC5P,GACtB,MAAO,CACHE,OAAQF,EAAKE,OACbC,OAAQH,EAAKG,YAVwB,EAiBX0L,EAAQI,MAAlC5F,EAjBqC,EAiBrCA,UAAWC,EAjB0B,EAiB1BA,WACf2F,EAAQ,IAAI4M,WAAGC,MAAM,CACrBC,UAAW,qBACX3V,MAAOiD,EACPD,OAAQE,EAGRE,OAAQ,CACJpI,KAAM,SAGd6N,EAAM9N,KAAKA,GACX8N,EAAMkN,SA7BuC,IA8B9BC,EAAUnN,EAAMoN,IAAIlb,KAA3Be,MACJ4X,EAAW,GACf5X,EAAMQ,SAAQ,SAACE,EAAMkN,GACjBlN,EAAK8F,EAAI0T,EAAOtM,GAAGpH,EACnB9F,EAAKiG,EAAIuT,EAAOtM,GAAGjH,EACnBiR,EAASlX,EAAKE,IAAd,eAAyBF,MAE7BT,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAS4W,EAAS9W,EAAKE,QAC5BF,EAAKG,OAAS2W,EAAS9W,EAAKG,WAEhC6V,GAAiB9W,EAAOC,EAAOkH,EAAWC,IAGjCoT,GAAa,SAACrE,EAAWxJ,GAAa,IACzC3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAYPhB,EAAO,CACTe,MAZWA,EAAM0Q,KAAI,SAAChQ,GACtB,MAAO,CACHE,GAAIF,EAAKE,OAWb8Y,MARWzZ,EAAMyQ,KAAI,SAAC5P,GACtB,MAAO,CACHE,OAAQF,EAAKE,OACbC,OAAQH,EAAKG,YAVyB,EAiBJ0L,EAAQI,MAA1C5F,EAjBsC,EAiBtCA,UAAWC,EAjB2B,EAiB3BA,WAAYE,EAjBe,EAiBfA,OAC3ByF,EAAQ,IAAI4M,WAAGC,MAAM,CACrBC,UAAW,qBACX3V,MAAOiD,EACPD,OAAQE,EAGRE,OAAQ,CACJpI,KAAM,OACNub,MAAO,CAAC,EAAG,GACXC,UAAU,EACVC,KAAMrT,EAAOM,KAAK+S,KAClBC,OAAQ,YAGhB7N,EAAM9N,KAAKA,GACX8N,EAAMkN,SAjCwC,IAkC/BC,EAAWnN,EAAMoN,IAAIlb,KAA5Be,MACJ4X,EAAW,GACf5X,EAAMQ,SAAQ,SAACE,EAAMkN,GACjBlN,EAAK8F,EAAI0T,EAAOtM,GAAGpH,EACnB9F,EAAKiG,EAAIuT,EAAOtM,GAAGjH,EACnBiR,EAASlX,EAAKE,IAAd,eAAyBF,MAE7BT,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAS4W,EAAS9W,EAAKE,QAC5BF,EAAKG,OAAS2W,EAAS9W,EAAKG,WAEhC6V,GAAiB9W,EAAOC,EAAOkH,EAAWC,IAGjCyT,GAAiB,SAAC1E,EAAWxJ,GAAa,IAC7C3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAYPhB,EAAO,CACTe,MAZWA,EAAM0Q,KAAI,SAAChQ,GACtB,MAAO,CACHE,GAAIF,EAAKE,OAWb8Y,MARWzZ,EAAMyQ,KAAI,SAAC5P,GACtB,MAAO,CACHE,OAAQF,EAAKE,OACbC,OAAQH,EAAKG,YAV6B,EAiBhB0L,EAAQI,MAAlC5F,EAjB0C,EAiB1CA,UAAWC,EAjB+B,EAiB/BA,WACbwB,EAASsF,KAAKyH,IAAIxO,EAAWC,GAAc,EAC7C2F,EAAQ,IAAI4M,WAAGC,MAAM,CACrBC,UAAW,qBACX3V,MAAgB,EAAT0E,EACP1B,OAAiB,EAAT0B,EAGRtB,OAAQ,CACJpI,KAAM,WACN0J,OAAQA,EACRwF,OAAQ,CAACxF,EAAQA,MAGzBmE,EAAM9N,KAAKA,GACX8N,EAAMkN,SAhC4C,IAiCnCC,EAAWnN,EAAMoN,IAAIlb,KAA5Be,MACJ4X,EAAW,GACf5X,EAAMQ,SAAQ,SAACE,EAAMkN,GACjBlN,EAAK8F,EAAI0T,EAAOtM,GAAGpH,EACnB9F,EAAKiG,EAAIuT,EAAOtM,GAAGjH,EACnBiR,EAASlX,EAAKE,IAAd,eAAyBF,MAE7BT,EAAMO,SAAQ,SAACM,GACXA,EAAKE,OAAS4W,EAAS9W,EAAKE,QAC5BF,EAAKG,OAAS2W,EAAS9W,EAAKG,WAEhC6V,GAAiB9W,EAAOC,EAAOkH,EAAWC,IAGjC0T,GAAe,SAACC,EAAUjD,EAAYnL,GAAY,IAErD3M,EAAiB+a,EAAjB/a,MAAOC,EAAU8a,EAAV9a,MAF8C,EAGjB0M,EAAQI,MAA1C5F,EAHmD,EAGnDA,UAAWC,EAHwC,EAGxCA,WAAYC,EAH4B,EAG5BA,OACzBnD,EAAQiD,EAAYC,EAAaD,EAAYC,EAC7CwF,EAAM5M,EAAME,OACZ8a,EAAY9W,GAAS0I,EAAM,GAC7BiF,EAASmJ,EAAY,EAAI3T,EACzByK,EAASkJ,EAAY,EAAI3T,EAEzB4T,EAAc,GAClBjb,EAAMQ,SAAQ,SAACE,EAAMe,GACjBf,EAAKiG,EAAImL,EACTpR,EAAK8F,EAAIqL,GAAUpQ,EAAQ,GAAKuZ,EAChCC,EAAYva,EAAKE,IAAjB,eAA4BF,MAIhC,IAAIwa,EAAS/C,YAAYnY,GACrBmb,EAAc,GAClBD,EAAO1a,SAAQ,SAACE,EAAMe,GAClBf,EAAK8F,EAAIqL,EACTnR,EAAKiG,EAAImL,GAAUrQ,EAAQ,GAAKuZ,EAChCG,EAAYza,EAAKE,IAAjB,eAA4BF,GAC5BA,EAAKE,GAAL,YAAeF,EAAKE,IACpBF,EAAK4F,OAAL,YAAmB5F,EAAK4F,QAExBtG,EAAM8N,KAAKpN,MAGf,IAAI0a,EAAgB,GAChBC,EAAgB,GACpBpb,EAAMO,SAAQ,SAACM,EAAMW,GACjB,IAAI6Z,EAAW,2BACRxa,GADQ,IAEXF,GAAG,YAAD,OAAcE,EAAKF,IACrB1B,KAAM,YACNsH,EAAGyU,EAAYna,EAAKE,QAAQwF,EAC5BG,EAAGwU,EAAYra,EAAKG,QAAQ0F,IAEhCyU,EAActa,EAAKF,IAAM0a,EACzB,IAAIC,EAAW,2BACRza,GADQ,IAEXF,GAAG,YAAD,OAAcE,EAAKF,IACrB1B,KAAM,YACNsH,EAAGyU,EAAYna,EAAKG,QAAQuF,EAC5BG,EAAGwU,EAAYra,EAAKE,QAAQ2F,IAEhC0U,EAAcva,EAAKF,IAAM2a,EACzBvb,EAAM8N,KAAKwN,GACXtb,EAAM8N,KAAKyN,MAGfR,EAAS9a,MAAQ,GAEjB,IADA,IAAMub,EAAWT,EAAS9a,MACjB2N,EAAI,EAAGA,EAAIhB,EAAM,EAAGgB,IACzB4N,EAAS1N,KAAK,CACVlN,GAAG,UAAD,OAAYgN,GACd1O,KAAM,YACN8B,OAAQ,CACJwF,EAAGa,EACHV,EAAGU,GAAUuG,EAAI,GAAKoN,GAE1B/Z,OAAQ,CACJuF,EAAGa,EAASnD,EACZyC,EAAGU,GAAUuG,EAAI,GAAKoN,GAE1BxK,eAAgB,GAChBd,OAAQ,GACRtM,MAAO,KAEXoY,EAAS1N,KAAK,CACVlN,GAAG,UAAD,OAAYgN,GACd1O,KAAM,YACN8B,OAAQ,CACJwF,EAAGa,GAAUuG,EAAI,GAAKoN,EACtBrU,EAAGU,GAEPpG,OAAQ,CACJuF,EAAGa,GAAUuG,EAAI,GAAKoN,EACtBrU,EAAGU,EAASnD,GAEhBsM,eAAgB,GAChBd,OAAQ,GACRtM,MAAO,KAKf,IAAMgW,EAAcT,OAAOC,OAAOd,GAAY5X,OACxCmZ,EAAmBC,GAAgB3M,EAASyM,GAKlDT,OAAOC,OAAOd,GAAYtX,SAAQ,SAACuM,EAAO8L,GACtC,IAAM4C,EAAW,GACXC,EAAW,GACXC,EAAiB,GACjBC,EAAiB,GA4CvB,IAAK,IAAI7a,KA3CT4X,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChCqY,GAAOrY,EAAMua,EAAYva,EAAKE,KAK9Bib,GAAmBnb,EAAMiM,EAAS0M,EAAiBR,IAEnD4C,EAAS/a,EAAKE,IAAMF,EACpB,IAAIob,EAAQ3D,YAAYzX,GACxBqY,GAAO+C,EAAOX,EAAYza,EAAKE,KAG/Bib,GAAmBC,EAAOnP,EAAS0M,EAAiBR,IACpDiD,EAAMlb,GAAN,YAAgBF,EAAKE,IACrBkb,EAAMxV,OAAN,YAAoB5F,EAAK4F,QACzBoV,EAAShb,EAAKE,IAAMkb,KAIxBnD,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GAChC,IAAIwa,EAAW,2BACRxa,GADQ,IAEXF,GAAG,YAAD,OAAcE,EAAKF,IACrB1B,KAAM,YACNsH,EAAGiV,EAAS3a,EAAKE,QAAQwF,EACzBG,EAAG+U,EAAS5a,EAAKG,QAAQ0F,EACzB6J,eAAgB6K,EAAcva,EAAKF,IAAI4P,eACvCuL,WAAYV,EAAcva,EAAKF,IAAImb,aAEvCJ,EAAeL,EAAY1a,IAAM0a,EACjC,IAAIC,EAAW,2BACRza,GADQ,IAEX5B,KAAM,YACN0B,GAAG,YAAD,OAAcE,EAAKF,IACrB4F,EAAGiV,EAAS3a,EAAKG,QAAQuF,EACzBG,EAAG+U,EAAS5a,EAAKE,QAAQ2F,EACzB6J,eAAgB6K,EAAcva,EAAKF,IAAI4P,eACvCuL,WAAYV,EAAcva,EAAKF,IAAImb,aAEvCH,EAAeL,EAAY3a,IAAM2a,KAGrBG,EACZ3O,EAAM/M,MAAM0b,EAAS3a,GAAKH,IAAM8a,EAAS3a,GAE7C,IAAK,IAAIH,KAAM+a,EACX5O,EAAM/M,MAAMY,GAAM+a,EAAe/a,GAErC,IAAK,IAAIA,KAAMgb,EACX7O,EAAM/M,MAAMY,GAAMgb,EAAehb,GAGrCmM,EAAM9M,MAAQ,GAEd,IADA,IAAM+b,EAAajP,EAAM9M,MAChB2N,EAAI,EAAGA,EAAIhB,EAAM,EAAGgB,IAAK,CAC9B,IAAMqO,EAAQ,CACVrb,GAAG,UAAD,OAAYgN,GACd1O,KAAM,YACN8B,OAAQ,CACJwF,EAAGa,EACHV,EAAGU,GAAUuG,EAAI,GAAKoN,GAE1B/Z,OAAQ,CACJuF,EAAGa,EAASnD,EACZyC,EAAGU,GAAUuG,EAAI,GAAKoN,GAE1BxK,eAAgB,GAChBd,OAAQ,GACRtM,MAAO,IAEX8Y,GAAmBD,EAAOtP,EAAS0M,EAAiBR,IACpDmD,EAAWC,EAAMrb,IAAMqb,EACvB,IAAME,EAAQ,CACVvb,GAAG,UAAD,OAAYgN,GACd1O,KAAM,YACN8B,OAAQ,CACJwF,EAAGa,GAAUuG,EAAI,GAAKoN,EACtBrU,EAAGU,GAEPpG,OAAQ,CACJuF,EAAGa,GAAUuG,EAAI,GAAKoN,EACtBrU,EAAGU,EAASnD,GAEhBsM,eAAgB,GAChBd,OAAQ,GACRtM,MAAO,IAEX8Y,GAAmBC,EAAOxP,EAAS0M,EAAiBR,IACpDmD,EAAWG,EAAMvb,IAAMub,OAKtB7C,GAAkB,SAAC3M,EAASC,GACrC,IAAsD,IAAlDD,EAAQ5D,KAAKC,YAAYuD,QAAQ,YACjC,MAAO,GAFkC,MAIRI,EAAQ5D,KAAKW,SAA5CC,EAJuC,EAIvCA,UAAWC,EAJ4B,EAI5BA,UAAW1K,EAJiB,EAIjBA,KACtBW,EAAS,GACf,GAAa,aAATX,EAAqB,CAGrB,IAFA,IAAMkd,EAAS,GACTC,EAAS,GACNzO,EAAI,EAAGA,EAAIhB,EAAKgB,IACrBwO,EAAOtO,KAAK,CACRlN,GAAIgN,EAAI,KAEZyO,EAAOvO,KAAK,CACR9M,OAAQ4M,EAAI,GACZ3M,OAAQ,UAAA2M,EAAI,IAAMhB,EAASgB,EAAI,EAASA,EAAI,KAGpD,IAAM3O,EAAO,CACTe,MAAOoc,EACP1C,MAAO2C,GAdU,EAgBa1P,EAAQI,MAAlC5F,EAhBa,EAgBbA,UAAWC,EAhBE,EAgBFA,WAEfwB,GADYzB,EAAYC,EAAaD,EAAYC,GAC7BwF,EAAO,EAC3BG,EAAQ,IAAI4M,WAAGC,MAAM,CACrBC,UAAW,qBACX3V,MAAgB,EAAT0E,EACP1B,OAAiB,EAAT0B,EAGRtB,OAAQ,CACJpI,KAAM,WACN0J,OAAQA,EACRwF,OAAQ,CAACxF,EAAQA,MAGzBmE,EAAM9N,KAAKA,GACX8N,EAAMkN,SACoBlN,EAAMoN,IAAIlb,KAA5Be,MACDQ,SAAQ,SAAC8b,EAAO7a,GACnB5B,EAAOiO,KAAK,CACRtH,EAAG8V,EAAM9V,EACTG,EAAG2V,EAAM3V,YAIjB,IAAK,IAAIiH,EAAI,EAAGA,EAAIhB,EAAKgB,IACrB/N,EAAOiO,KAAK,CACRtH,EAAGoH,EAAIjE,EACPhD,EAAGiH,EAAIhE,IAInB,OAAO/J,GAEEqc,GAAqB,SAACpb,EAAM6L,EAAS4P,IACQ,IAAlD5P,EAAQ5D,KAAKC,YAAYuD,QAAQ,cAIrB,SADEI,EAAQ5D,KAAKW,SAAzBP,UAEF0S,GAAmB/a,EAAKE,OAAQ2L,EAAS4P,GACzCV,GAAmB/a,EAAKG,OAAQ0L,EAAS4P,MAIpCV,GAAqB,SAACnb,EAAMiM,EAAS4P,IACQ,IAAlD5P,EAAQ5D,KAAKC,YAAYuD,QAAQ,cAGrC7L,EAAK8F,GAAK+V,EAAa/V,EACvB9F,EAAKiG,GAAK4V,EAAa5V,IAcd6V,GAAgB,SAACrG,EAAWxJ,GAAa,IAC5C3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MADoC,EAEf0M,EAAQI,MAAlC5F,EAFyC,EAEzCA,UAAWC,EAF8B,EAE9BA,WACnB+F,kBAAmBnN,GACdyc,MACG,OACAtP,YAAalN,GAAOW,IAAG,SAACH,GAAD,OAAOA,EAAEG,OAEnC6b,MAAM,SAAUtP,mBAChBsP,MAAM,SAAUtP,cAAehG,EAAY,EAAGC,EAAa,IAE3DsV,KAAK,IACLC,OACL7F,GAAiB9W,EAAOC,EAAOkH,EAAWC,IA2CjCwV,GAAc,SAACzG,EAAW2B,EAAYnL,GAC/C,IAAIlD,EAAW,GAsCf,MArCsC,SAAlCkD,EAAQ5D,KAAKW,SAASP,QAEtBwP,OAAOC,OAAOzC,EAAUnW,OAAOQ,SAAQ,SAACE,GAAU,IACtCE,EAAmBF,EAAnBE,GAAImb,EAAerb,EAAfqb,WACZtS,EAAS7I,GAAM,GACfmb,EAAWvb,SAAQ,SAACuI,GAChB,GAAa,KAATA,EAAa,CAAC,IAAD,EACY+O,EAAW/O,GAAM/I,MAAMY,GAApC4F,EADC,EACLqW,GAAWlW,EADN,EACEmW,GACTpF,EAAIjO,EAAS7I,GAAIV,OACnBwX,IACAjO,EAAS7I,GAAI8W,EAAI,GAAGzW,OAAS,CAAEuF,IAAGG,MAEtC8C,EAAS7I,GAAIkN,KAAK,CAAE9M,OAAQ,CAAEwF,IAAGG,WAGzC8C,EAAS7I,GAAIwX,SAGjBO,OAAOC,OAAOzC,EAAUnW,OAAOQ,SAAQ,SAACE,GAAU,IACtCE,EAAmBF,EAAnBE,GAAImb,EAAerb,EAAfqb,WACZtS,EAAS7I,GAAM,GACfmb,EAAWvb,SAAQ,SAACuI,GAChB,GAAa,KAATA,EAAa,CAAC,IAAD,EACI+O,EAAW/O,GAAM/I,MAAMY,GAAhC4F,EADK,EACLA,EAAGG,EADE,EACFA,EAEL+Q,EAAIjO,EAAS7I,GAAIV,OACnBwX,IACAjO,EAAS7I,GAAI8W,EAAI,GAAGzW,OAAS,CAAEuF,IAAGG,MAEtC8C,EAAS7I,GAAIkN,KAAK,CAAE9M,OAAQ,CAAEwF,IAAGG,WAGzC8C,EAAS7I,GAAIwX,SAIrB3O,EAGG,SAAyBA,GAC5B,IAAI3I,EAAOqM,mBAEN3G,GAAE,SAAU/F,GACT,OAAOA,EAAE+F,KAEZG,GAAE,SAAUlG,GACT,OAAOA,EAAEkG,KAYjB,OAVqBgS,OAAOoE,KAAKtT,GAAUiH,KAAI,SAACsM,EAAQvb,GACpD,IAAMuM,EAAY,GAIlB,OAHAvE,EAASuT,GAAQxc,SAAQ,SAACyc,GACtBjP,EAAUF,KAAKhN,EAAKmc,OAEjB,CACHrc,GAAIoc,EACJ/d,KAAM+O,MAnBHkP,CAAgBzT,IAqExB,IAAM0T,GAAW,SAACrF,EAAY3B,EAAWxJ,GAC5C,IA9C4BC,EAAKxD,EAAYC,EA8CzC+T,EAAe,GACnB,GAAIzQ,EAAQ5D,KAAKC,YAAYuD,QAAQ,UAAY,EAAG,CAChD,IAAMxM,EAAQ4Y,OAAOoE,KAAKjF,GACpBJ,EAAI3X,EAAMG,OACVqN,GAlDkBX,EAmDpB8K,EAnDyBtO,EAoDzBuD,EAAQ5D,KAAK1F,MAAM+F,WApDkBC,EAqDrCsD,EAAQ5D,KAAK1F,MAAMgG,SA9CR8D,gBAEdC,OAAO,CAAC,EAAGR,EAAM,IACjBvI,MAAM,CAAC+E,EAAYC,KA6CpBtJ,EAAMS,SAAQ,SAACuI,EAAM6E,GACjBwP,EAAarU,GAAQwE,EAAWK,MAXgB,MA9B5D,SAAkCjB,GAC9B,IAAM0Q,EAAiB1Q,EAAQ2Q,KAAKzT,WAC9B0T,EAAiBpF,YAAY,CAC/BjO,WAAYmT,EAAenT,WAC3BD,WAAYoT,EAAepT,WAC3BE,cAAekT,EAAelT,gBAE5BqT,EAAiBrF,YAAYxL,EAAQI,MAAMtE,WAC3CgV,EAAiBtF,YAAY,CAC/B/N,WAAYiT,EAAejT,WAC3BC,WAAYgT,EAAehT,WAC3BC,cAAe+S,EAAe/S,gBAE5BoT,EAAiBvF,YAAYxL,EAAQI,MAAMjE,WAWjD,OAVAuU,EAAerU,YAAYxI,SAAQ,SAACmQ,UACzB6M,EAAe7M,UACf+M,EAAe/M,MAE1B4M,EAAerT,WAAf,2BAAiCqT,EAAerT,YAAesT,GAC/DD,EAAetT,WAAf,2BAAiCsT,EAAetT,YAAeuT,GAC/DD,EAAepT,cAAf,2BAAoCoT,EAAepT,eAAkBqT,GACrEC,EAAerT,WAAf,2BAAiCqT,EAAerT,YAAesT,GAC/DD,EAAepT,WAAf,2BAAiCoT,EAAepT,YAAeqT,GAC/DD,EAAenT,cAAf,2BAAoCmT,EAAenT,eAAkBoT,GAC9D,CACHH,iBACAE,kBAkBuCE,CAAyBhR,GAA5D4Q,EAdgD,EAchDA,eAAgBE,EAdgC,EAchCA,eAClBD,EAAiB7Q,EAAQI,MAAMtE,UAC/BiV,EAAiB/Q,EAAQI,MAAMjE,UAG/B9I,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MACbD,EAAMQ,SAAQ,SAACE,GACO,SAAdA,EAAKxB,KACLwB,EAAK0C,MAAMqF,UAAYkE,EAAQ5D,KAAKE,OAAOR,UAE3C/H,EAAK0C,MAAMqF,UAAY+U,EAExBpM,MAAMwM,QAAQld,EAAKgP,SAClBhP,EAAKgP,OAAOlP,SAAQ,SAACC,GACZ8c,EAAe9c,GAGhBC,EAAK0C,MAAM3C,GAAK0X,YAAYoF,EAAe9c,IAF3CC,EAAK0C,MAAM3C,GAAK0X,YAAYsF,EAAehd,OAMrC,cAAdC,EAAKxB,OACLwB,EAAK0C,MAAMqF,UAAX,2BACO+U,GADP,IAEI7U,UAAW+U,EAAepK,eAC1B5K,MAAOgV,EAAenK,WACtBtN,QAASyX,EAAelK,mBAIpCvT,EAAMO,SAAQ,SAACM,GACO,SAAdA,EAAK5B,KACL4B,EAAKsC,MAAM0F,UAAY6D,EAAQ5D,KAAKE,OAAOH,UAE3ChI,EAAKsC,MAAM0F,UAAY4U,EAExBtM,MAAMwM,QAAQ9c,EAAK4O,SAClB5O,EAAK4O,OAAOlP,SAAQ,SAACC,GAEjBK,EAAKsC,MAAM3C,GAAK0X,YAAYsF,EAAehd,UAKvD,IAAMod,KAAmBlR,EAAQ5D,KAAKC,YAAYuD,QAAQ,UAAY,GACtEoM,OAAOC,OAAOd,GAAYtX,SAAQ,SAACuM,GAC/B4L,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAChC,GAAkB,SAAdA,EAAKxB,KAYL,OAXAwB,EAAK0C,MAAMqF,UAAY0P,YAAA,2BAChBqF,GACA7Q,EAAQ5D,KAAKE,OAAOR,iBAE3B/H,EAAKgP,OAAOlP,SAAQ,SAACC,GACZ8c,EAAe9c,GAGhBC,EAAK0C,MAAM3C,GAAK0X,YAAYoF,EAAe9c,IAF3CC,EAAK0C,MAAM3C,GAAK0X,YAAYsF,EAAehd,OAOvDC,EAAK0C,MAAMqF,UAAY+U,EAGL,cAAd9c,EAAKxB,OACLwB,EAAK0C,MAAMqF,UAAX,2BACO+U,GADP,IAEI7U,UAAW+U,EAAepK,eACpBoK,EAAepK,eACf,UACN5K,MAAOgV,EAAenK,WAAamK,EAAenK,WAAa,OAC/DtN,QAASyX,EAAelK,aAAekK,EAAelK,aAAe,MAGzEqK,IAEAnd,EAAK0C,MAAMqF,UAAY0P,YAAYzX,EAAK0C,MAAMqF,WAC9C/H,EAAK0C,MAAMqF,UAAUE,UAAYyU,EAAa1c,EAAKqI,OAEvDrI,EAAKgP,OAAOlP,SAAQ,SAACC,GACZ8c,EAAe9c,GAGhBC,EAAK0C,MAAM3C,GAAK0X,YAAYoF,EAAe9c,IAF3CC,EAAK0C,MAAM3C,GAAK0X,YAAYsF,EAAehd,UAMvDkY,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GACd,SAAdA,EAAK5B,MAOT4B,EAAKsC,MAAM0F,UAAY4U,EACnBG,IACA/c,EAAKsC,MAAM0F,UAAYqP,YAAYuF,GAC/BN,EAAatc,EAAKiI,QAClBjI,EAAKsC,MAAM0F,UAAU9C,YAAcoX,EAAatc,EAAKiI,QAG7DjI,EAAK4O,OAAOlP,SAAQ,SAACC,GAEjBK,EAAKsC,MAAM3C,GAAK0X,YAAYsF,EAAehd,QAf3CK,EAAKsC,MAAM0F,UAAYqP,YAAA,2BAChBuF,GACA/Q,EAAQ5D,KAAKE,OAAOH,mBAmB9BgV,GAAiB,SAAChG,EAAY3B,EAAWxJ,GAAa,IACzD3M,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAELoH,EAAWsF,EAAQI,MAAnB1F,OACF0W,EAAcpF,OAAOqF,YAAYhe,EAAM0Q,KAAI,SAACjQ,GAAD,MAAO,CAACA,EAAEG,GAAIH,OACzDwd,EAActF,OAAOqF,YAAY/d,EAAMyQ,KAAI,SAACjQ,GAAD,MAAO,CAACA,EAAEG,GAAIH,OAC3DiY,EAAmBC,OAAOC,OAAOd,GAMrC,GAHInL,EAAQ5D,KAAKC,YAAYuD,QAAQ,WAAa,GACb,WAAjCI,EAAQ5D,KAAKE,OAAOnF,UACgB,WAApC6I,EAAQI,MAAMzF,OAAOC,WACG,CAExB,IAFwB,EAEpB2W,EAAiB,GAFG,cAGPle,GAHO,IAGxB,2BAAwB,CAAC,IAAhBU,EAAe,QACF,SAAdA,EAAKxB,OACLgf,EAAiBjR,GAAkBN,GACnCjM,EAAK8F,EAAI0X,EAAe1X,EACxB9F,EAAKiG,EAAIuX,EAAevX,IAPR,kDAWP1G,GAXO,IAWxB,2BAAwB,CAAC,IAAhBa,EAAe,QACF,SAAdA,EAAK5B,OACoB,SAArB4B,EAAKE,OAAO9B,MACZ4B,EAAKE,OAAOwF,EAAI0X,EAAe1X,EAC/B1F,EAAKE,OAAO2F,EAAIuX,EAAevX,IAE/B7F,EAAKG,OAAOuF,EAAI0X,EAAe1X,EAC/B1F,EAAKG,OAAO0F,EAAIuX,EAAevX,KAlBnB,+BAwB5B,IAAIwX,EAAW,GACThF,EAAcxM,EAAQ5D,KAAKW,SAASP,QACpCiQ,EAAcV,EAAiBxY,OAC/BmZ,EAAmBC,GAAgB3M,EAASyM,GAClDV,EAAiBlY,SAAQ,SAACuM,EAAO8L,GAC7BF,OAAOC,OAAO7L,EAAM/M,OAAOQ,SAAQ,SAACE,GAEhCqY,GAAOrY,EAAMqd,EAAYrd,EAAKE,KAFW,IAGnC4F,EAAqB9F,EAArB8F,EAAGG,EAAkBjG,EAAlBiG,EAAGL,EAAe5F,EAAf4F,OAAQ1F,EAAOF,EAAPE,GAIpB,GAFAF,EAAK8F,GAAKa,EACV3G,EAAKiG,GAAKU,EACNsF,EAAQ5D,KAAKC,YAAYuD,QAAQ,aAAe,EAAG,CAAC,IAAD,EACpB8M,EAAiBR,GAArCU,EADwC,EAC3C/S,EAAagT,EAD8B,EACjC7S,EACE,SAAhBwS,GACA3S,EAAI9F,EAAK8F,EACTG,EAAIjG,EAAKiG,EACTjG,EAAK8F,EAAI9F,EAAK8F,EAAI+S,EAClB7Y,EAAKiG,EAAIjG,EAAKiG,EAAI6S,GACK,SAAhBL,GAEP3S,EAAI9F,EAAK8F,EAAI+S,EACb5S,EAAIjG,EAAKiG,EAAI6S,EACb9Y,EAAKmc,GAAKrW,EACV9F,EAAKoc,GAAKnW,IAGVjG,EAAK8F,EAAI9F,EAAK8F,EAAI+S,EAClB7Y,EAAKiG,EAAIjG,EAAKiG,EAAI6S,EAClBhT,EAAI9F,EAAK8F,EACTG,EAAIjG,EAAKiG,QAGbH,EAAI9F,EAAK8F,EACTG,EAAIjG,EAAKiG,EAGbwX,EAASzd,EAAK4F,QAAU,CAAEA,SAAQE,IAAGG,IAAG/F,YAIhD8X,EAAiBlY,SAAQ,SAACuM,GACtB4L,OAAOC,OAAO7L,EAAM9M,OAAOO,SAAQ,SAACM,GAChCiY,GAAOjY,EAAMmd,EAAYnd,EAAKF,KAC9BE,EAAKE,OAAL,eAAmBmd,EAASrd,EAAKsd,eACjCtd,EAAKG,OAAL,eAAmBkd,EAASrd,EAAKud,qBAIzC,IArF8D,EAqFxDC,EAAQ,GArFgD,cAsF7Cte,GAtF6C,IAsF9D,2BAAwB,CAAC,IAAhBU,EAAe,QACpBA,EAAK8F,GAAKa,EACV3G,EAAKiG,GAAKU,EACViX,EAAM5d,EAAKE,IAAM,CACb4F,EAAG9F,EAAK8F,EACRG,EAAGjG,EAAKiG,IA3F8C,kDAiG7C1G,GAjG6C,IAiG9D,2BAAwB,CAAC,IAAhBa,EAAe,QACpBA,EAAKE,OAAOwF,EAAI8X,EAAMxd,EAAKE,OAAOJ,IAAI4F,EACtC1F,EAAKE,OAAO2F,EAAI2X,EAAMxd,EAAKE,OAAOJ,IAAI+F,EACtC7F,EAAKG,OAAOuF,EAAI8X,EAAMxd,EAAKG,OAAOL,IAAI4F,EACtC1F,EAAKG,OAAO0F,EAAI2X,EAAMxd,EAAKG,OAAOL,IAAI+F,GArGoB,8BAuG9D,OAAOmR,GAGEyG,GAAe,SAACxR,EAAOyR,EAAcC,EAASC,GACvD,IAAMC,EAAcvI,GAAcQ,GAAY7J,EAAM/M,MAAOwe,EAAaxe,OAAQye,GAC1EG,EAAiBxI,GAAcQ,GAAY4H,EAAaxe,MAAO+M,EAAM/M,OAAQye,GAC7EI,EAAczI,GAAcA,GAAcrJ,EAAM/M,MAAOwe,EAAaxe,OAAQye,GAIlF,MAAO,CACHK,OAAQ,CAAE9e,MAAO2e,EAAa1e,MAJdmW,GAAcQ,GAAY7J,EAAM9M,MAAOue,EAAave,OAAQye,IAK5EK,UAAW,CAAE/e,MAAO4e,EAAgB3e,MAJjBmW,GAAcQ,GAAY4H,EAAave,MAAO8M,EAAM9M,OAAQye,IAK/EM,OAAQ,CAAEhf,MAAO6e,EAAa5e,MAJdmW,GAAcA,GAAcrJ,EAAM9M,MAAOue,EAAave,OAAQye,MAwMzEO,GAAc,SAACnH,EAAYnL,EAAQwJ,GAAe,IAAD,EACrBxJ,EAAQ2Q,KAAhC4B,EAD6C,EACnDC,KAAmBC,EADgC,EAChCA,QAC1B,GAA+B,cAA3BzS,EAAQ2Q,KAAK+B,WACb,GAAe,cAAZD,EAGC,IAAK,IAAI9Y,KAAUwR,EAAY,CAC3B,IAAM/K,EAAQ+K,EAAWxR,GACzB,IAAK,IAAIgZ,KAAUvS,EAAM9M,MAAO,CAC5B,IAAMa,EAAOiM,EAAM9M,MAAMqf,GAEe,IAApCvS,EAAM/M,MAAMc,EAAKE,QAAQue,QACW,IAApCxS,EAAM/M,MAAMc,EAAKG,QAAQse,SAEzBze,EAAK4O,OAAO5B,KAAK,cACjBf,EAAM/M,MAAMc,EAAKE,QAAQ0O,OAAO5B,KAAK,cACrCf,EAAM/M,MAAMc,EAAKG,QAAQyO,OAAO5B,KAAK,qBAK/C,GAAe,kBAAZsR,EAA4B,CACjC,IAAII,EAAa,EACXC,EAAc,GACdC,EAAc,GACb1f,EAAgBmW,EAAhBnW,MAAOC,EAASkW,EAATlW,MACd0Y,OAAOC,OAAO5Y,GAAOQ,SAAQ,SAACE,QACAif,IAAvBF,EAAY/e,EAAKE,MAChB6e,EAAY/e,EAAKE,IAAM4e,EACvBE,EAAYF,GAAc9e,EAAKE,GAC/B4e,QAIR,IADA,IAAII,EAAS,IAAIxO,MAAMoO,GACf5R,EAAE,EAAEA,EAAEgS,EAAO1f,OAAO0N,IACxBgS,EAAOhS,GAAK,IAAIwD,MAAMoO,GAAY1Z,KAAK,GAE3C6S,OAAOC,OAAO3Y,GAAOO,SAAQ,SAACM,GAC1B,IAAI+e,EAAcJ,EAAY3e,EAAKE,QAC/B8e,EAAcL,EAAY3e,EAAKG,QACnC2e,EAAOC,GAAaC,GAAe,EACnCF,EAAOE,GAAaD,GAAe,KAIvC,IAFA,IAAIE,EAAQ,EAAGC,EAAS,EACpBC,GAAO,EAvBsB,WAwBzBrS,GACJ,IAAMsS,EAxJa,SAACN,EAAQO,GACxC,IAAMxF,EAAOiF,EAAO1f,OAChBkgB,EAAOR,EAAO,GAAG1f,OAErB,GAAGya,IAASyF,GAAQD,GAASxF,EAAM,OAAO,IAAI0F,MAAM,4EAGpD,IAAIC,EAAW,IAAIlP,MAAMuJ,GAAM7U,KAAKya,KAGhCC,EAAU,IAAIpP,MAAMuJ,GAAM7U,MAAK,GACnCwa,EAASH,GAAS,EAClB,IAAI,IAAIvS,EAAI,EAAGA,EAAI+M,EAAM/M,IAAK,CAE1B4S,EAAQL,IAAS,EAEjB,IAAI,IAAIM,EAAI,EAAGA,EAAIL,EAAMK,IAEC,IAAnBb,EAAOO,GAAOM,IAASb,EAAOO,GAAOM,GAAKH,EAASH,GAASG,EAASG,KACpEH,EAASG,GAAKb,EAAOO,GAAOM,GAAKH,EAASH,IAOlD,IAFA,IAAIO,GAAY,EACZ/K,EAAM4K,IACFvO,EAAI,EAAGA,EAAI2I,EAAM3I,KACfwO,EAAQxO,IAAOsO,EAAStO,GAAK2D,IAC/BA,EAAM2K,EAAStO,GACf0O,EAAW1O,GAInB,IAAe,IAAZ0O,EAGC,MAFAP,EAAQO,EAKhB,OAAOJ,EAiHyBK,CAAoBf,EAAQhS,GAE5CgT,EAAWhT,EACXiT,EAAcX,EAAYtS,GAC9BsS,EAAY1f,SAAQ,SAACmQ,EAAElP,GAChBkP,IAAI4P,KAAU5P,EAAEkQ,IACfD,EAAWnf,EACXof,EAAclQ,MAGnBkQ,EAAYZ,IACXA,EAAMY,EACNd,EAASnS,EACToS,EAASY,IAdThT,EAAE,EAAEA,EAAE4R,EAAW5R,IAAK,EAAtBA,GAkBR,IAAMkT,EA/Ha,SAAClB,EAAQJ,EAAYoB,GAChD,IAAIJ,EAAU,IAAIpP,MAAMwO,EAAO1f,QAAQ4F,MAAK,GACxCgb,EAAe,GACfC,EAAmBR,IACnBD,EAAW,EACXU,EAAW,GAwBf,OAvBAR,EAAQhB,IAAc,EACtBwB,EAASlT,KAAK0R,GACd,SAASyB,EAAIzB,GACT,IAAI,IAAI5R,EAAE,EAAEA,EAAEgS,EAAOJ,GAAYtf,OAAO0N,KACpB,IAAb4S,EAAQ5S,IAAoC,IAAxBgS,EAAOJ,GAAY5R,KACtC0S,IACAU,EAASlT,KAAKF,GACd4S,EAAQ5S,IAAG,EACRA,IAAMgT,EACFN,EAASS,IACRA,EAAmBT,EACnBQ,EAAY,UAAOE,IAGvBC,EAAIrT,GAER0S,IACAE,EAAQ5S,IAAK,EACboT,EAAS5I,OAIrB6I,CAAIzB,GACGsB,EAkGsBI,CAAgBtB,EAAOG,EAAOC,GAC7CmB,EAAgB,GAChBC,EAAgB,GAYtB,IAAI,IAAI9B,KAXRwB,EAAatgB,SAAQ,SAACmQ,EAAE/C,GACpB,IAAMyT,EAAM3B,EAAY/O,GAExB,GADAwQ,EAAcE,IAAO,EACd,IAAJzT,EAAM,CACL,IAAM0T,EAAM5B,EAAYoB,EAAalT,EAAE,IACvCwT,EAAc,GAAD,OAAIC,EAAJ,YAAWC,KAAS,EACjCF,EAAc,GAAD,OAAIE,EAAJ,YAAWD,KAAS,MAKvBphB,GACa,IAAxBmhB,EAAc9B,KACbrf,EAAMqf,GAAQ5P,OAAS,CAAC,eAGhC,IAAI,IAAI6R,KAAUvhB,GACe,IAA1BmhB,EAAcI,KACbvhB,EAAMuhB,GAAQ7R,OAAS,CAAC,eAKhC,IAAK,IAAIpJ,KAAUwR,EAAY,CAC3B,IAAM/K,EAAQ+K,EAAWxR,GACzB,IAAK,IAAIgZ,KAAUvS,EAAM9M,OACM,IAAxBmhB,EAAc9B,IACbvS,EAAM9M,MAAMqf,GAAQ5P,OAAO5B,KAAK,cAGxC,IAAI,IAAIyT,KAAUxU,EAAM/M,OACS,IAA1BmhB,EAAcI,IACbxU,EAAM/M,MAAMuhB,GAAQ7R,OAAO5B,KAAK,oBAK7C,CAAC,IAAD,EAC+BoR,GAE5B,CACIsC,KAAM,SACNC,SAAU,KACVhf,MAAO,GALT+e,EADL,EACKA,KAAMC,EADX,EACWA,SAAUhf,EADrB,EACqBA,MAOxB,IAAK,IAAI6D,KAAUwR,EAAY,CAC3B,IAAM/K,EAAQ+K,EAAWxR,GACzB,IAAK,IAAIib,KAAUxU,EAAM/M,MAAO,CAC5B,IAAMU,EAAOqM,EAAM/M,MAAMuhB,GACzB,OAAQE,GACJ,IAAK,KACG/gB,EAAK8gB,IAAS/e,GACd/B,EAAKgP,OAAO5B,KAAK,cAErB,MACJ,IAAK,KACGpN,EAAK8gB,IAAS/e,GACd/B,EAAKgP,OAAO5B,KAAK,cAErB,MACJ,QACQpN,EAAK8gB,KAAU/e,GACf/B,EAAKgP,OAAO5B,KAAK,mBAiOhC4T,GAA2B,SAACC,EAAYC,GACjD,IAAMC,EAAqB,GAC3B,IAAK,IAAIN,KAAUK,EAAa5hB,MAC5B6hB,EAAmBN,GAAUK,EAAa5hB,MAAMuhB,GAAQhC,OAE5D,IAAK,IAAIgC,KAAUI,EAAW3hB,MAAO,CACjC,IAAM8hB,EAAcH,EAAW3hB,MAAMuhB,GAAQhC,YACVI,IAA/BkC,EAAmBN,IAAyBM,EAAmBN,GAAUO,EACzEH,EAAW3hB,MAAMuhB,GAAQ7R,OAAO5B,KAAK,cAC9B+T,EAAmBN,KAAYO,EACtCH,EAAW3hB,MAAMuhB,GAAQ7R,OAAO5B,KAAK,cAC9B+T,EAAmBN,GAAUO,GACpCH,EAAW3hB,MAAMuhB,GAAQ7R,OAAO5B,KAAK,mBCvvD3CiU,G,WACF,aAAe,oBACX/e,KAAKgf,aAAe,GACpBhf,KAAKyb,QAAU,IAAIjI,IACnBxT,KAAKif,SAAW,IAAIzL,IACpBxT,KAAK8U,WAAa,GAClB9U,KAAKkf,aAAe,GACpBlf,KAAKyG,cAAWkW,E,qDAEXwC,EAASC,GACdpf,KAAKgf,aAAe,CAAC,QAAS,SAE9Bhf,KAAKjD,MAAQ4Y,OAAOqF,YAAYmE,EAAQzR,KAAI,SAACjQ,EAAGgB,GAAJ,MAAc,CAAChB,EAAEsI,KAAMtH,OACnEuB,KAAK2J,QAAUyV,EACfpf,KAAKqf,QAAUF,EACfnf,KAAK/D,KAAOqjB,YAAkBH,GAG3Bnf,KAAK2J,QAAQ5D,KAAKC,YAAYuD,QAAQ,WAAa,GACrCvJ,KAAK/D,KDuxBnBuB,SAAQ,SAACuM,GACZA,EAAM/M,MAAMQ,SAAQ,SAACE,GACjB,IAAMM,EAAM,eAAW+L,EAAMhE,MACvB9H,EAASP,EAAKE,GACpBmM,EAAM9M,MAAM6N,KAAK,CAAE9M,SAAQC,SAAQ/B,KAAM,YAE7C6N,EAAM/M,MAAM8N,KAAK,CAAElN,GAAG,QAAD,OAAUmM,EAAMhE,MAAQ7J,KAAM,YCvyBzB,MDmBT,SAACH,EAAQgB,GAC9BwiB,OAAOpV,GAAKA,EACZ,IAAI2K,EAAa,GACb2G,EAAU,IAAIjI,IACdkI,EAAU,IAAIlI,IACd0L,EAAe,GACf/L,EAAY,CAAEnW,MAAO,GAAIC,MAAO,IAC9ByX,EAAIiB,OAAOoE,KAAKhd,GAAOG,OAoG7B,OAlGAnB,EAAOyB,SAAQ,SAACuM,GACZ,IAAMhE,EAAOgE,EAAMhE,KACbyZ,EAAYziB,EAAMgJ,GACxBmZ,EAAanZ,GAAQ,CAAE/I,MAAO,IAAIwW,IAAOvW,MAAO,IAAIuW,KACpDsB,EAAW/O,GAAQ,CAAE/I,MAAO,GAAIC,MAAO,IACvC,IAAIwiB,EAAc,GAyFlB,IAAK,IAAIlB,KAxFTxU,EAAM/M,MAAMQ,SAAQ,SAACE,GACjB,IAAME,EAAKF,EAAKE,GACV0F,EAAM,UAAMyC,EAAN,YAAcnI,GACpB1B,EAAOwB,EAAKxB,KAAOwB,EAAKxB,KAAO,MAarC,GAZA4Y,EAAW/O,GAAM/I,MAAMY,GAAvB,2BACOF,GADP,IAEIxB,OACA0B,KACA0F,SACAyC,OACA2G,OAAQ,GACR8S,YACApf,MAAO,KAEX8e,EAAanZ,GAAM/I,MAAM0iB,IAAI9hB,GAC7B6d,EAAQiE,IAAI9hB,IACPuV,EAAUnW,MAAMY,GAAK,CACtB,IAAI4P,EAAiB,IAAIY,MAAMsG,GAAG5R,KAAK,GACnCiW,EAAa,IAAI3K,MAAMsG,GAAG5R,KAAK,IAC/B6c,EAAc,IAAIvR,MAAMsG,GAAG5R,KAAK,GAAG4K,KAAI,iBAAM,MACjDyF,EAAUnW,MAAMY,GAAhB,2BACOF,GADP,IAEIE,KACA1B,OACAsR,iBACAuL,aACA4G,cACAvf,MAAO,KAGf+S,EAAUnW,MAAMY,GAAI4P,eAAezQ,EAAMgJ,IAAS,EAClDoN,EAAUnW,MAAMY,GAAImb,WAAWhc,EAAMgJ,IAASA,KAElDgE,EAAM9M,MAAMO,SAAQ,SAACM,GAAU,IACrBE,EAAmBF,EAAnBE,OAAQC,EAAWH,EAAXG,OACVH,EAAKE,OAASF,EAAKG,SACnBD,EAASF,EAAKG,OACdA,EAASH,EAAKE,aAEU2e,IAAxB8C,EAAYzhB,GACZyhB,EAAYzhB,GAAU,EAEtByhB,EAAYzhB,UAEY2e,IAAxB8C,EAAYxhB,GACZwhB,EAAYxhB,GAAU,EAEtBwhB,EAAYxhB,KAEhB,IAAML,EAAE,UAAMI,EAAN,YAAgBC,GAClBqF,EAAM,UAAMyC,EAAN,YAAcnI,GACpB1B,EAAO4B,EAAK5B,KAAO4B,EAAK5B,KAAO,MAC/Bkf,EAAetG,EAAW/O,GAAM/I,MAAMgB,GAAQsF,OAC9C+X,EAAevG,EAAW/O,GAAM/I,MAAMiB,GAAQqF,OAgBpD,GAfAwR,EAAW/O,GAAM9I,MAAMW,GAAM,CACzBA,KACA1B,OACAoH,SACAtF,SACAC,SACAmd,eACAC,eACAtV,OACAyZ,YACA9S,OAAQ,GACRtM,MAAO,IAEXsb,EAAQgE,IAAI9hB,GACZshB,EAAanZ,GAAM9I,MAAMyiB,IAAI9hB,IACxBuV,EAAUlW,MAAMW,GAAK,CACtB,IAAI4P,EAAiB,IAAIY,MAAMsG,GAAG5R,KAAK,GACnCiW,EAAa,IAAI3K,MAAMsG,GAAG5R,KAAK,IAC/B6c,EAAc,IAAIvR,MAAMsG,GAAG5R,KAAK,GAAG4K,KAAI,iBAAM,MACjDyF,EAAUlW,MAAMW,GAAM,CAClBA,KACA1B,OACA8B,SACAC,SACAuP,iBACAuL,aACA4G,cACAvf,MAAO,IAGf+S,EAAUlW,MAAMW,GAAI4P,eAAezQ,EAAMgJ,IAAS,EAClDoN,EAAUlW,MAAMW,GAAImb,WAAWhc,EAAMgJ,IAASA,KAG/B+O,EAAW/O,GAAM/I,MAChC8X,EAAW/O,GAAM/I,MAAMuhB,GAAQhC,OAASkD,EAAYlB,MAGrD,CAAEzJ,aAAY2G,UAASC,UAASwD,eAAc/L,aC/GeyM,CAC5D5f,KAAK/D,KACL+D,KAAKjD,OAFH+X,EAfoB,EAepBA,WAAY2G,EAfQ,EAeRA,QAASC,EAfD,EAeCA,QAASwD,EAfV,EAeUA,aAAc/L,EAfxB,EAewBA,UAKlDnT,KAAK8U,WAAaA,EAClB9U,KAAKkf,aAAeA,EACpBlf,KAAKmT,UAAYA,EACjBnT,KAAKyb,QAAUA,EACfzb,KAAK0b,QAAUA,EAxBW,MA0BG1b,KAAK2J,QAA1BI,EA1BkB,EA0BlBA,MAAOhE,EA1BW,EA0BXA,KAAMuU,EA1BK,EA0BLA,KAGrBta,KAAK6f,SAASvF,GAEdta,KAAKmT,UAAUnW,MAAQ2Y,OAAOC,OAAO5V,KAAKmT,UAAUnW,OACpDgD,KAAKmT,UAAUlW,MAAQ0Y,OAAOC,OAAO5V,KAAKmT,UAAUlW,OAGpD+C,KAAK8f,WAAW/V,EAAMzF,OAAOC,WAAawF,EAAMzF,OAAOC,WAAa,eAGpEvE,KAAKyG,SAAWV,EAAKC,YAAYuD,QAAQ,aAAe,EAClDqW,GAAc5f,KAAKmT,UAAWnT,KAAK8U,WAAY9U,KAAK2J,cACpDgT,EDk+CsB,SAAC7H,EAAY3B,EAAWxJ,GAAY,IAAD,EACtCA,EAAQ2Q,KAA7ByF,EAD2D,EAC3DA,OAAQC,EADmD,EACnDA,SAEhB,GAAID,GAAqB,SAAbC,GAITD,EAAO7iB,SAAW2K,EAAkB3K,OAIvC,GAAqB,IAAlB6iB,EAAO7iB,OAAV,CAiBA,IARA,IAAM+iB,EAAwB,CAC1B,YAAa,EACb,YAAc,EACd,eAAiB,EACjB,YAAa,EACb,YAAc,EACd,eAAiB,GAEbrV,EAAE,EAAEA,EAAEmV,EAAO7iB,OAAO0N,IACxB,OAAOmV,EAAOnV,IACV,IAAK,eACDqV,EAAqB,YAAiB,EACtC,MACJ,IAAK,gBACDA,EAAqB,YAAiB,EACtC,MACJ,IAAK,kBACDA,EAAqB,eAAoB,EACzC,MACJ,IAAK,eACDA,EAAqB,YAAiB,EACtC,MACJ,IAAK,gBACDA,EAAqB,YAAiB,EACtC,MACJ,IAAK,kBACDA,EAAqB,eAAoB,EAcrD,IA5DmE,IAsD7DjjB,EAAiBmW,EAAjBnW,MAAOC,EAAUkW,EAAVlW,MAML2N,EAAI,EAAEA,EAAE5N,EAAME,QAAQ,CAC1B,IAAIQ,EAAOV,EAAM4N,GACjB,GAAGwD,MAAMwM,QAAQld,EAAKgP,QAClB,GAAGhP,EAAKgP,OAAOxP,QAAS,EAAE,CACtB,IAAI,IAAIugB,EAAG,EAAEA,EAAE/f,EAAKgP,OAAOxP,SACoB,IAAxC+iB,EAAsBviB,EAAKgP,OAAO+Q,IACjC/f,EAAKgP,OAAOwT,OAAOzC,EAAE,GAErBA,IAGgB,IAArB/f,EAAKgP,OAAOxP,OAEXF,EAAMkjB,OAAOtV,EAAE,GAEfA,SAEuB,IAArBlN,EAAKgP,OAAOxP,QAC2B,IAA1C+iB,EAAsBviB,EAAKgP,OAAO,IACjC1P,EAAMkjB,OAAOtV,EAAE,GAEfA,IAGDqV,EAAqB,WACpBrV,IAEA5N,EAAMkjB,OAAOtV,EAAE,QAKpBqV,EAAqB,WACpBrV,IAEA5N,EAAMkjB,OAAOtV,EAAE,GAK3B,IAAI,IAAIA,EAAI,EAAEA,EAAE3N,EAAMC,QAAQ,CAC1B,IAAIY,EAAOb,EAAM2N,GACjB,GAAe,cAAZ9M,EAAK5B,KAIR,GAAGkS,MAAMwM,QAAQ9c,EAAK4O,QAClB,GAAG5O,EAAK4O,OAAOxP,QAAS,EAAE,CACtB,IAAI,IAAIugB,EAAG,EAAEA,EAAE3f,EAAK4O,OAAOxP,SACoB,IAAxC+iB,EAAsBniB,EAAK4O,OAAO+Q,IACjC3f,EAAK4O,OAAOwT,OAAOzC,EAAE,GAErBA,IAGgB,IAArB3f,EAAK4O,OAAOxP,OAEXD,EAAMijB,OAAOtV,EAAE,GAEfA,SAEuB,IAArB9M,EAAK4O,OAAOxP,QAC2B,IAA1C+iB,EAAsBniB,EAAK4O,OAAO,IACjCzP,EAAMijB,OAAOtV,EAAE,GAEfA,IAGDqV,EAAqB,WACpBrV,IAEA3N,EAAMijB,OAAOtV,EAAE,QAKpBqV,EAAqB,WACpBrV,IAEA3N,EAAMijB,OAAOtV,EAAE,QApCnBA,IA0CR+K,OAAOC,OAAOd,GAAYtX,SAAQ,SAACuM,GAC/B,IAAI,IAAIoW,KAAWpW,EAAM/M,MAAM,CAC3B,IAAIU,EAAOqM,EAAM/M,MAAMmjB,GACvB,GAAG/R,MAAMwM,QAAQld,EAAKgP,QAClB,GAAGhP,EAAKgP,OAAOxP,QAAS,EAAE,CACtB,IAAI,IAAIugB,EAAG,EAAEA,EAAE/f,EAAKgP,OAAOxP,SACoB,IAAxC+iB,EAAsBviB,EAAKgP,OAAO+Q,IACjC/f,EAAKgP,OAAOwT,OAAOzC,EAAE,GAErBA,IAGgB,IAArB/f,EAAKgP,OAAOxP,eAEJ6M,EAAM/M,MAAMmjB,QAEI,IAArBziB,EAAKgP,OAAOxP,QAC2B,IAA1C+iB,EAAsBviB,EAAKgP,OAAO,YAC1B3C,EAAM/M,MAAMmjB,GAGnBF,EAAqB,mBACdlW,EAAM/M,MAAMmjB,QAKvBF,EAAqB,mBACdlW,EAAM/M,MAAMmjB,GAI/B,IAAI,IAAIC,KAAWrW,EAAM9M,MAAM,CAC3B,IAAIa,EAAOiM,EAAM9M,MAAMmjB,GACvB,GAAe,cAAZtiB,EAAK5B,KAGR,GAAGkS,MAAMwM,QAAQ9c,EAAK4O,QAClB,GAAG5O,EAAK4O,OAAOxP,QAAS,EAAE,CACtB,IAAI,IAAIugB,EAAG,EAAEA,EAAE3f,EAAK4O,OAAOxP,SACoB,IAAxC+iB,EAAsBniB,EAAK4O,OAAO+Q,IACjC3f,EAAK4O,OAAOwT,OAAOzC,EAAE,GAErBA,IAGgB,IAArB3f,EAAK4O,OAAOxP,eAEJ6M,EAAM9M,MAAMmjB,QAEI,IAArBtiB,EAAK4O,OAAOxP,QAC2B,IAA1C+iB,EAAsBniB,EAAK4O,OAAO,YAC1B3C,EAAM9M,MAAMmjB,GAGnBH,EAAqB,mBACdlW,EAAM9M,MAAMmjB,QAKvBH,EAAqB,mBACdlW,EAAM9M,MAAMmjB,YAjM/B,IAAI,IAAIrW,KAFRoJ,EAAUnW,MAAQ,GAClBmW,EAAUlW,MAAQ,GACD6X,SACNA,EAAW/K,GC9+CtB6V,CAAuB5f,KAAK8U,WAAY9U,KAAKmT,UAAWnT,KAAK2J,SAG7DiW,GAAW5f,KAAK8U,WAAY9U,KAAKmT,UAAWnT,KAAK2J,SACjD3J,KAAKkT,UAAYyC,OAAOC,OAAO5V,KAAK8U,YAAYpH,KAAI,SAACC,GAAD,MAAQ,CACxD1Q,MAAO0Y,OAAOC,OAAOjI,EAAE1Q,OACvBD,MAAO2Y,OAAOC,OAAOjI,EAAE3Q,a,+BAItBsd,GAEgB,eAAlBA,EAAK0F,SAEkB,cAAnB1F,EAAK+B,UACJrc,KAAKqgB,gBAAgB,CAAC,CAAEtjB,MAAO,MAAOC,MAAO,MAAOC,MAAO,MAAO8J,SAAUuT,EAAKzT,WAAWE,YACpE,SAAnBuT,EAAK+B,WDwrDK,SAACvH,EAAYwF,GACxC,IAAMgG,EAAU3K,OAAOoE,KAAKjF,GACtB/N,EAAWuT,EAAKzT,WAAWE,SAChB,SAAbA,EAEAuZ,EAAQ9iB,SAAQ,SAACuI,EAAMtH,GAEL,IAAVA,GACJigB,GAAyB5J,EAAW/O,GAAO+O,EAAWwL,EAAQ7hB,EAAQ,QAEtD,SAAbsI,EAEPuZ,EAAQ9iB,SAAQ,SAACuI,EAAMtH,GACfA,IAAU6hB,EAAQpjB,OAAS,GAC/BwhB,GAAyB5J,EAAW/O,GAAO+O,EAAWwL,EAAQ7hB,EAAQ,QAI1E6hB,EAAQ9iB,SAAQ,SAACuI,EAAMtH,GACfA,IAAUsI,GAGd2X,GAAyB5J,EAAW/O,GAAO+O,EAAWwL,EAAQvZ,QC7sD1D6Y,CAAkB5f,KAAK8U,WAAYwF,GAEhB,SAAlBA,EAAK0F,UAEVJ,GAAc5f,KAAK8U,WAAY9U,KAAK2J,QAAS3J,KAAKmT,a,mCAGtB,IAAzB7O,EAAwB,uDAAf,cAEhB,GAAc,WAAXA,EACCsb,GAAe5f,KAAKmT,UAAWnT,KAAK8U,WAAW9U,KAAK2J,cAClD,GAAc,cAAXrF,EACLsb,GAAkB5f,KAAKmT,UAAWnT,KAAK8U,WAAY9U,KAAK2J,cACtD,GAAc,WAAXrF,QAAqDqY,IAAhC3c,KAAKmT,UAAUnW,MAAM,GAAGyC,MAClDmgB,GAAe5f,KAAKmT,UAAWnT,KAAK8U,WAAW9U,KAAK2J,aACnD,CACD,OAAQrF,GACJ,IAAK,cACDsb,GAAgB5f,KAAKmT,UAAWnT,KAAK2J,SACrC,MACJ,IAAK,WACDiW,GAAiB5f,KAAKmT,UAAWnT,KAAK2J,SACtC,MACJ,IAAK,WACDiW,GAAiB5f,KAAKmT,UAAWnT,KAAK2J,SACtC,MACJ,IAAK,QACDiW,GAAc5f,KAAKmT,UAAWnT,KAAK2J,SACnC,MACJ,IAAK,MACDiW,GAAY5f,KAAKmT,UAAWnT,KAAK2J,SACjC,MACJ,IAAK,OACDiW,GAAa5f,KAAKmT,UAAWnT,KAAK2J,SAClC,MACJ,QACIiW,GAAgB5f,KAAKmT,UAAWnT,KAAK2J,SAG7CiW,GAAiB5f,KAAK8U,WAAY9U,KAAKmT,UAAWnT,KAAK2J,Y,sCAI/CA,GAAU,IAAD,OACrBA,EAAQnM,SAAQ,SAACC,GAAO,IACZV,EAAkCU,EAAlCV,MAAOC,EAA2BS,EAA3BT,MAAOC,EAAoBQ,EAApBR,MAAO8J,EAAatJ,EAAbsJ,SACvBwZ,EAAoB,QAAVxjB,EAAkB,IAAIyW,IAAImC,OAAOoE,KAAK,EAAKhd,QAAU,IAAIyW,IAAIzW,GACvE0e,EAAoB,QAAVze,EAAkB,EAAKye,QAAU,IAAIjI,IAAIxW,GACnD0e,EAAoB,QAAVze,EAAkB,EAAKye,QAAU,IAAIlI,IAAIvW,GACrDiiB,EAAe,GAEnBvJ,OAAOoE,KAAK,EAAKmF,cAAc1hB,SAAQ,SAACuI,GAChCwa,EAAQ7M,IAAI3N,KACZmZ,EAAanZ,GAAQ,EAAKmZ,aAAanZ,ODglC7B,SAC1BmZ,EACAzD,EACAC,EACA3U,EACA+N,EACA3B,EACApW,GAEA,IAAMujB,EAAU3K,OAAOoE,KAAKmF,GACxBriB,EAAS8Y,OAAOqF,YAAYsF,EAAQ5S,KAAI,SAAC3H,GAAD,MAAU,CAACA,EAAM,QAC5C,SAAbgB,EAEAuZ,EAAQ9iB,SAAQ,SAACuI,EAAMtH,GAEnB,GAAc,IAAVA,EAAJ,CACA,IAAM+hB,EAAWtB,EAAanZ,GACxB0a,EAAWH,EAAQ7hB,EAAQ,GAC3BiiB,EAAexB,EAAauB,GALL,EAMSlF,GAClCiF,EACAE,EACAjF,EACAC,GAJII,EANqB,EAMrBA,OAAQC,EANa,EAMbA,UAAWC,EANE,EAMFA,OAM3Bnf,EAAOkJ,GAAM+V,OAASA,EACtBjf,EAAO4jB,GAAU1E,UAAYA,EAC7Blf,EAAO4jB,GAAUzE,OAASA,MAEV,SAAbjV,EAEPuZ,EAAQ9iB,SAAQ,SAACuI,EAAMtH,GACnB,GAAIA,IAAU6hB,EAAQpjB,OAAS,EAA/B,CACA,IAAMsjB,EAAWtB,EAAanZ,GACxB4a,EAAWL,EAAQ7hB,EAAQ,GAC3BmiB,EAAe1B,EAAayB,GAJL,EAKSpF,GAClCqF,EACAJ,EACA/E,EACAC,GAJII,EALqB,EAKrBA,OAAQC,EALa,EAKbA,UAAWC,EALE,EAKFA,OAM3Bnf,EAAO8jB,GAAU7E,OAASA,EAC1Bjf,EAAOkJ,GAAMgW,UAAYA,EACzBlf,EAAOkJ,GAAMiW,OAASA,MAI1BsE,EAAQ9iB,SAAQ,SAACuI,GACb,IAAMya,EAAWtB,EAAanZ,GAC9BlJ,EAAOkJ,GAAQwV,GAAaiF,EAAUtB,EAAanY,GAAW0U,EAASC,MAK/E4E,EAAQ9iB,SAAQ,SAACuI,GAEb4P,OAAOoE,KAAKld,EAAOkJ,IAAOvI,SAAQ,SAACkP,GAAY,IAAD,EACjB7P,EAAOkJ,GAAM2G,GAA9B1P,EADkC,EAClCA,MAAOC,EAD2B,EAC3BA,MACfD,EAAMQ,SAAQ,SAACI,GACX,IAAMijB,EAAInU,EAAS,OACnBoI,EAAW/O,GAAM/I,MAAMY,GAAI8O,OAAO5B,KAAK+V,GACvC1N,EAAUnW,MAAMY,GAAI+hB,YAAY5iB,EAAMgJ,IAAO+E,KAAK+V,MAEtD5jB,EAAMO,SAAQ,SAACI,GACX,IAAMijB,EAAInU,EAAS,OACnBoI,EAAW/O,GAAM9I,MAAMW,GAAI8O,OAAO5B,KAAK+V,GACvC1N,EAAUlW,MAAMW,GAAI+hB,YAAY5iB,EAAMgJ,IAAO+E,KAAK+V,SAG1DlL,OAAOC,OAAOd,EAAW/O,GAAM/I,OAAOQ,SAAQ,SAACE,GACtCA,EAAKgP,OAAOxP,SACbQ,EAAKgP,OAAO5B,KAAK,cACjBqI,EAAUnW,MAAMU,EAAKE,IAAI+hB,YAAY5iB,EAAMgJ,IAAO+E,KAAK,kBAG/D6K,OAAOC,OAAOd,EAAW/O,GAAM9I,OAAOO,SAAQ,SAACM,GACtCA,EAAK4O,OAAOxP,SACbY,EAAK4O,OAAO5B,KAAK,cACjBqI,EAAUlW,MAAMa,EAAKF,IAAI+hB,YAAY5iB,EAAMgJ,IAAO+E,KAAK,qBC3pC3D8U,CACIV,EACAzD,EACAC,EACA3U,EACA,EAAK+N,WACL,EAAK3B,UACL,EAAKpW,Y,0BAKb+jB,GACA,OAAO,IAAIC,SAAQ,SAACC,GAChBF,EAAWG,GAAG,MAAOD,U,KCzIlB,SAASE,GAAY/iB,GAAO,MAELuT,mBAAS,IAFJ,mBAEhCwB,EAFgC,KAErBiO,EAFqB,OAGLzP,mBAAS,CAAE1U,MAAO,GAAIC,MAAO,KAHxB,mBAGhCkW,EAHgC,KAGrBiO,EAHqB,OAIP1P,mBAAS,IAJF,mBAIhCjL,EAJgC,KAItB4a,EAJsB,OAKH3P,mBAAS,IALN,mBAKhCuB,EALgC,KAKpBqO,EALoB,KAuBvC,OAjBApP,qBAAU,WACN,GAAI/T,EAAMlC,KAAKiB,OAAO,EAAG,CACrB,IAAIqkB,EDuIE,IAAIxC,GCtIVwC,EAAcC,SAASrjB,EAAMlC,KAAMkC,EAAMyR,QACzCuR,GCoHuBllB,EDpHSslB,EAAczM,WCqH/Ca,OAAOC,OAAO3Z,GAAMyR,KAAI,SAACC,GAC5B,MAAO,CACH1Q,MAAO0Y,OAAOC,OAAOjI,EAAE1Q,OACvBD,MAAO2Y,OAAOC,OAAOjI,EAAE3Q,aDvHvBqkB,EAAYE,EAAc9a,UAC1B2a,EAAaG,EAAcpO,WCkHhC,IAA4BlX,IDhH5B,CAACkC,EAAMyR,OAAQzR,EAAMlC,OAExBiW,qBAAU,WnBiaP,IAAuBuP,EmBhalBtjB,EAAMlC,KAAKiB,OAAO,EAClBokB,GnB+ZkBG,EmB/ZUtjB,EAAMyR,OAAO7J,KAAKC,anBga9CuD,QAAQ,cAAgB,EACrB,YACAkY,EAAIlY,QAAQ,aAAe,EAC3B,WAEA,OmBnaH+X,EAAc,MAEnB,CAACnjB,EAAMlC,KAAMkC,EAAMyR,OAAO7J,KAAKC,cACX,IAApB7H,EAAMlC,KAAKiB,OAAkB,KAE5B,kBAAC8V,GAAD,CACIlC,YAAe3S,EAAM2S,YACrBC,aAAgB5S,EAAM4S,aACtBwB,UAAU,EACVU,WAAYA,EACZC,UAAWA,EACXC,UAAWA,EACXvD,OAAQzR,EAAMyR,OACdhG,IAAKsJ,EAAUhW,OACfuJ,SAAUA,IEDtB,IAOe7D,gBAPS,SAAC/D,GAAD,MAAU,CACjC5C,KAAM4C,EAAMoB,UACT2P,OAAQ/Q,EAAM+Q,UAGS,GAEZhN,EA1Cf,SAAiBzE,GAEb,OACI,yBACIiC,MAAO,CACHc,MAAM,GAAD,OAAK/C,EAAM+C,MAAQ/C,EAAM+C,MAAQ,KAAjC,MACLgD,OAAO,GAAD,OAAK/F,EAAM+F,OAAS/F,EAAM+F,OAAS,IAAnC,OAEV3D,UAAU,eAEV,yBAAKA,UAAU,aAAf,cAEI,yBAAKA,UAAU,OAAOE,cAAY,QAC9B,yBAAKC,UAAU,qBAGvB,yBACIH,UAAY,mBACZH,MAAO,CACHc,MAAO,OACPgD,OAAQ,QACRtC,UAAW,OACXD,UAAU,SAGd,kBAACuf,GAAD,CACIjlB,KAAOkC,EAAMlC,KACb2T,OAAUzR,EAAMyR,c,yCCpBvB8R,GAAa,CACtB3X,MAAO,CACH5F,UAAW,IACXC,WAAY,IACZC,OAAQ,GACRC,OAAQ,CACJC,WAAY,SACZC,SAAU,CACNoC,UAAW,GACXd,UAAW,CACPJ,MAAO,UAGfjB,QAAQ,GAGRK,OAAQ,GAGRC,UAAW,GAGX4c,SAAU,GAGVtc,MAAO,GAGPuc,IAAK,GAGLhd,KAAM,CACF+S,KAAM,GAEViF,OAAQ,IAIZnX,UAAW,CACPC,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEb6C,UAAW,CACPJ,MAAO,OACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,MACjBoN,WAAY,OACZD,eAAgB,UAChBE,aAAc,EACdqR,YAAa,EACbC,iBAAiB,EACjBC,iBAAkB,UAClBC,gBAAiB,UAGzBjc,KAAM,CACFC,YAAY,CAAC,YACbU,SAAU,CACNC,UAAW,IACXC,UAAW,EAEXT,QAAS,MAETjK,KAAM,UAEV+J,OAAQ,CACJnF,SAAS,SACTuD,OAAQ,GACRoB,UAAW,CACPC,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEb6C,UAAW,CACPJ,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,MACjBwC,UAAW,UACXC,OAAQ,IAGhBvF,MAAO,CACH8F,QAAS,MACTC,WAAY,UACZC,SAAU,WAEdE,UAAW,CACPC,MAAO,KAEXC,SAAU,CACNf,MAAO,OACPtC,WAAY,QACZJ,YAAa,UACbE,YAAa,EACbC,gBAAiB,MACjBF,QAAQ,GAEZkN,MAAO,CACHjU,KAAK,SAGboe,KAAM,CAEF0F,SAAU,aACV3D,UAAW,YACXF,KAAK,CACDqC,KAAK,SAELyD,UAAW,QACXxD,SAAU,KACVhf,MAAO,GAEX2c,QAAS,oBACT2D,OAAO,YAAKtX,GAAkB,sBAE9B5B,WAAY,CACRqb,WAAY,cACZlc,YAhJqB,CAC7B,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAyIQwY,KAAM,GAENzX,SAAU,OACVC,SAAU,MACVC,WAAY,CACRvB,MAAO,OACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACbE,WAAY,QACZyC,UAAW,QACXD,OAAQ,EACR3C,QAAS,GAEbiE,WAAY,CACRxB,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEbkE,cAAe,CACXzB,MAAO,SACPC,UAAW,UACX3C,YAAa,UACbE,YAAa,EACb0C,OAAQ,EACRxC,WAAY,QACZyC,UAAW,QACX5C,QAAS,GAEbmE,WAAY,CACR1B,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,MAEjByC,OAAQ,GAEZyB,WAAY,CACR3B,MAAO,OACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,MAEjByC,OAAQ,GAEZ0B,cAAe,CACX5B,MAAO,QACP1C,YAAa,UACbI,WAAY,QACZF,YAAa,EACbD,QAAS,EACTE,gBAAiB,MAEjByC,OAAQ,MCzLjB,SAASuc,GAAaC,GAC5B,MAAO,CAAElmB,KArBY,gBAqBSkmB,WAIxB,SAASC,GAAOzS,GACtB,MAAO,CAAE1T,KA3BY,gBA2BSD,KAAM2T,G,OC2CrC,IAIMjN,GAAqB,CACvB0f,WAGWzf,gBARS,SAAC/D,GAAD,MAAY,CAChC+Q,OAAQ/Q,EAAM+Q,UAOsBjN,GAAzBC,EAtEf,SAAsBzE,GAAQ,IxBo0BGyR,EwBp0BJ,EACa8B,mBAAS,UADtB,mBAClB4Q,EADkB,KACLC,EADK,KAyBzB,OACI,yBAAKhiB,UAAU,qBACX,yBAAKA,UAAU,aAAf,cAEI,yBAAKA,UAAU,OAAOC,QA3BlC,WACIgiB,QAAQC,IAAI,gDA0B8ChiB,cAAY,QAC1D,yBAAKC,UAAU,eAEnB,yBAAKH,UAAU,OAAOC,QA1BlC,WACI,IAAIkiB,EAAUC,KAAKC,UAAUzkB,EAAMyR,QAC/B1T,EAAO,sCACP2mB,EAAO,IAAIC,KAAK,CAACJ,GAAU,CAAExmB,KAAMA,IAEnC6mB,GAAuB,EAC3B,IACIA,IAAyB,IAAID,KAC/B,MAAOE,GACLR,QAAQC,IAAIO,GAGZD,EACAE,KAAUC,OAAOL,EAAM,iBAEvBI,KAAUE,KAAKC,UAAUlnB,EAAO,IAAMwmB,KAWiBjiB,cAAY,QAC3D,yBAAKC,UAAU,qBAGvB,yBAAKH,UAAU,kBACX,yBACIA,UAAS,uBAAkC,WAAhB+hB,EAA2B,gBAAkB,IACxE9hB,QAAS,kBAAM+hB,EAAe,YAFlC,UAMA,yBAAKhiB,UAAU,kBACf,yBACIA,UAAS,uBAAkC,QAAhB+hB,EAAwB,gBAAkB,IACrE9hB,QAAS,kBAAM+hB,EAAe,SAFlC,QAOJ,yBAAKhiB,UAAU,8BACX,kBAAC,KAAD,eACIA,UAAU,YACNoI,GAFR,CAGI0a,IAAqB,WAAhBf,GxB6wBQ1S,EwB7wBoCzR,EAAMyR,OxB8wBhE,CACH7F,MAAM,CACFzF,OAAQsL,EAAO7F,MAAMzF,OAAOC,YAEhCwB,KAAM6J,EAAO7J,KAAKC,YAClBsU,KAAM,CACF0F,SAASpQ,EAAO0K,KAAK0F,SACrB3D,UAAWzM,EAAO0K,KAAK+B,awBrxBkDle,EAAMyR,e,UC5DtE0T,G,kDACjB,WAAYnlB,GAAQ,IAAD,8BACf,cAAMA,IAiBVolB,OAAS,WACL,IAAIb,EAAUC,KAAKC,UAAU,EAAK/jB,MAAMgB,UACpC3D,EAAO,sCACP2mB,EAAO,IAAIC,KAAK,CAACJ,GAAU,CAAExmB,KAAMA,IAEnC6mB,GAAuB,EAC3B,IACIA,IAAyB,IAAID,KAC/B,MAAOE,GACLR,QAAQC,IAAIO,GAGZD,EACAE,KAAUC,OAAOL,EAAM,EAAKhkB,MAAMkB,UAElCkjB,KAAUE,KAAKC,UAAUlnB,EAAO,IAAMwmB,KA/B1C,EAAK7jB,MAAQ,CACTkB,SAAU,GACVF,SAAU,GACV2jB,YAAa,CACT5a,kBAAkB,EAClB5J,KAAM,KACN6J,YAAa,EACbG,2BAA4B,GAE5BC,iBAAiB,EACjBC,mBAAmB,IAZZ,E,kGAoCT,IAAD,OACGua,EAAazjB,KAAKnB,MAAlB4kB,SACFtlB,EAAQ,CACVa,KAAM,aACN0kB,gBAAgB,EAChBznB,KAAM,GACN0nB,aAAc,SAACC,GACXpB,QAAQC,IAAImB,GACZ,IAAMC,EAAS,IAAIC,WAiBnB,OAhBAD,EAAOE,WAAWH,GAClBC,EAAOG,OAAS,WACZ,IAAIC,EAASJ,EAAOhnB,OAChBqnB,EAASvB,KAAKwB,MAAMF,GAOxB,GALA,EAAK5lB,UAAS,SAACQ,GAAD,MAAY,CACtB4kB,SAAU,CAACG,GACX/jB,SAAUqkB,EACVnkB,SAAU6jB,EAAK5kB,SAEf,EAAKb,MAAMimB,SAAU,CAAC,IAAD,EACU,EAAKvlB,MAA5BkB,EADa,EACbA,SAAUF,EADG,EACHA,SAClB,EAAK1B,MAAMimB,SAAS,CAAErkB,WAAUF,eAGxC2iB,QAAQC,IAAImB,EAAK3nB,OACV,IAGf,OACI,yBACImE,MAAO,CACHc,MAAM,GAAD,OAAIlB,KAAK7B,MAAM+C,MAAQlB,KAAK7B,MAAM+C,MAAO,KAAzC,MACLgD,OAAO,GAAD,OAAKlE,KAAK7B,MAAM+F,OAASlE,KAAK7B,MAAM+F,OAAQ,IAA5C,OAEV3D,UAAU,gBACV,yBAAKA,UAAU,aAAf,cAEI,kBAAC,KAAD,eACIA,UAAU,eACNpC,EAFR,CAGIslB,SAAUA,IAEV,yBAAKljB,UAAU,OAAOE,cAAY,QAC9B,yBAAKC,UAAU,gBAGvB,yBACIH,UAAU,OACVE,cAAY,QAEZ,yBAAKD,QAASR,KAAKujB,OAAQ7iB,UAAU,qBAG7C,yBAAKH,UAAU,YAAYP,KAAKnB,MAAMkB,UACtC,yBAAKQ,UAAU,8BACX,kBAAC,KAAD,eACIA,UAAU,YACNP,KAAKnB,MAAM2kB,YAFnB,CAGIH,IAAKrjB,KAAK7B,MAAMkmB,iB,GA/FH5hB,IAAMC,WCL9B4hB,GAAY,CACrB,GACA,CACIve,KAAM,YAEV,CACIzB,OAAQ,WACRyB,KAAM,CAAC,WAAY,aAEvB,CACIA,KAAM,YACNc,WAAY,CACRC,MAAM,EACNd,YAAa,CAAC,eAGtB,CACID,KAAM,CAAC,YAAa,YACpBc,YAAY,GAEhB,CACId,KAAM,CACFC,YAAa,CAAC,WAAW,UACzBC,OAAQ,CACJnF,SAAU,SACVgF,UAAW,CACPJ,MAAO,WAKvB,CACIK,KAAM,CACFC,YAAa,CAAC,WAAW,UACzBC,OAAQ,CACJnF,SAAU,cACVgF,UAAW,CACPJ,MAAO,aC9BrBvJ,I,OAAU,CACZ,CACIC,SAAU,WACVC,YAAa,oEACbJ,KAAMH,KAIC,SAASyoB,KAAgB,IAAD,EACH7S,mBAASvV,GAAQ,GAAGF,MADjB,mBAC5B4D,EAD4B,UAEnC,OACI,yBAAKU,UAAU,iBACV+jB,GAAU5W,KAAI,SAAC8W,EAAY/lB,GACxB,IAAMmR,E3BuPf,SAAuBwP,GAC1B,IAAIzV,EAAU2V,YAAkBF,GAC5BqF,EAAanF,YAAkBtb,GAGnC,GAAI,SAAU2F,EACV,GAA4B,kBAAjBA,EAAQ5D,MAAqBuD,GAAaK,EAAQ5D,MACzD0e,EAAW1e,KAAKC,YAAc,CAAC2D,EAAQ5D,WACpC,GAAIuZ,UAAgB3V,EAAQ5D,MAC/B0e,EAAW1e,KAAKC,YAAc2D,EAAQ5D,KAAK2e,OAAOpb,SAC/C,GAA4B,kBAAjBK,EAAQ5D,KAAmB,CAEzC,IAAIC,EAAc,IAAIwN,IACtBmC,OAAOoE,KAAKpQ,EAAQ5D,MACf2e,OAAOpb,IACP9L,SAAQ,SAACwE,GACNgE,EAAY0Z,IAAI1d,MAEpB2H,EAAQ5D,KAAKC,cAG2B,kBAA7B2D,EAAQ5D,KAAKC,aACpBsD,GAAaK,EAAQ5D,KAAKC,aAE1BA,EAAY0Z,IAAI/V,EAAQ5D,KAAKC,aACtBsZ,UAAgB3V,EAAQ5D,KAAKC,cACpC2D,EAAQ5D,KAAKC,YAAY0e,OAAOpb,IAAc9L,SAAQ,SAACwE,GACnDgE,EAAY0Z,IAAI1d,OAI5B2H,EAAQ5D,KAAKC,YAAb,YAA+BA,GAE/B+P,KAAO0O,EAAW1e,KAAM4D,EAAQ5D,MAMxC,UAHO4D,EAAQ5D,KAGX,WAAY4D,EAAS,CACrB,GAA8B,kBAAnBA,EAAQrF,QAAuBmF,GAAeE,EAAQrF,QAC7DmgB,EAAWngB,OAAOC,WAAaoF,EAAQrF,YACpC,GAAIgb,UAAgB3V,EAAQrF,QAC/BqF,EAAQrF,OAASqF,EAAQrF,OAAOogB,OAAOjb,IACvCgb,EAAWngB,OAAOC,WACdoF,EAAQrF,OAAOpH,OAAS,EAAIyM,EAAQrF,OAAO,GAAK8E,GAAc,OAC/D,CAEH,IAAIub,EAAahP,OAAOoE,KAAKpQ,EAAQrF,QAAQogB,OAAOjb,IAEpD,GAAIE,EAAQrF,OAAOC,YAAc+a,UAAgB3V,EAAQrF,OAAOC,YAAa,CACzE,IAAMqgB,EAAUjb,EAAQrF,OAAOC,WAAWmgB,OAAOjb,IAC7Cmb,EAAQ1nB,OAAS,IACjByM,EAAQrF,OAAOC,WAAaqgB,EAAQ,IAGvCjb,EAAQrF,OAAOC,YAAekF,GAAeE,EAAQrF,OAAOC,cACzDogB,EAAWznB,OAAS,EACpByM,EAAQrF,OAAOC,WAAaogB,EAAW,GAEvChb,EAAQrF,OAAOC,WAAa6E,GAAc,IAGlD2M,KAAO0O,EAAWngB,OAAQqF,EAAQrF,eAE/BqF,EAAQrF,OAInB,GAAI,eAAgBqF,EAChB,GAAkC,mBAAvBA,EAAQ9C,YAA4B8C,EAAQ9C,WAEnD4d,EAAW5d,WAAWC,MAAO,EAC7B2d,EAAW5d,WAAWb,YAAcjC,OACjC,GAC2B,kBAAvB4F,EAAQ9C,YACf2C,GAAmBG,EAAQ9C,YAE3B4d,EAAW5d,WAAWb,YAAc,CAAC2D,EAAQ9C,iBAC1C,GAAIyY,UAAgB3V,EAAQ9C,YAC/B4d,EAAW5d,WAAWb,YAAc2D,EAAQ9C,WAAW6d,OAAOlb,QAC3D,CAEH,GAAIG,EAAQ9C,WAAWb,YACnB,GAC8C,kBAAnC2D,EAAQ9C,WAAWb,aAC1BwD,GAAmBG,EAAQ9C,WAAWb,aAEtC2D,EAAQ9C,WAAWb,YAAc,CAAC2D,EAAQ9C,WAAWb,kBAClD,GAAIsZ,UAAgB3V,EAAQ9C,WAAWb,aAAc,CACxD,IAAM4e,EAAUjb,EAAQ9C,WAAWb,YAAY0e,OAAOlb,IACtDG,EAAQ9C,WAAWb,YACf4e,EAAQ1nB,OAAS,EAAI0nB,EAAU7gB,OAEnC4F,EAAQ9C,WAAWb,YAAcjC,OAGrC4F,EAAQ9C,WAAWb,YAAcjC,EAErCgS,KAAO0O,EAAW5d,WAAY8C,EAAQ9C,YAa9C,cAVO8C,EAAQ9C,WAGX,UAAW8C,GACXoM,KAAO0O,EAAWxgB,MAAO0F,EAAQ1F,cAE9B0F,EAAQ1F,MAGf8R,KAAO0O,EAAWxgB,MAAO0F,GAClB8a,E2BvWoBI,CAAcL,GAE7B,OACI,yBAAKjkB,UAAU,cAAcxC,IAAG,sBAAiBU,IAC7C,kBAAC,GAAD,CACI4lB,QAASG,EACTtjB,MAAO,IACPgD,OAAQ,MAEZ,kBAAC,GAAD,CAASjI,KAAM4D,EAAS9D,OAAQ6T,OAAQA,EAAQ1O,MAAO,KAAMgD,OAAQ,W,WCpBhF4gB,GAAU,SAACC,EAAGC,GACzB,IAAMC,EAASC,OAAOH,EAAEI,MAAM,KAAK,IAEnC,OADeD,OAAOF,EAAEG,MAAM,KAAK,IACnBF,GAGLG,GAAmB,SAACC,GAC7B,IAAMC,EAAgB,GAStB,OARA,IAAIlX,MAAMiX,EAAanoB,QAAQ4F,KAAK,KAAKtF,SAAQ,SAACmQ,EAAE/C,GAClD,IAAM7M,EAAMsnB,EAAatnB,IAAI6M,IAlBF,SAAC+C,GAChC,IAAMiX,EAAUjX,EAAEwX,MAAM,KACxB,OAAGP,EAAQ1nB,OAAO,GAAgB,UAAb0nB,EAAQ,IAiBtBW,CAAiBxnB,IAElBunB,EAAcxa,KAAK/M,MAGvBunB,EAAcE,KAAKV,IACZQ,G,0CCzBEG,GAAoB,CAC/B,CACEzmB,KAAK,SACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,SACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,GACT,IAAO,GACP,KAAQ,CAAE,KAAQ,GAClB,OAAU,IAEZ,UAAa,CACX,MAAS,SACT,UAAa,OACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,MACnB,WAAc,OACd,eAAkB,UAClB,aAAgB,EAChB,YAAe,EACf,iBAAoB,EACpB,iBAAoB,UACpB,gBAAmB,UAGvB,KAAQ,CACN,YAAe,CAAC,WAAY,YAC5B,SAAY,CACV,UAAa,EACb,UAAa,EACb,QAAW,MACX,KAAQ,UAEV,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,MACnB,UAAa,UACb,OAAU,IAGd,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,QACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,GAEb,MAAS,CAAE,KAAQ,SAErB,KAAQ,CACN,SAAY,OACZ,UAAa,OACb,KAAQ,CAAE,KAAQ,SAAU,SAAY,KAAM,MAAS,GACvD,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,KAAQ,GACR,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,MACnB,UAAa,UACb,OAAU,GAEZ,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,MACnB,UAAa,UACb,OAAU,GAEZ,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,MACnB,UAAa,UACb,OAAU,OAMpB,CACE1mB,KAAM,iBACN0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,IAEX,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,SAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAK,iBACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,IAEX,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,SAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAMnB,CACE1mB,KAAK,cACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,IAEX,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,SAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAK,cACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,QACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,IAEX,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,SAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,WACN0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACJ,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAK3B,KAAQ,CACN,YAAe,CAAC,YAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,qBACN0mB,SAAU,CACR,MAAS,CACP,MAAS,IACT,OAAU,IACV,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAKzB,KAAQ,CACN,YAAe,CAAC,WAAY,aAC5B,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,oBACN0mB,SAAU,CACR,MAAS,CACP,MAAS,IACT,OAAU,IACV,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAKzB,KAAQ,CACN,YAAe,CAAC,WAAY,YAC5B,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,kBACN0mB,SAAU,CACR,MAAS,CACP,MAAS,IACT,OAAU,IACV,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,MAAQ,EACR,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAKzB,KAAQ,CACN,YAAe,CAAC,WAAY,WAAY,UACxC,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,gBACN0mB,SAAU,CACR,MAAS,CACP,MAAS,IACT,OAAU,IACV,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,cACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,OACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAKzB,KAAQ,CACN,YAAe,CAAC,WAAY,WAAY,UACxC,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,SACd,YAAe,EACf,QAAW,GACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAM,kBACN0mB,SAAU,CACR,MAAS,CACP,MAAS,IACT,OAAU,IACV,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,OAAU,GACV,MAAS,GAGT,IAAO,GAGP,KAAQ,CACJ,KAAQ,IAGd,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,MAAQ,EACR,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAKzB,KAAQ,CACN,YAAe,CAAC,WAAY,YAC5B,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,SACd,YAAe,EACf,QAAW,GACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAK,iBACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,GACT,IAAO,GACP,KAAQ,CAAE,KAAQ,IAEpB,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,OACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,YAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAK,YACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,IAEX,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,YACb,WAAc,CACZ,WAAc,cACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,SAAU,YAAa,YACvC,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,MAKnB,CACE1mB,KAAK,iBACL0mB,SAAU,CACR,MAAS,CACP,UAAa,IACb,WAAc,IACd,OAAU,GACV,OAAU,CACR,WAAc,WACd,SAAY,CAAE,UAAa,GAAI,UAAa,CAAE,MAAS,UACvD,QAAW,GACX,OAAU,GACV,UAAa,GACb,SAAY,GACZ,MAAS,GACT,IAAO,GACP,KAAQ,CAAE,KAAQ,IAEpB,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,KAAQ,CACN,SAAY,aACZ,UAAa,OACb,WAAc,CACZ,WAAc,iBACd,YAAe,CACb,QACA,YACA,cACA,cACA,aACA,SACA,kBACA,aAEF,SAAY,OACZ,SAAY,MACZ,WAAc,CACZ,MAAS,OACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,WAAc,QACd,UAAa,QACb,OAAU,EACV,QAAW,GAEb,WAAc,CACZ,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,cAAiB,CACf,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,WAAc,CACZ,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,OAErB,cAAiB,CACf,MAAS,OACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,SAIzB,KAAQ,CACN,YAAe,CAAC,YAChB,SAAY,CAAE,UAAa,IAAK,UAAa,EAAG,QAAW,OAC3D,OAAU,CACR,SAAY,SACZ,OAAU,GACV,UAAa,CACX,MAAS,SACT,UAAa,UACb,YAAe,UACf,YAAe,EACf,OAAU,EACV,WAAc,QACd,UAAa,QACb,QAAW,GAEb,UAAa,CACX,MAAS,QACT,YAAe,UACf,WAAc,QACd,YAAe,EACf,QAAW,EACX,gBAAmB,QAGvB,MAAS,CACP,QAAW,MACX,WAAc,UACd,SAAY,WAEd,UAAa,CAAE,MAAS,MACxB,SAAY,CACV,MAAS,OACT,WAAc,SACd,YAAe,UACf,YAAe,EACf,gBAAmB,MACnB,QAAW,OCx9DrB,IAKM/iB,GAAqB,CACvB0f,WAMWzf,gBAZS,SAAC/D,GAAD,MAAY,CAEhC+Q,OAAQ/Q,EAAM+Q,UAUsBjN,GAAzBC,EApLf,SAAuBzE,GAAQ,IAAD,EACcuT,mBAAS6N,OAAO8F,cAD9B,mBACnBA,EADmB,aAEgB3T,mBAAS,IAFzB,mBAEnBiU,EAFmB,KAEJC,EAFI,OAGgBlU,mBAAS0T,GAAiBC,IAH1C,mBAGnBC,EAHmB,KAGJO,EAHI,KAiF1B,SAASC,EAAYC,EAAeC,GAChCjQ,GAAOgQ,EAAeC,G9BmtBvB,SAA6BpW,GAAQ,IACjC0K,EAAQ1K,EAAR0K,KACY,eAAhBA,EAAK0F,SACgB,cAAjB1F,EAAK+B,UACJ/B,EAAK8B,QAAU,oBAEf9B,EAAK8B,QAAU,eAEI,SAAlB9B,EAAK0F,SACU,cAAjB1F,EAAK+B,UACqB,kBAAtB/B,EAAK6B,KAAK8F,UACT3H,EAAK8B,QAAU,gBAEf9B,EAAK8B,QAAU,YAGnB9B,EAAK8B,QAAU,YAGnB9B,EAAK8B,QAAU,QAEnB9B,EAAKyF,OAAL,YAAkBtX,GAAkB6R,EAAK8B,U8BvuBrC6J,CAAoBF,GAiBxB,OAtFA7T,qBAAU,WAEN,QAA+ByK,IAA3B0I,EAAaa,UAAyB,CAEtCb,EAAaa,UAAY,EACzB,IAAK,IAAItb,EAAI6a,GAAiBvoB,OAAS,EAAG0N,EAAI,EAAGA,IAAK,CAClD,IAAM5I,EAAOyjB,GAAiB7a,GACxBsb,EAAYb,EAAaa,UACzBnoB,EAAG,gBAAYmoB,GACfxD,EAAUC,KAAKC,UAAU,CAC3BhT,OAAQ5N,EAAK0jB,SACb1mB,KAAMgD,EAAKhD,KACXP,MAAOynB,IAEXb,EAAac,QAAQpoB,EAAK2kB,GAC1B2C,EAAaa,UAAY,EAAIhB,OAAOgB,GAExCN,EAAiBP,EAAanoB,WAEnC,IAEHgV,qBAAU,WACN2T,EAAiBT,GAAiBC,MACnC,CAACM,IAgEA,yBACIvlB,MAAO,CAGHc,MAAO,SACPgD,OAAQ,SAEZ3D,UAAU,sBAEV,yBAAKA,UAAU,aAAf,eAEI,yBAAKA,UAAU,OAAOC,QAzElC,WAKI,QAJ+Bmc,IAA3B0I,EAAaa,YAEbb,EAAaa,UAAY,IAExBb,EAED,OADAe,MAAM,+CACC,EAGP,IAAMF,EAAYb,EAAaa,UACzBnoB,EAAG,gBAAYmoB,GACfxD,EAAUC,KAAKC,UAAU,CAC3BhT,OAAQzR,EAAMyR,OACd5Q,KAAK,iBAAD,OAAmBknB,GACvBznB,MAAOynB,IAEXb,EAAac,QAAQpoB,EAAK2kB,GAC1B2C,EAAaa,UAAY,EAAIhB,OAAOgB,GACpCN,EAAiBP,EAAanoB,SAsDwBuD,cAAY,QAC1D,yBAAKC,UAAU,eAEnB,yBAAKH,UAAU,OAAOC,QArDlC,WACI,IAAIkiB,EAAUC,KAAKC,UAAUzkB,EAAMyR,QAC/B1T,EAAO,sCACP2mB,EAAO,IAAIC,KAAK,CAACJ,GAAU,CAAExmB,KAAMA,IAEnC6mB,GAAuB,EAC3B,IACIA,IAAyB,IAAID,KAC/B,MAAOE,GACLR,QAAQC,IAAIO,GAGZD,EACAE,KAAUC,OAAOL,EAAM,iBAEvBI,KAAUE,KAAKC,UAAUlnB,EAAO,IAAMwmB,KAsCiBjiB,cAAY,QAC3D,yBAAKC,UAAU,qBAGvB,yBAAKH,UAAU,yCACV+kB,EAAc5X,KAAI,SAACC,EAAG0Y,GACnB,IAAMC,EAAW3D,KAAKwB,MAAMkB,EAAakB,QAAQ5Y,IACjD,OAAK2Y,EAID,yBAAK/lB,UAAU,mBAAmBxC,IAAG,iBAAYsoB,IAC7C,yBAAK9lB,UAAU,2BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,mBACX,yBACIA,UAAU,kBACV8iB,IAAKmD,KACLhmB,QAAS,kBA/CjD,SAA6BmN,GACzB,IAAM2Y,EAAW3D,KAAKwB,MAAMkB,EAAakB,QAAQ5Y,IACjD,GAAI2Y,GAAYA,EAAS1W,OAAQ,CAC7B,IAAMmW,EAAgB5Q,YAAYuM,IAClCoE,EAAYC,EAAeO,EAAS1W,QACpCzR,EAAMkkB,OAAO0D,IA0CkCU,CAAoB9Y,OAG3C,yBAAKpN,UAAU,mBACX,yBACIA,UAAU,kBACV8iB,IAAKqD,KACLlmB,QAAS,kBA7CnBmmB,EA6C8ChZ,EA5CxE0X,EAAauB,WAAWD,QACxBf,EAAiBP,EAAanoB,QAFlC,IAA8BypB,OAiDF,yBAAKpmB,UAAU,oBAAf,wBAAoD8lB,KAExD,yBACI9lB,UAAU,oBACVH,MAAO,CAEH8D,O/BhJF,K+BmJF,kBAACgd,GAAD,CACIjlB,KAAM4qB,SACNjX,OAAQ0W,EAAS1W,OACjBkB,Y/BvJH,I+BwJGC,a/BvJF,O+BqHH,a,oECvIzB+V,I,OAAmB,CAAC,cAAe,YAAa,YAAY,mBAC1DC,GAAWC,KAAXD,OACAE,GAAUC,KAAVD,MAEO,SAASE,GAAmBhpB,GAAQ,IAAD,EACMuT,mBAAS,EAAC,GAAO,GAAO,GAAO,IADrC,mBACvC0V,EADuC,KACnBC,EADmB,KAEtCC,EAAwBnpB,EAAxBmpB,cAAeprB,EAASiC,EAATjC,KACjBqrB,EAAwBD,EAAcnkB,gBACtCmkB,EAAcnkB,gBAAgBgiB,MAAM,KAAKzX,KAAI,SAACC,GAAD,OAAO6Z,SAAS7Z,MAC7D,KACA8Z,EAAqB,SAACC,GACxB,IAAMJ,EAAa,2BAAQnpB,EAAMmpB,eAAkBI,GACnDvpB,EAAMimB,SAAN,eAAkBjmB,EAAMwpB,UAAxB,2BAAyCL,GAAkBI,MAEzDE,EAAoB,SAAC7pB,EAAK0B,GAC5BgoB,EAAmB,eAAG1pB,EAAM0B,KAE1BooB,EAAyB,SAACppB,EAAOgB,GACnC,IAAMmlB,EAAO,YAAO2C,GACpB3C,EAAQnmB,GAASgB,EACjBgoB,EAAmB,CAAEtkB,gBAAiByhB,EAAQkD,KAAK,QAGjDC,EAA0B,SAACtpB,GAC7B,IAAMmmB,EAAO,YAAOwC,GACpBxC,EAAQnmB,IAAUmmB,EAAQnmB,GAC1B4oB,EAAsBzC,IAGpBoD,EAA2B,SAACC,EAAWxpB,GACzCgpB,EAAmB,eAAGX,GAAiBroB,GAASwpB,EAAUC,OAG9D,OACI,yBACI3nB,UAAU,sBACVH,MAAO,CACHiE,OAAQ,SAOZ,kBAAC,KAAD,CAEI8jB,mBAAoB,QACpB/nB,MAAO,CACHgoB,gBAAiB,YAGrB,kBAACnB,GAAD,CAAO1mB,UAAU,aAAa8nB,OAAQlqB,EAAMwpB,WAC9B,SAATzrB,EACG,yBAAKqE,UAAU,sBACX,uCACA,kBAAC,KAAD,CACId,MAAO6nB,EAAc5hB,MACrBjE,KAAK,QACLD,SAAU,SAAC/B,GAAD,OAAWmoB,EAAkB,QAASnoB,IAChDW,MAAO,CAAEc,MAAO,MAEhB,kBAAC6lB,GAAD,CAAQhpB,IAAI,UACR,wCAEJ,kBAACgpB,GAAD,CAAQhpB,IAAI,QACR,wCAKZ,yBAAKwC,UAAU,sBACX,uCACA,kBAAC,KAAD,CACIkB,KAAK,QACLhC,MAAO6nB,EAAc5hB,MACrBlE,SAAU,SAAC/B,GAAD,OAAWmoB,EAAkB,QAASnoB,IAChDW,MAAO,CAAEc,MAAO,MAEhB,kBAAC6lB,GAAD,CAAQhpB,IAAI,QACR,sCAEJ,kBAACgpB,GAAD,CAAQhpB,IAAI,SACR,yCAMhB,yBAAKwC,UAAU,sBACX,4CACA,kBAAC,KAAD,CACIkB,KAAK,QACLhC,MAAO6nB,EAAclkB,WACrBhD,MAAO,CAAEc,MAAO,KAChBM,SAAU,SAAC/B,GAAD,OAAWmoB,EAAkB,aAAcnoB,KAErD,kBAACsnB,GAAD,CAAQtnB,MAAM,SAAd,SACA,kBAACsnB,GAAD,CAAQtnB,MAAM,UAAd,YAIR,yBAAKc,UAAU,sBACX,6CACA,kBAAC,KAAD,CACId,MAAO6nB,EAAcpkB,YACrBhH,KAAK,SACLuF,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN4E,EAAkB,cAAe1C,OAAOlC,EAAE/kB,OAAOwB,SAErDW,MAAO,CAAEc,MAAO,YAIxB,yBAAKX,UAAU,sBACX,yCACA,kBAAC,KAAD,CACId,MAAO6nB,EAAcrkB,QACrB/G,KAAK,SACLuF,KAAK,QACLkR,IAAK,EACLrR,IAAK,EACLqT,KAAM,GACNnT,SAAU,SAACwhB,GAAD,OAAO4E,EAAkB,UAAW5E,IAC9C5iB,MAAO,CAAEc,MAAO,YAIvBomB,EAAc1hB,OACX,yBAAKrF,UAAU,sBACX,wCACA,kBAAC,KAAD,CACId,MAAO6nB,EAAc1hB,OACrB1J,KAAK,SACLuF,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN4E,EAAkB,SAAU1C,OAAOlC,EAAE/kB,OAAOwB,SAEhDW,MAAO,CAAEc,MAAO,YAGxB,KAEHqmB,EACG,yBAAKhnB,UAAU,sBACX,iDACA,6BACI,kBAAC,KAAD,CACId,MAAO8nB,EAAsB,GAC7BrrB,KAAK,SACLuF,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN6E,EAAuB,EAAG3C,OAAOlC,EAAE/kB,OAAOwB,SAE9CW,MAAO,CAAEc,MAAO,UAEpB,kBAAC,KAAD,CACIzB,MAAO8nB,EAAsB,GAC7BrrB,KAAK,SACLuF,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN6E,EAAuB,EAAG3C,OAAOlC,EAAE/kB,OAAOwB,SAE9CW,MAAO,CACHc,MAAO,OACPQ,WAAY,YAK5B,KAGA,6BACI,yBAAKnB,UAAU,sBACX,4CACA,yBACIC,QAAS,kBAAMunB,EAAwB,IACvC3nB,MAAO,CACHgoB,gBAAiBd,EAActkB,YAC/B9B,MAAO,QACPgD,OAAQ,WAInBkjB,EAAmB,GAChB,kBAAC,KAAD,CACI7mB,UAAU,oBACVF,MAAOinB,EAActkB,YACrBxB,SAAU,SAAC/B,GAAD,OAAWuoB,EAAyBvoB,EAAO,MAEzD,MAIX6nB,EAAc3hB,UACX,6BACI,yBAAKpF,UAAU,sBACX,0CACA,yBACIC,QAAS,kBAAMunB,EAAwB,IACvC3nB,MAAO,CACHgoB,gBAAiBd,EAAc3hB,UAC/BzE,MAAO,QACPgD,OAAQ,WAInBkjB,EAAmB,GAChB,kBAAC,KAAD,CACI7mB,UAAU,oBACVF,MAAOinB,EAAc3hB,UACrBnE,SAAU,SAAC/B,GAAD,OAAWuoB,EAAyBvoB,EAAO,MAEzD,MAER,KAEH6nB,EAAczhB,UACX,6BACI,yBAAKtF,UAAU,sBACX,0CACA,yBACIC,QAAS,kBAAMunB,EAAwB,IACvC3nB,MAAO,CACHgoB,gBAAiBd,EAAczhB,UAC/B3E,MAAO,QACPgD,OAAQ,WAInBkjB,EAAmB,GAChB,kBAAC,KAAD,CACI7mB,UAAU,oBACVF,MAAOinB,EAAczhB,UACrBrE,SAAU,SAAC/B,GAAD,OAAWuoB,EAAyBvoB,EAAO,MAEzD,MAER,KAEH6nB,EAAc/W,WACX,yBAAKhQ,UAAU,sBACX,4CACA,kBAAC,KAAD,CACId,MAAO6nB,EAAc/W,WACrB9O,KAAK,QACLD,SAAU,SAAC/B,GAAD,OAAWmoB,EAAkB,aAAcnoB,IACrDW,MAAO,CAAEc,MAAO,MAEhB,kBAAC6lB,GAAD,CAAQhpB,IAAI,UACR,wCAEJ,kBAACgpB,GAAD,CAAQhpB,IAAI,QACR,wCAIZ,KAEHupB,EAAc9W,aACX,yBAAKjQ,UAAU,sBACX,8CACA,kBAAC,KAAD,CACId,MAAO6nB,EAAc9W,aACrBtU,KAAK,SACLuF,KAAK,QACLkR,IAAK,EACLrR,IAAK,EACLqT,KAAM,GACNnT,SAAU,SAACwhB,GAAD,OAAO4E,EAAkB,eAAgB5E,IACnD5iB,MAAO,CAAEc,MAAO,YAGxB,KAEHomB,EAAchX,eACX,6BACI,yBAAK/P,UAAU,sBACX,+CACA,yBACIC,QAAS,kBAAMunB,EAAwB,IACvC3nB,MAAO,CACHgoB,gBAAiBd,EAAchX,eAC/BpP,MAAO,QACPgD,OAAQ,WAInBkjB,EAAmB,GAChB,kBAAC,KAAD,CACI7mB,UAAU,oBACVF,MAAOinB,EAAchX,eACrB9O,SAAU,SAAC/B,GAAD,OAAWuoB,EAAyBvoB,EAAO,MAEzD,MAER,QCnST,SAAS6oB,GAAWnqB,GAAQ,IAC/ByR,EAAoFzR,EAApFyR,OAD8B,EACsDzR,EAA5EH,cADsB,MACbuqB,EADa,IACsDpqB,EAA9DF,cADQ,MACCuqB,EADD,IACsDrqB,EAAhD+C,aADN,MjCeT,GiCfS,IACsD/C,EAAnC+F,cADnB,MjCgBR,GiChBQ,IACsD/F,EAArBM,aADjC,OAC0C,EAD1C,EAC6CvC,EAASiC,EAATjC,KAEnF,OACI,yBACIqE,UAAS,sBAAiB9B,GAC1ByC,MAAK,UAAKA,EAAL,MACLgD,OAAM,UAAKA,EAAL,MACN8M,QAAO,cAAS9P,EAAT,YAAkBgD,GACzB+M,oBAAoB,YAEV,SAAT/U,EACoB,SAAjB0T,EAAOlK,MACP,kBAACrC,EAAD,iBACQuM,EADR,CAEI5R,OAAQA,EACRC,OAAQA,KAEZ,kBAAC4E,EAAD,iBACQ+M,EADR,CAEI3T,KAAQ0P,GAAe3N,EAAQC,MAGnC,kBAAC2P,GAAD,iBAAcgC,EAAd,CAAsBpM,EAAGtC,EAAQ,EAAGyC,EAAGO,EAAS,MC5BjD,SAASukB,GAAetqB,GAAQ,IACnCsH,EAAqCtH,EAArCsH,UAAWK,EAA0B3H,EAA1B2H,UAAYoc,EAAc/jB,EAAd+jB,WACzBwG,EAAmB,SAACjpB,GACxBtB,EAAMimB,SAAS3kB,IAGjB,OACI,yBAAKc,UAAU,oBACX,yBAAKC,QAAS,kBAAMkoB,EAAiB,SAASnoB,UAAU,oBACpD,kBAAC,KAAMooB,MAAP,CAAalpB,MAAOyiB,GAChB,kBAAC,KAAM0G,OAAP,CAAcxoB,MAAO+H,EAAkB1I,MAAM,OAAOvD,MAAI,GAAxD,UAKR,yBACIsE,QAAS,kBAAMkoB,EAAiB,SAChCnoB,UAAS,iCACU,SAAf2hB,EAAwB,cAAgB,KAG5C,kBAACoG,GAAD,CAAY1Y,OAAQnK,KAExB,yBAAKjF,QAAS,kBAAMkoB,EAAiB,SAASnoB,UAAU,oBACpD,kBAAC,KAAMooB,MAAP,CAAalpB,MAAOyiB,GAChB,kBAAC,KAAM0G,OAAP,CAAcxoB,MAAO+H,EAAkB1I,MAAM,QAA7C,UAKR,yBACIe,QAAS,kBAAMkoB,EAAiB,SAChCnoB,UAAS,iCACU,SAAf2hB,EAAwB,cAAgB,KAG5C,kBAACoG,GAAD,CAAY1Y,OAAQ9J,EAAW5J,KAAM,W,WCtB7C6qB,GAAWC,KAAXD,OAEF8B,G,kDACF,WAAY1qB,GAAQ,IAAD,8BACf,cAAMA,IAmBV4pB,wBAA0B,SAACtpB,GACvB,IAAMmmB,EAAU,EAAK/lB,MAAMiqB,0BAC3BlE,EAAQnmB,IAAUmmB,EAAQnmB,GAC1B,EAAKJ,SAAS,CACVyqB,0BAA2BlE,KAxBhB,EA2BnBoD,yBAA2B,SAACC,EAAWP,EAAQ3pB,GAC3C,IAAMgrB,EAAe,EAAK5qB,MAAMkmB,QAAQqD,GACxCqB,EAAahrB,GAAOkqB,EAAUC,IAC9B,EAAKc,iBAAL,eAAyBtB,EAASqB,KA9BnB,EAgCnBE,uBAAyB,SAACxpB,EAAOioB,EAAQ3pB,GACrC,IAAMgrB,EAAe,EAAK5qB,MAAMkmB,QAAQqD,GACxCqB,EAAahrB,GAAOmnB,OAAOzlB,GAC3B,EAAKupB,iBAAL,eAAyBtB,EAASqB,KAnCnB,EAqCnBG,wBAA0B,SAACzpB,EAAOioB,EAAQ3pB,GACtC,IAAMgrB,EAAe,EAAK5qB,MAAMkmB,QAAQqD,GACxCqB,EAAahrB,GAAO0B,EACpB,EAAKupB,iBAAL,eAAyBtB,EAASqB,KAxCnB,EA2CnBI,qBAAsB,SAACnG,GACnB,OAAOA,GACH,IAAK,cAC0D,IAAxD,EAAK7kB,MAAMkmB,QAAQre,YAAYuD,QAAQ,aACtC,EAAK6f,oBAAoB,YAE7B,EAAKF,wBAAwB,SAAU,WAAY,QACnD,MACJ,IAAK,YAC0D,IAAxD,EAAK/qB,MAAMkmB,QAAQre,YAAYuD,QAAQ,aACtC,EAAK6f,oBAAoB,YAE7B,EAAKF,wBAAwB,WAAY,WAAY,QACrD,MACJ,QACI,EAAKE,oBAAoB,cA1DlB,EA+DnBC,wBAA0B,SAAC3B,EAAQjoB,GAC/B,IAAMspB,EAAY,2BAAQ,EAAK5qB,MAAMkmB,QAAQqD,IAAYjoB,GAEzD,EAAKupB,iBAAL,eAAyBtB,EAASqB,KAlEnB,EAqEnBL,iBAAmB,SAACjpB,GAChB,EAAKpB,SAAS,CACV6jB,WAAYziB,KAvED,EA0EnBupB,iBAAmB,SAACvpB,GAChB,EAAKtB,MAAMgkB,aAAa,CAAEpkB,IAAK,OAAQ0B,WAzEvC,EAAKZ,MAAQ,CACTuoB,oBAAoB,EACpB0B,0BAA2B,EAAC,GAAO,GAAO,GAC1C5G,WAAY,QALD,E,gEAQChmB,EAAMotB,GACtB,IAAM1E,EAAO,YAAO5kB,KAAK7B,MAAMkmB,QAAQre,aACjCujB,EAAY3E,EAAQrb,QAAQrN,IACf,IAAfqtB,EACA3E,EAAQ9Z,KAAK5O,GAEb0oB,EAAQ1E,OAAOqJ,EAAW,GAE9BvpB,KAAKgpB,iBAAiB,CAClBhjB,YAAa4e,M,+BA4DX,IAAD,OACCP,EAAUrkB,KAAK7B,MAAMkmB,QACrBsD,EAAsC,SAA1B3nB,KAAKnB,MAAMqjB,WAAwB,YAAc,YAC7DoF,EAAgBtnB,KAAK7B,MAAMkmB,QAAQpe,OAAO0hB,GAChD,OACI,yBAAKpnB,UAAU,iCACX,yBAAKA,UAAU,uBAAf,YACA,yBAAKA,UAAU,4BAEX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MACI4kB,EAAQre,YAAYuD,QAAQ,aAAe,EAAI,WAAa,GAEhE9H,KAAM,SAEN,kBAAC,KAAMmnB,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,WAAYpG,IAEzC5iB,MAAOsI,GACPjJ,MAAM,WACNgC,KAAM,QACNvF,MAAI,GAPR,cAaR,yBAAKqE,UAAU,yBACX,yBAAKA,UAAU,qBACX,sCACA,kBAAC,KAAD,CACId,MAAO4kB,EAAQ3d,SAASxK,KACxBkE,MAAO,CAAEc,MnCvIP,KmCwIFO,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN,EAAKkG,wBAAwBlG,EAAG,WAAY,UAG/Chb,EAAmB0F,KAAI,SAACC,GACrB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,qBACX,2CACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO4kB,EAAQ3d,SAASC,UACxBnF,SAAU,SAACwhB,GAAD,OACN,EAAKiG,uBAAuBjG,EAAG,WAAY,cAE/C5iB,MAAO,CAAEc,MnChKP,QmCmKV,yBAAKX,UAAU,qBACX,2CACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO4kB,EAAQ3d,SAASE,UACxBpF,SAAU,SAACwhB,GAAD,OACN,EAAKiG,uBAAuBjG,EAAG,WAAY,cAE/C5iB,MAAO,CAAEc,MnC7KP,QmCgLV,yBAAKX,UAAU,qBACX,yCACA,kBAAC,KAAD,CACId,MAAO4kB,EAAQ3d,SAASP,QACxB/F,MAAO,CAAEc,MnCpLP,KmCqLFO,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN,EAAKkG,wBAAwBlG,EAAG,WAAY,aAG/C,IACAlb,EAAsB4F,KAAI,SAACC,GACxB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,UAU7B,yBAAKpN,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MACI4kB,EAAQre,YAAYuD,QAAQ,cAAgB,EAAI,YAAc,IAGlE,kBAAC,KAAMqf,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,YAAapG,IAE1C5iB,MAAOsI,GACPjJ,MAAM,YACNvD,MAAI,GANR,eAYR,yBAAKqE,UAAU,yBACX,yBAAKA,UAAU,qBACX,uCACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO4kB,EAAQ9d,UAAUC,MACzBhF,SAAU,SAACwhB,GAAD,OACN,EAAKiG,uBAAuBjG,EAAG,YAAa,UAEhD5iB,MAAO,CAAEc,MnCtOP,UmC6OlB,yBAAKX,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MAAO4kB,EAAQre,YAAYuD,QAAQ,UAAY,EAAI,QAAU,IAE7D,kBAAC,KAAMqf,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,QAASpG,IAEtC5iB,MAAOsI,GACPjJ,MAAM,QACNvD,MAAI,GANR,WAYR,6BACI,yBAAKqE,UAAU,sBACX,2CACA,yBACIC,QAAS,kBAAM,EAAKunB,wBAAwB,IAC5C3nB,MAAO,CACHgoB,gBAAiB/D,EAAQhkB,MAAM+F,WAC/BlF,MAAO,QACPgD,OAAQ,WAInBlE,KAAKnB,MAAMiqB,0BAA0B,GAClC,kBAAC,KAAD,CACIvoB,UAAU,oBACVF,MAAOgkB,EAAQhkB,MAAM+F,WACrB5E,SAAU,SAACymB,GAAD,OACN,EAAKD,yBACDC,EACA,QACA,iBAIZ,MAER,6BACI,yBAAK1nB,UAAU,sBACX,yCACA,yBACIC,QAAS,kBAAM,EAAKunB,wBAAwB,IAC5C3nB,MAAO,CACHgoB,gBAAiB/D,EAAQhkB,MAAMgG,SAC/BnF,MAAO,QACPgD,OAAQ,WAInBlE,KAAKnB,MAAMiqB,0BAA0B,GAClC,kBAAC,KAAD,CACIvoB,UAAU,oBACVF,MAAOgkB,EAAQhkB,MAAMgG,SACrB7E,SAAU,SAACymB,GAAD,OACN,EAAKD,yBACDC,EACA,QACA,eAIZ,MAER,yBAAK1nB,UAAU,yBACX,yBAAKA,UAAU,qBACX,uCACA,kBAAC,KAAD,CACId,MAAO,OACPW,MAAO,CAAEc,MnCvTP,KmCwTFO,KAAK,SAEL,kBAAC,GAAD,CAAQ1D,IAAK,OAAQ0B,MAAO,QACvB,YAQrB,yBAAKc,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MACI4kB,EAAQre,YAAYuD,QAAQ,aAAe,EAAI,WAAa,IAGhE,kBAAC,KAAMqf,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,WAAYpG,IAEzC5iB,MAAOsI,GACPjJ,MAAM,WACNvD,MAAI,GANR,cAYR,yBAAKqE,UAAU,4CACX,kBAAC+nB,GAAD,CACI1Y,OAAQyU,EAAQ5d,SAChBvK,KAAM,OACNgF,MAAO,IACPgD,OAAQ,GACRlG,OAAQwrB,EACRvrB,OAAQwrB,KAGhB,kBAACtC,GAAD,CACIjrB,KAAM,OACNyrB,UAAW,WACXL,cAAejD,EAAQ5d,SACvB2d,SAAUpkB,KAAKgpB,oBAIvB,yBAAKzoB,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MAAO4kB,EAAQre,YAAYuD,QAAQ,UAAY,EAAI,QAAU,IAE7D,kBAAC,KAAMqf,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,QAASpG,IAEtC5iB,MAAOsI,GACPjJ,MAAM,QACNvD,MAAI,GANR,WAYR,yBAAKqE,UAAU,yBACX,yBAAKA,UAAU,qBACX,sCACA,kBAAC,KAAD,CACId,WAC2Bkd,IAAvB0H,EAAQlU,MAAMjU,KACR,OACAmoB,EAAQlU,MAAMjU,KAExBkE,MAAO,CAAEc,MnClYP,KmCmYFO,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN,EAAKkG,wBAAwBlG,EAAG,QAAS,UAG5C,IACAjb,EAAgB2F,KAAI,SAACC,GAClB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,UAU7B,yBAAKpN,UAAU,iBACX,yBAAKA,UAAU,uBACX,kBAAC,KAAMooB,MAAP,CACIlpB,MAAO4kB,EAAQre,YAAYuD,QAAQ,WAAa,EAAI,SAAW,IAE/D,kBAAC,KAAMqf,OAAP,CACIpoB,QAAS,SAACwiB,GACN,EAAKoG,oBAAoB,SAAUpG,IAEvC5iB,MAAOsI,GACPjJ,MAAM,SACNvD,MAAI,GANR,YAYR,yBAAKqE,UAAU,yBACX,yBAAKA,UAAU,qBACX,wCACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO4kB,EAAQpe,OAAO5B,OACtB7C,SAAU,SAACwhB,GAAD,OACN,EAAKiG,uBAAuBjG,EAAG,SAAU,WAE7C5iB,MAAO,CAAEc,MnClbP,QmCqbV,yBAAKX,UAAU,qBACX,0CACA,kBAAC,KAAD,CACId,MAAO4kB,EAAQpe,OAAOnF,SACtBV,MAAO,CAAEc,MnCzbP,KmC0bFO,KAAK,QACLD,SAAU,SAACwhB,GAAD,OACN,EAAKkG,wBAAwBlG,EAAG,SAAU,cAG7C,IACA3Z,GAAgBqE,KAAI,SAACC,GAClB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,SAOzB,yBAAKpN,UAAU,yBACX,kBAACkoB,GAAD,CACIhjB,UAAW4e,EAAQpe,OAAOR,UAC1BK,UAAWue,EAAQpe,OAAOH,UAC1Boc,WAAYliB,KAAKnB,MAAMqjB,WACvBkC,SAAUpkB,KAAK0oB,oBAGvB,kBAACvB,GAAD,CACIjrB,KAAM8D,KAAKnB,MAAMqjB,WACjByF,UAAWA,EACXL,cAAeA,EACflD,SAAU,SAAC3kB,GAAD,OAAW,EAAK4pB,wBAAwB,SAAU5pB,a,GAhchEgD,IAAMC,WA6cxBC,GAAqB,CACvBwf,iBAGWvf,gBARS,SAAC/D,GAAD,MAAY,CAChCwlB,QAASxlB,EAAM+Q,OAAO7J,QAOcpD,GAAzBC,CAA6CimB,I,8BCrdpD9B,I,OAAWC,KAAXD,QACAE,GAAUC,KAAVD,MAIFyC,GAAoB,CACtBthB,UAAW,aACXlH,MAAO,OACPmH,QAAS,MACTC,SAAU,OACVpE,OAAQ,OACRqE,WAAY,OACZC,WAAY,UAEVmhB,GAAiB,CACnBvhB,UAAW,aACXlH,MAAO,OACPmH,QAAS,MACTC,SAAU,OACVpE,OAAQ,OACRqE,WAAY,OACZC,WAAY,UAGVohB,GAAmB,CACrB,cACA,cACA,iBACA,cACA,cACA,kBAGEC,G,kDACF,WAAY1rB,GAAQ,IAAD,8BACf,cAAMA,IAWV2rB,mBAAqB,SAACrqB,GAClB,EAAKsqB,uBAAL,eAAiCtqB,KAblB,EAenBuqB,mBAAqB,SAACvqB,EAAO1B,EAAK2pB,GACf,eAAXA,EACA,EAAKqC,uBAAL,eAA+BhsB,EAAM0B,IACnB,SAAXioB,GACP,EAAKuC,iBAAL,eAAyBlsB,EAAM0B,KAnBpB,EAsBnByqB,mBAAqB,SAAClH,GAClB,IAAMmH,EAAa,EAAKhsB,MAAMkmB,QAAQxd,WAAWqb,WAAWiD,MAAM,KAAK,GACvE,EAAK4E,uBAAuB,CAAE7H,WAAW,GAAD,OAAKc,EAAE/kB,OAAOwB,MAAd,YAAuB0qB,MAxBhD,EA0BnBC,gBAAkB,SAACpH,GACf,IAAMqH,EAAa,EAAKlsB,MAAMkmB,QAAQxd,WAAWqb,WAAWiD,MAAM,KAAK,GACvE,EAAK4E,uBAAuB,CAAE7H,WAAW,GAAD,OAAKmI,EAAL,YAAmBrH,EAAE/kB,OAAOwB,UA5BrD,EA8BnBipB,iBAAmB,SAACjqB,GAChB,EAAKsrB,uBAAuB,CAAE7H,WAAY0H,GAAiB1E,OAAOzmB,OA/BnD,EAiCnB6rB,iBAAmB,SAAC7qB,GAChB,EAAKsqB,uBAAuB,CAAEjjB,KAAMrH,KAlCrB,EAqCnB8qB,kBAAoB,SAACC,GACjB,EAAKT,uBAAuB,CAAE/jB,YAAawkB,IAC3C,EAAKnsB,SAAS,CAAEosB,gBAAiBD,EAAKttB,QAAUstB,EAAKttB,OAAS6G,EAAkB7G,SAChF,EAAKmB,SAAS,CAAEqsB,SAAUF,EAAKttB,SAAW6G,EAAkB7G,UAxC7C,EA0CnBytB,qBAAuB,SAAC3H,GACpB,EAAK+G,uBAAuB,CAAE/jB,YAAagd,EAAE/kB,OAAO2sB,QAAU7mB,EAAoB,KAClF,EAAK1F,SAAS,CAAEosB,eAAe,IAC/B,EAAKpsB,SAAS,CAAEqsB,SAAU1H,EAAE/kB,OAAO2sB,WA7CpB,EAgDnBC,wBAA0B,SAACL,GACvB,EAAKM,sBAAsB,SAAUN,IAjDtB,EAmDnBO,2BAA6B,SAAC/H,GAC1B,EAAK8H,sBAAsB,SAA3B,YAAyCjjB,KApD1B,EAuDnBkiB,uBAAyB,SAACtqB,GACtB,EAAKurB,iBAAiB,CAClBnkB,WAAW,2BACJ,EAAK1I,MAAMkmB,QAAQxd,YACnBpH,MA3DI,EA+DnBwqB,iBAAmB,SAACxqB,GAChB,EAAKurB,iBAAiB,CAClB7O,KAAK,2BACE,EAAKhe,MAAMkmB,QAAQlI,MACnB1c,MAnEI,EAwEnBqrB,sBAAwB,SAAC/sB,EAAK0B,GAC1B,EAAKurB,iBAAL,eACKjtB,EAAM0B,KA1EI,EA8EnBwrB,wBAA0B,SAACxrB,GACvB,OAAQA,GACJ,IAAK,QACD,EAAKqrB,sBAAsB,WAAY,QACvC,EAAKA,sBAAsB,UAAW,SACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAiB,QAC1D,MACJ,IAAK,oBACD,EAAKqiB,sBAAsB,WAAY,cACvC,EAAKA,sBAAsB,YAAa,aACxC,EAAKA,sBAAsB,UAAW,qBACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAkB,uBAC3D,MACJ,IAAK,gBACD,EAAKqiB,sBAAsB,WAAY,QACvC,EAAKA,sBAAsB,YAAa,aACxC,EAAKA,sBAAsB,UAAW,iBACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAkB,mBAC3D,MACJ,IAAK,YACD,EAAKqiB,sBAAsB,WAAY,QACvC,EAAKA,sBAAsB,YAAa,aACxC,EAAKd,mBAAmB,YAAa,YAAa,QAClD,EAAKc,sBAAsB,UAAW,aACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAkB,eAC3D,MACJ,IAAK,iBACD,EAAKqiB,sBAAsB,WAAY,cACvC,EAAKA,sBAAsB,YAAa,QACxC,EAAKA,sBAAsB,UAAW,kBACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAkB,oBAC3D,MACJ,IAAK,cACD,EAAKqiB,sBAAsB,WAAY,QACvC,EAAKA,sBAAsB,YAAa,QACxC,EAAKA,sBAAsB,UAAW,eACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAkB,iBAC3D,MACJ,QACI,EAAKqiB,sBAAsB,WAAY,QACvC,EAAKA,sBAAsB,UAAW,SACtC,EAAKA,sBAAsB,SAA3B,YAAyCriB,GAAiB,UAvHnD,EA0HnByiB,uBAAyB,SAACzrB,GACtB,EAAKpB,SAAS,CACV8sB,WAAY1rB,KA5HD,EA+HnBurB,iBAAmB,SAACvrB,GAChB,EAAKtB,MAAMgkB,aAAa,CAAEpkB,IAAK,OAAQ0B,WA9HvC,EAAKZ,MAAQ,CACT4rB,eAAe,EACfC,UAAU,EACVU,qBAAqB,EACrBC,gBAAgB,EAChBC,WAAW,YAAKzjB,GAChB0jB,YAAa,QACbJ,WAAY,OATD,E,qDAmIT,IAAD,SAC6DnrB,KAAK7B,MAAMkmB,QAArExd,EADH,EACGA,WAAYsV,EADf,EACeA,KAAM6D,EADrB,EACqBA,SAAU3D,EAD/B,EAC+BA,UAAWD,EAD1C,EAC0CA,QAAS2D,EADnD,EACmDA,OAEpDmC,EAUArb,EAVAqb,WACAnb,EASAF,EATAE,SACAC,EAQAH,EARAG,SACAhB,EAOAa,EAPAb,YACAiB,EAMAJ,EANAI,WACAG,EAKAP,EALAO,WACAF,EAIAL,EAJAK,WACAG,EAGAR,EAHAQ,WACAF,EAEAN,EAFAM,cACAG,EACAT,EADAS,cAEAkkB,EAAYtJ,EAAWiD,MAAM,KAE3BmC,EAAgBzgB,EADtB2kB,EAAYA,EAAU1D,KAAK,KAE3B,OACI,yBAAKvnB,UAAU,uCACX,yBAAKA,UAAU,uBAAf,YACA,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,sBACX,yCACA,kBAAC,KAAD,CACId,MAAOugB,EACPve,KAAK,QACLrB,MAAO,CAAEc,MpCjNC,KoCkNVM,SAAU,SAAC/B,GAAD,OAAW,EAAKqrB,sBAAsB,WAAYrrB,KAE5D,kBAAC,GAAD,CAAQA,MAAM,cAAd,cACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,QAAd,UAGR,yBAAKc,UAAU,sBACX,0CACA,kBAAC,KAAD,CACId,MAAO4c,EACP5a,KAAK,QACLrB,MAAO,CAAEc,MpC9NC,KoC+NVM,SAAU,SAAC/B,GAAD,OAAW,EAAKqrB,sBAAsB,YAAarrB,KAE7D,kBAAC,GAAD,CAAQA,MAAM,QAAd,QACA,kBAAC,GAAD,CAAQA,MAAM,aAAd,eAGR,yBAAKc,UAAU,sBACX,kBAAC,KAAD,CACI4nB,mBAAoB,QACpB1mB,KAAK,QACLrB,MAAO,CACHgoB,gBAAiB,UACjBlnB,MAAO,QAEXuqB,iBAAkB,CAAC,MAEnB,kBAAC,GAAD,CAAO1tB,IAAI,IAAIwC,UAAU,aAAa8nB,OAAQ,UAC1C,kBAAC,KAAD,CACIjoB,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,aACf3qB,YAAa,SAGjB,kBAAC,KAAD,CACI0pB,eAAe,EACfjpB,SAAUxB,KAAK+qB,2BACfH,QACI7K,EAAO7iB,SAAW2K,EAAkB3K,QAJ5C,QAUJ,kBAAC,KAASyrB,MAAV,CACIvoB,MAAO,CACHurB,UAAW,OACXzqB,MAAO,OACPH,YAAa,QAEjBtB,MAAOsgB,EACPve,SAAUxB,KAAK6qB,yBAEd,CAAC,EAAG,EAAG,GAAGnd,KAAI,SAACC,GACZ,OACI,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,QAEXnD,IAAG,cAAS4P,IAEZ,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,eAGnB,kBAAC,KAAD,CAAUjsB,MAAOoI,EAAkB8F,IAC9B9F,EAAkB8F,KAG3B,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,eAGnB,kBAAC,KAAD,CACItrB,MAAO,CAAEkI,SAAU,QACnB7I,MAAOoI,EAAkB8F,EAAI,IAE5B9F,EAAkB8F,EAAI,aAU9C,kBAAZyO,EACG,oCACI,yBAAK7b,UAAU,sBACX,uCACA,kBAAC,KAAD,CACId,MAAO,IACPW,MAAO,CAAEc,MpCzTP,KoC0TFO,KAAK,SAEL,kBAAC,GAAD,CAAQ1D,IAAK,IAAK0B,MAAO,KACpB,OAIb,yBAAKc,UAAU,sBACX,qCACA,kBAAC,KAAD,CACId,MAAO,IACPW,MAAO,CAAEc,MpCrUP,KoCsUFO,KAAK,SAEL,kBAAC,GAAD,CAAQ1D,IAAK,IAAK0B,MAAO,KACpB,QAKjB,KACS,gBAAZ2c,EACG,oCACI,yBAAK7b,UAAU,sBACX,0CACA,kBAAC,KAAD,CACId,MAAO0c,EAAKsC,SACZre,MAAO,CAAEc,MpCrVP,KoCsVFO,KAAK,QACLD,SAAU,SAAC/B,GAAD,OACN,EAAKuqB,mBAAmBvqB,EAAO,WAAY,UAG9CmI,EAAmB8F,KAAI,SAACC,GACrB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,sBACX,uCACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO0c,EAAK1c,MACZ+B,SAAU,SAACwhB,GAAD,OAAO,EAAKiH,iBAAiB,CAAExqB,MAAOylB,OAAOlC,MACvD5iB,MAAO,CAAEc,MpC5WP,SoCgXd,KACJ,yBAAKX,UAAU,sBACX,kBAAC,KAAD,CACI4nB,mBAAoB,QACpB/nB,MAAO,CACHgoB,gBAAiB,UACjBlnB,MAAO,QAEXO,KAAK,QACLgqB,iBAAkB,CAAC,MAEnB,kBAAC,GAAD,CAAO1tB,IAAI,IAAIwC,UAAU,aAAa8nB,OAAQ,eAC1C,kBAAC,KAAD,CACIjoB,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,aACf3qB,YAAa,SAGjB,kBAAC,KAAD,CACI0pB,cAAezqB,KAAKnB,MAAM4rB,cAC1BjpB,SAAUxB,KAAK2qB,qBACfC,QAAS5qB,KAAKnB,MAAM6rB,UAHxB,QAQJ,kBAAC,KAAS/B,MAAV,CACIvoB,MAAO,CACHurB,UAAW,OACXzqB,MAAO,OACPH,YAAa,QAEjBtB,MAAOuG,EACPxE,SAAUxB,KAAKuqB,mBAEd,CAAC,EAAG,EAAG,EAAG,GAAG7c,KAAI,SAACC,GACf,OACI,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,QAEXnD,IAAG,cAAS4P,IAEZ,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,eAGnB,kBAAC,KAAD,CAAUjsB,MAAOsE,EAAkB4J,IAC9B5J,EAAkB4J,KAG3B,kBAAC,KAAD,CACIvN,MAAO,CACHc,MAAO,MACPP,QAAS,OACT+qB,cAAe,eAGnB,kBAAC,KAAD,CAAUjsB,MAAOsE,EAAkB4J,EAAI,IAClC5J,EAAkB4J,EAAI,aAU7C,eAAbqS,EACG,oCACI,yBAAKzf,UAAU,sBACX,0CACA,kBAAC,KAAD,CACId,MAAOsH,EACP3G,MAAO,CAAEc,MpChcP,KoCicFO,KAAK,QACLD,SAAU,SAAC/B,GAAD,OACN,EAAKuqB,mBAAmBvqB,EAAO,WAAY,gBAG9CyI,EAAgBwF,KAAI,SAACC,GAClB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,sBACX,0CACA,kBAAC,KAAD,CACId,MAAOuH,EACP5G,MAAO,CAAEc,MpCndP,KoCodFO,KAAK,QACLD,SAAU,SAAC/B,GAAD,OACN,EAAKuqB,mBAAmBvqB,EAAO,WAAY,gBAG9CqI,EAAsB4F,KAAI,SAACC,GACxB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,SAOzB,KACU,SAAbqS,GAAqC,SAAd3D,EACpB,oCACI,yBAAK9b,UAAU,sBACX,sCACA,kBAAC,KAAD,CACId,MAAO0c,EAAKqC,KACZpe,MAAO,CAAEc,MpC1eP,KoC2eFO,KAAK,QACLD,SAAU,SAAC/B,GAAD,OACN,EAAKuqB,mBAAmBvqB,EAAO,OAAQ,UAG1CkI,EAAe+F,KAAI,SAACC,GACjB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,sBACX,0CACA,kBAAC,KAAD,CACId,MAAO0c,EAAKsC,SACZre,MAAO,CAAEc,MpC7fP,KoC8fFO,KAAK,QACLD,SAAU,SAAC/B,GAAD,OACN,EAAKuqB,mBAAmBvqB,EAAO,WAAY,UAG9CmI,EAAmB8F,KAAI,SAACC,GACrB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,sBACX,uCACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAO0c,EAAK1c,MACZ+B,SAAU,SAACwhB,GAAD,OAAO,EAAKiH,iBAAiB,CAAExqB,MAAOylB,OAAOlC,MACvD5iB,MAAO,CAAEc,MpCphBP,SoCwhBd,KAEJ,yBAAKX,UAAU,8BACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,eACf,kBAAC,KAAMooB,MAAP,CACInnB,SAAUxB,KAAKkqB,mBACfzqB,MAAOyiB,EAAWiD,MAAM,KAAK,GAC7B5kB,UAAU,oBAEV,kBAAC,KAAMqoB,OAAP,CAAcxoB,MAAOspB,GAAmBjqB,MAAM,UAA9C,UAGA,kBAAC,KAAMmpB,OAAP,CAAcxoB,MAAOspB,GAAmBjqB,MAAM,UAA9C,UAGA,kBAAC,KAAMmpB,OAAP,CAAcxoB,MAAOspB,GAAmBjqB,MAAM,aAA9C,eAKR,yBAAKc,UAAU,qBACX,yBAAKA,UAAU,oBACX,kBAAC,KAAMooB,MAAP,CACInnB,SAAUxB,KAAKoqB,gBACf3qB,MAAOyiB,EAAWiD,MAAM,KAAK,IAE7B,kBAAC,KAAMyD,OAAP,CAAcxoB,MAAOupB,GAAgBlqB,MAAM,QAA3C,QAGA,kBAAC,KAAMmpB,OAAP,CAAcxoB,MAAOupB,GAAgBlqB,MAAM,QAA3C,UAKR,yBAAKc,UAAU,qBACX,yBACI3C,GAAG,cACH4C,QAAS,kBAAM,EAAKkoB,iBAAiB,IACrCnoB,UAAS,8BACU,gBAAf2hB,EAA+B,cAAgB,KAGnD,kBAACoG,GAAD,CAAY1Y,OAAQ3I,KAExB,yBACIzG,QAAS,kBAAM,EAAKkoB,iBAAiB,IACrCnoB,UAAS,8BACU,gBAAf2hB,EAA+B,cAAgB,KAGnD,kBAACoG,GAAD,CAAY1Y,OAAQ1I,KAExB,yBACI3G,UAAS,8BACU,mBAAf2hB,EAAkC,cAAgB,IAEtD1hB,QAAS,kBAAM,EAAKkoB,iBAAiB,KAErC,kBAACJ,GAAD,CAAY1Y,OAAQzI,KAExB,yBACI3G,QAAS,kBAAM,EAAKkoB,iBAAiB,IACrCnoB,UAAS,8BACU,gBAAf2hB,EAA+B,cAAgB,KAGnD,kBAACoG,GAAD,CAAY1Y,OAAQxI,EAAYlL,KAAM,UAE1C,yBACIsE,QAAS,kBAAM,EAAKkoB,iBAAiB,IACrCnoB,UAAS,8BACU,gBAAf2hB,EAA+B,cAAgB,KAGnD,kBAACoG,GAAD,CAAY1Y,OAAQvI,EAAYnL,KAAM,UAE1C,yBACIsE,QAAS,kBAAM,EAAKkoB,iBAAiB,IACrCnoB,UAAS,8BACU,mBAAf2hB,EAAkC,cAAgB,KAGtD,kBAACoG,GAAD,CAAY1Y,OAAQtI,EAAepL,KAAM,aAKzD,kBAACirB,GAAD,CACIjrB,KAAMgmB,EAAWiD,MAAM,KAAK,GAC5BwC,UAAWzF,EAAWiD,MAAM,KAAK2C,KAAK,IACtCR,cAAeA,EACflD,SAAUpkB,KAAK+pB,+B,GAjkBftnB,IAAMC,WA6kBxBC,GAAqB,CACvBwf,iBAGWvf,gBARS,SAAC/D,GAAD,MAAY,CAChCwlB,QAASxlB,EAAM+Q,OAAO0K,QAOc3X,GAAzBC,CAA6CinB,IC5nBpD9C,GAAWC,KAAXD,OAYF6E,G,kDACF,WAAYztB,GAAQ,IAAD,8BACf,cAAMA,IAKV0tB,mBAAqB,SAAC7I,EAAGjlB,GACrB,EAAK+tB,kBAAL,eACK/tB,EAAMypB,SAASxE,MARL,EAWnB4E,kBAAoB,SAACF,EAAQ3pB,EAAK0B,GAC9B,IAAMssB,EAAa,EAAK5tB,MAAMkmB,QAAQqD,GAChCsE,EAAW,2BACVD,GADU,kBAEZhuB,EAAM0B,IAEX,EAAKqsB,kBAAL,eACKpE,EAASsE,KAlBC,EAsBnBtD,iBAAmB,SAACjpB,GAChB,EAAKpB,SAAS,CACV6jB,WAAYziB,KAxBD,EA4BnBwsB,uBAAyB,SAACxsB,GACtB,IAAMysB,EAAa,EAAK/tB,MAAMkmB,QAAQ/f,OAChC0nB,EAAW,2BACVE,GADU,IAEb3nB,WAAY9E,IAEhB,EAAKqsB,kBAAkB,CAAExnB,OAAQ0nB,KAlClB,EAqCnBF,kBAAoB,SAACrsB,GACjB,EAAKtB,MAAMgkB,aAAa,CAAEpkB,IAAK,QAAS0B,WApCxC,EAAKZ,MAAQ,CACTqjB,WAAY,QAHD,E,qDAyCT,IAAD,OACCyF,EAAsC,SAA1B3nB,KAAKnB,MAAMqjB,WAAwB,YAAc,YAC7DoF,EAAgBtnB,KAAK7B,MAAMkmB,QAAQsD,GACzC,OACI,yBAAKpnB,UAAU,kCACX,yBAAKA,UAAU,uBAAf,aACA,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,sBACX,wCACA,kBAAC,KAAD,CACIkB,KAAK,QACLhC,MAAOO,KAAK7B,MAAMkmB,QAAQ/f,OAAOC,WACjCnE,MAAO,CAAEc,MAAO,KAChBM,SAAUxB,KAAKisB,wBAEdhkB,EAAkByF,KAAI,SAACC,GACpB,OACI,kBAAC,GAAD,CAAQ5P,IAAK4P,EAAGlO,MAAOkO,GAClBA,QAMrB,yBAAKpN,UAAU,sBACX,2CACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACL7B,MAAOO,KAAK7B,MAAMkmB,QAAQlgB,UAC1B/D,MAAO,CAAEc,MAAO,KAChBM,SAAU,SAACwhB,GAAD,OAAO,EAAK6I,mBAAmB7I,EAAG,iBAGpD,yBAAKziB,UAAU,sBACX,4CACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACLlB,MAAO,CAAEc,MAAO,KAChBzB,MAAOO,KAAK7B,MAAMkmB,QAAQjgB,WAC1B5C,SAAU,SAACwhB,GAAD,OAAO,EAAK6I,mBAAmB7I,EAAG,kBAGpD,yBAAKziB,UAAU,sBACX,wCACA,kBAAC,KAAD,CACIkB,KAAK,QACLkR,IAAK,EACLrR,IAAK,IACLlB,MAAO,CAAEc,MAAO,KAChBzB,MAAOO,KAAK7B,MAAMkmB,QAAQhgB,OAC1B7C,SAAU,SAACwhB,GAAD,OAAO,EAAK6I,mBAAmB7I,EAAG,cAIpD,yBAAKziB,UAAU,oBACX,kBAACkoB,GAAD,CACIhjB,UAAWzF,KAAK7B,MAAMkmB,QAAQ5e,UAC9BK,UAAW9F,KAAK7B,MAAMkmB,QAAQve,UAC9Boc,WAAYliB,KAAKnB,MAAMqjB,WACvBkC,SAAUpkB,KAAK0oB,oBAGvB,kBAACvB,GAAD,CACIjrB,KAAM8D,KAAKnB,MAAMqjB,WACjByF,UAAWA,EACXL,cAAeA,EACflD,SAAUpkB,KAAK8rB,0B,GAhHdrpB,IAAMC,WA4HzBC,GAAqB,CACvBwf,iBAGWvf,gBARS,SAAC/D,GAAD,MAAY,CAChCwlB,QAASxlB,EAAM+Q,OAAO7F,SAOcpH,GAAzBC,CAA6CgpB,IC9I7C,SAASO,GAAahuB,GACjC,OACI,yBAAKoC,UAAU,qBACX,yBAAKA,UAAU,aAAf,oBAEI,yBAAKA,UAAU,OAAOE,cAAY,QAC9B,yBAAKC,UAAU,gBAEnB,yBAAKH,UAAU,OAAOE,cAAY,QAC9B,yBAAKC,UAAU,gBAGvB,yBACIH,UAAU,2CAEV,6BACI,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEJ,kBAAC,GAAD,Q,yBCZV6rB,G,kDACF,WAAYjuB,GAAQ,IAAD,8BACf,cAAMA,IAOVkuB,kBAAoB,SAAC5sB,GACb,EAAKZ,MAAMytB,QAAU7sB,GACrB,EAAKpB,SAAS,CACViuB,MAAO7sB,KATf,EAAKZ,MAAQ,CACTytB,MAAO,SACPC,SAAU,GACVxsB,SAAU,IALC,E,qDAgBf,OACI,yBAAKQ,UAAU,SACX,yBAAKA,UAAU,iBACX,yBACIA,UAAU,kBACVisB,IAAK,QACLnJ,IAAKoJ,OAET,yBAAKlsB,UAAU,sBACX,yBAAKA,UAAU,SAAf,QAA4B,0BAAMA,UAAU,aAAhB,OAA5B,OAqBc,YAArBP,KAAKnB,MAAMytB,MACR,kBAAC/H,GAAD,MAEA,yBAAKhkB,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEJ,yBAAKA,UAAU,OACX,kBAAC4rB,GAAD,OAEJ,yBAAK5rB,UAAU,OACX,kBAAC,GAAD,MACA,kBAAC,GAAD,QAIZ,yBAAK3C,GAAG,qBAAqBwC,MAAO,CAACO,QAAQ,e,GAhEzC8B,IAAMC,WA0EpBC,GAAqB,CAC1B3G,gBAGc4G,gBARS,SAAC/D,GAAD,MAAU,CACjCoB,UAAWpB,EAAMoB,aAOqB0C,GAAxBC,CAA4CwpB,I,SCrF5CM,gBAAgB,CAC3B9c,OhBFG,WAA6C,IAA7B/Q,EAA4B,uDAApB6iB,GAAYiL,EAAQ,uCAClD,OAAQA,EAAOzwB,MACd,IAJoB,gBAKV,OAAO,2BACA2C,GADP,kBAEK8tB,EAAOvK,QAAQrkB,IAFpB,2BAGWc,EAAM8tB,EAAOvK,QAAQrkB,MACrB4uB,EAAOvK,QAAQ3iB,SAG9B,IAbc,gBAcV,OAAOktB,EAAO1wB,KACxB,QACC,OAAO4C,IgBVNoB,U7CFG,WAA+C,IAA5BpB,EAA2B,uDAAnBhD,EAAW8wB,EAAQ,uCACpD,OAAQA,EAAOzwB,MACd,IANqB,iBAOpB,OAAOywB,EAAO1wB,KACf,QACC,OAAO4C,M8CAJ+tB,GAAQC,aAAYC,IAEtBC,GAASC,SAASC,cAAc,UACpCF,GAAO7wB,KAAO,kBACd6wB,GAAO1J,IAAM,qDACb2J,SAASE,eAAe,QAAQC,YAAYJ,IAE5CK,IAASnW,OACL,kBAAC,IAAD,CAAU2V,MAAOA,IACb,kBAAC,GAAD,OAEJI,SAASE,eAAe,U","file":"static/js/main.040d5a3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.e91ce918.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.c82675f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphIcon.2bda4605.svg\";","import * as testData from '../data/import/test1.json'\r\n\r\nconst SET_GRAPH_DATA = \"SET_GRAPH_DATA\";\r\nconst initState = testData.default.graphs\r\n// const initState = []\r\n\r\nexport function graphData(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_GRAPH_DATA:\r\n\t\t\treturn action.data\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\nexport function setGraphData(data){\r\n\t// console.log(\"setGraphData--data\",data)\r\n\treturn { type: SET_GRAPH_DATA, data }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Modal, List, Button, Slider } from 'antd'\r\nimport './dataPanel.css'\r\nimport { connect } from \"react-redux\"\r\nimport { \r\n\tsetGraphData, \r\n} from '../../redux/graphData.redux.js'\r\nimport * as testData from '../../data/import/test1.json'\r\nimport * as simpleData from '../../data/import/test2.json'\r\nimport * as insertData from '../../data/import/test3-insert.json'\r\nimport * as shortPathData from '../../data/import/test4.json'\r\nimport * as flowData from '../../data/import/test5.json'\r\nimport * as emailData from '../../data/import/email-data-dsssss.json'\r\n\r\nconst dataset = [\r\n    {\r\n        dataName: 'DynamicData-1',\r\n        description: getDataDescription(testData.default.graphs,'middle'),\r\n        // description: '测试数据，数据量一般',\r\n        data: testData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-2',\r\n        description: getDataDescription(simpleData.default.graphs,'small'),\r\n        // description: '测试数据，数据量一般',\r\n        data: simpleData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-3',\r\n        description: getDataDescription(insertData.default.graphs,'Insert'),\r\n        // description: '展示插入节点的样例数据',\r\n        data: insertData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-4',\r\n        // description: getDataDescription(flowData.default.graphs,'MdsOne'),\r\n        description: '#Times: 200; #Nodes: 50; #Links: 15;',\r\n        // description: '展示mds一维降维数据',\r\n        data: flowData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-5',\r\n        description: getDataDescription(shortPathData.default.graphs,'shortPath'),\r\n        // description: '可以展示最短路径',\r\n        data: shortPathData.default\r\n    },\r\n    {\r\n        dataName: 'EmailData',\r\n        description: getDataDescription(emailData.default.graphs,'big'),\r\n        // description: '大数据量',\r\n        data: emailData.default\r\n    }\r\n]\r\n\r\nfunction getDataDescription(data,tag){\r\n    const result = getDataInfo(data)\r\n    // const description = `Times: ${result.times}; Nodes: ${result.nodes}; Links: ${result.links}; Tag:${tag}`\r\n    const description = `#Times: ${result.times}; #Nodes: ${result.nodes}; #Links: ${result.links};`\r\n    return description\r\n}\r\n\r\nfunction getDataInfo(data) {\r\n    const times = data.length\r\n    let nodeNumber = 0\r\n    let linkNumber = 0\r\n    let nodeMap = new Map()\r\n    let linkMap = new Map()\r\n    data.forEach((d) => {\r\n        d.nodes.forEach((node) => {\r\n            if (!nodeMap.get(node.id)) {\r\n                nodeMap.set(node.id, true)\r\n                nodeNumber++\r\n            }\r\n        })\r\n        d.links.forEach((link) => {\r\n            const key = `${link.source}-${link.target}`\r\n            if (!linkMap.get(key)) {\r\n                linkMap.set(key, true)\r\n                linkNumber++\r\n            }\r\n        })\r\n    })\r\n    return { times, nodes: nodeNumber, links: linkNumber }\r\n}\r\nclass DataPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modalVisible: false,\r\n            selected: 0,\r\n            overview: {\r\n                name: '',\r\n                times: 0,\r\n                nodes: 0,\r\n                links: 0\r\n            },\r\n            sliderValue: [],\r\n            groups: [],\r\n            selectedGroupIndex: 0,\r\n            data: {}\r\n        }\r\n    }\r\n    handleChangeData = () => {\r\n        this.setState({\r\n            modalVisible: true\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n    selectDataset = (index) => {\r\n        this.setState({\r\n            selected: index\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        const selectedDataName = dataset[this.state.selected].dataName\r\n        if (this.props.graphData && this.props.graphData.length) {\r\n            const overviewInfo = getDataInfo(this.props.graphData)\r\n            overviewInfo.name = selectedDataName\r\n            this.setState({\r\n                overview: overviewInfo,\r\n                sliderValue: [0, overviewInfo.times],\r\n                groups: [\r\n                    {\r\n                        ...overviewInfo,\r\n                        startToEnd: [0, overviewInfo.times]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    handleCertainButton = () => {\r\n        const selectedData = dataset[this.state.selected].data.graphs\r\n        const selectedDataName = dataset[this.state.selected].dataName\r\n        if (selectedData && selectedData.length) {\r\n            const overviewInfo = getDataInfo(selectedData)\r\n            overviewInfo.name = selectedDataName\r\n            this.setState({\r\n                modalVisible: false,\r\n                overview: overviewInfo,\r\n                sliderValue: [0, overviewInfo.times],\r\n                groups: [\r\n                    {\r\n                        ...overviewInfo,\r\n                        startToEnd: [0, overviewInfo.times]\r\n                    }\r\n                ]\r\n            })\r\n            // 传递数据\r\n            this.props.setGraphData(dataset[this.state.selected].data.graphs)\r\n        }\r\n    }\r\n    handleAddButton = () => {\r\n        if (this.state.sliderValue[0] !== this.state.sliderValue[1]) {\r\n            const fileData = dataset[this.state.selected].data.graphs\r\n            const groupData = fileData.slice(this.state.sliderValue[0], this.state.sliderValue[1])\r\n            const groupInfo = getDataInfo(groupData)\r\n            this.setState({\r\n                groups: [\r\n                    ...this.state.groups,\r\n                    {\r\n                        ...groupInfo,\r\n                        startToEnd: this.state.sliderValue\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    handleTimeSliderChange = (value) => {\r\n        this.setState({\r\n            sliderValue: value\r\n        })\r\n    }\r\n    selectGroupItem = (index) => {\r\n        this.setState({\r\n            selectedGroupIndex: index\r\n        })\r\n        const tempStartToEnd = this.state.groups[index].startToEnd\r\n        const selectedData = dataset[this.state.selected].data.graphs\r\n        const data = {\r\n            jsonData: {\r\n                graphs: selectedData.slice(tempStartToEnd[0], tempStartToEnd[1]),\r\n                compareEncode: dataset[this.state.selected].data.compareEncode\r\n            },\r\n            filename: dataset[this.state.selected].dataset\r\n        }\r\n        // 传递数据\r\n        this.props.setGraphData(data.jsonData.graphs)\r\n    }\r\n    render() {\r\n        const marks = {\r\n            0: {\r\n                style: {\r\n                    color: '#000'\r\n                },\r\n                label: 0\r\n            },\r\n            [this.state.overview.times]: {\r\n                style: {\r\n                    color: '#000'\r\n                },\r\n                label: this.state.overview.times\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"data-box\">\r\n                <div className=\"sub-title\">\r\n                    {' '}\r\n                    &nbsp; Data\r\n                    <svg className=\"icon\" onClick={this.handleChangeData} aria-hidden=\"true\">\r\n                        <use xlinkHref=\"#icon-center\"></use>\r\n                    </svg>\r\n                </div>\r\n                <div className=\"divider\">Overview</div>\r\n                <div className=\"item0\">\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10,\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <div>{`Name: ${this.state.overview.name}`}</div>\r\n                        <div>{`Times: ${this.state.overview.times}`}</div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10,\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <div>{`Nodes: ${this.state.overview.nodes}`}</div>\r\n                        <div>{`Links: ${this.state.overview.links}`}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"divider\">Selection</div>\r\n                {this.state.overview.times > 0 ? (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                width: '15%',\r\n                                marginRight: 10,\r\n                                marginBottom: 15\r\n                            }}\r\n                        >\r\n                            Times:{' '}\r\n                        </div>\r\n                        <Slider\r\n                            range\r\n                            marks={marks}\r\n                            max={this.state.overview.times}\r\n                            defaultValue={[0, this.state.overview.times]}\r\n                            style={{\r\n                                width: '50%'\r\n                            }}\r\n                            onChange={this.handleTimeSliderChange}\r\n                        />\r\n                        <Button\r\n                            // type=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={this.handleAddButton}\r\n                            style={{\r\n                                marginLeft: 10,\r\n                                marginBottom: 15\r\n                            }}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"divider\">Group</div>\r\n                {this.state.groups.length > 0 ? (\r\n                    <div\r\n                        className=\"data-group-container\"\r\n                        style={{\r\n                            marginLeft: 5,\r\n                            marginRight: 5,\r\n                            overflowY: 'scroll',\r\n                            overflowX: 'hidden'\r\n                        }}\r\n                    >\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={this.state.groups}\r\n                            renderItem={(item, index) => (\r\n                                <List.Item onClick={() => this.selectGroupItem(index)}>\r\n                                    <List.Item.Meta\r\n                                        title={\r\n                                            <a href=\"javascript:void(0)\">\r\n                                                {`Times: ${item.startToEnd[0]}-${item.startToEnd[1]}`}\r\n                                                {index === this.state.selectedGroupIndex\r\n                                                    ? ' selected'\r\n                                                    : ''}\r\n                                            </a>\r\n                                        }\r\n                                        description={`Nodes: ${item.nodes}  Links: ${item.links}`}\r\n                                        className={\r\n                                            index === this.state.selectedGroupIndex\r\n                                                ? 'selected'\r\n                                                : ''\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n                <Modal\r\n                    title=\"Dataset\"\r\n                    visible={this.state.modalVisible}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[]}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={dataset}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item onClick={() => this.selectDataset(index)}>\r\n                                <List.Item.Meta\r\n                                    title={\r\n                                        <a href=\"javascript:void(0)\">\r\n                                            {item.dataName}\r\n                                            {index === this.state.selected ? ' selected' : ''}\r\n                                        </a>\r\n                                    }\r\n                                    description={item.description}\r\n                                    className={index === this.state.selected ? 'selected' : ''}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around',\r\n                            marginTop: 30\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            // type=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={this.state.selected === -1 ? true : false}\r\n                            onClick={this.handleCertainButton}\r\n                        >\r\n                            Select\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tgraphData: state.graphData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tsetGraphData,\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DataPanel)","import React from 'react'\r\n\r\nexport default function ArcLinkItem(props) {\r\n    if(!props.data){\r\n        return null\r\n    }\r\n    return (\r\n        <path\r\n            d={props.data}\r\n            fill={'none'}\r\n            stroke={props.strokeColor}\r\n            opacity={props.opacity}\r\n            strokeWidth={`${props.strokeWidth}px`}\r\n            strokeDasharray={\r\n                props.strokeType === 'solid' ? '' : '5,5 '\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LinkItem(props) {\r\n    return (\r\n        <line\r\n            id={props.timeId}\r\n            x1={props.source.x + (props.xOffset ? props.xOffset : 0)}\r\n            y1={props.source.y + (props.yOffset ? props.yOffset : 0)}\r\n            x2={props.target.x + (props.xOffset ? props.xOffset : 0)}\r\n            y2={props.target.y + (props.yOffset ? props.yOffset : 0)}\r\n            stroke={props.strokeColor}\r\n            strokeWidth={`${props.strokeWidth}px`}\r\n            opacity={props.opacity}\r\n            strokeDasharray={\r\n                props.strokeType === 'solid'\r\n                    ? ''\r\n                    : `${props.strokeWidth * 2},${props.strokeWidth * 2} `\r\n            }\r\n        ></line>\r\n    )\r\n}\r\n","export const COMPARISON_CONFIG = [\r\n    'shape',\r\n    'fillColor',\r\n    'strokeColor',\r\n    'strokeWidth',\r\n    'strokeType',\r\n    'radius',\r\n    'strokeDasharray',\r\n    'textColor'\r\n]\r\n\r\nexport const defaultConfigs = {\r\n    basic: {\r\n        width: 250,\r\n        height: 250,\r\n        eachWidth: 250,\r\n        eachHeight: 250,\r\n        margin: 30,\r\n        layout: {\r\n            chooseType: 'offLine',\r\n            vertical: {},\r\n            offLine: {},\r\n            forceDirect: {\r\n                tickCount: 10\r\n            },\r\n            grid: {\r\n                columnCount: 1\r\n            },\r\n            onLine: {},\r\n            bipartite: {},\r\n            circle: {\r\n                applyDefault: true,\r\n                startRadius: 50,\r\n                endRadius: 200,\r\n                rotateAngle: 720\r\n            },\r\n            dagre: {\r\n                rankdir: 'TB',\r\n                nodeSep: 5,\r\n                rankSep: 5\r\n            }\r\n        },\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white'\r\n        },\r\n        linkStyle: {\r\n            shape: 'curve',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 2,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        \r\n    },\r\n    layout: {\r\n        chooseType: 'offLine',\r\n        vertical: {},\r\n        offLine: {},\r\n        forceDirect: {\r\n            tickCount: 10\r\n        },\r\n        grid: {\r\n            columnCount: 1\r\n        },\r\n        onLine: {},\r\n        bipartite: {},\r\n        circle: {\r\n            applyDefault: true,\r\n            startRadius: 50,\r\n            endRadius: 200,\r\n            rotateAngle: 720\r\n        },\r\n        dagre: {\r\n            rankdir: 'TB',\r\n            nodeSep: 5,\r\n            rankSep: 5\r\n        }\r\n    },\r\n    time: {\r\n        chooseTypes: [],\r\n        insert: {\r\n            position: 'bottom',\r\n            margin: 10,\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#ffcc00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opcity: 1\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#ffcc00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3'\r\n            }\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#FD8F8F',\r\n            endColor: '#90B5FB',\r\n            number: 5\r\n        },\r\n        animation: {\r\n            speed: 1800\r\n        },\r\n        markLine: {\r\n            shape: 'line',\r\n            strokeType: 'dashed',\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5'\r\n        },\r\n        timeLine: {\r\n            xDistance: 250,\r\n            yDistance: 0,\r\n            // 有可能只对节点进行该操作\r\n            element: 'all'\r\n        }\r\n    },\r\n    comparison: {\r\n        isOn: true,\r\n        keyFrame: 'next',\r\n        elements: 'all',\r\n        chooseTypes: COMPARISON_CONFIG,\r\n        // keyFrame可为上一帧、下一帧、具体某一帧\r\n        appearNode: {\r\n            shape: 'circle',\r\n            fillColor: '#FD8F8F',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            radius: 8,\r\n            opacity: 1\r\n        },\r\n        stableNode: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        disappearNode: {\r\n            shape: 'circle',\r\n            fillColor: '#90B5FB',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 8,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        appearLink: {\r\n            shape: 'curve',\r\n            strokeColor: '#FD8F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 3,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        stableLink: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 1,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        disappearLink: {\r\n            shape: 'curve',\r\n            strokeColor: '#90B5FB',\r\n            strokeType: 'solid',\r\n            strokeWidth: 3,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        }\r\n    }\r\n}\r\n","export const TIME_PANEL_INPUT_WIDTH = 125\r\nexport const SAMPLE_LINK_SOURCE = {\r\n  x: 5,\r\n  y: 5\r\n}\r\nexport const SAMPLE_LINK_TARGET = {\r\n  x: 57,\r\n  y: 57\r\n}\r\n\r\nexport const MARK_LINK_SOURCE = {\r\n  x: 10,\r\n  y: 21\r\n}\r\n\r\nexport const MARK_LINK_TARGET = {\r\n  x: 248,\r\n  y: 21\r\n}\r\n\r\nexport const MARK_POINT_RADIUS = 6\r\n\r\nexport const DNET_SAMPLE_WIDTH = 400\r\nexport const DNET_SAMPLE_HEIGHT = 65\r\n\r\n\r\nexport const SAMPLE_ITEM_WIDTH = 62\r\nexport const SAMPLE_ITEM_HEIGHT = 62\r\nexport const TASK_FIND_ATTR = ['degree']\r\nexport const TASK_FIND_STRUCTURE = ['shortest-path','dumb-bell']\r\nexport const TASK_FIND_RELATION = ['>=','=','<=']\r\n\r\nexport const TASK_PATTERN_TYPES = ['graph','shortest-path', 'frequent-structure','dumb-bell', 'compare-degree', 'find-degree', 'anomaly-detection']\r\nexport const TASK_CHANGE_TYPES = ['appearedNode', 'appearedEdge', 'disappearedNode', 'disappearedEdge','unchangedNode','unchangedEdge']\r\n\r\nexport const TIME_TIMELINE_ELEMENT = ['node', 'link', 'all']\r\nexport const TIME_CHART_TYPE = ['line', 'bar']\r\nexport const TIME_TIMELINE_TYPE = ['circular','linear']\r\nexport const GRAPH_LAYOUT_TYPE = ['matrix','grid','forceDirect','bipartite', 'vertical','circular','dagre','mds','oneMds']\r\n\r\nexport const KEYFRAM_OPTIONS = ['next', 'last']\r\n\r\n\r\nexport const ROW_BUTTON_STYLE = {\r\n  boxSizing: 'border-box',\r\n  width: '64px',\r\n  padding: '0px',\r\n  fontSize: '12px',\r\n  height: '64px',\r\n  lineHeight: '64px',\r\n  alighItems: 'center'\r\n}\r\n\r\nexport const PATTERN_TO_CHANGE = {\r\n  'compare-structure':[...TASK_CHANGE_TYPES],\r\n  'compare-attr': [...TASK_CHANGE_TYPES],\r\n  'find-structure': [...TASK_CHANGE_TYPES],\r\n  'find-attr': [...TASK_CHANGE_TYPES],\r\n  'graph': ['unchangedNode','unchangedEdge'],\r\n  'shortest-path': ['unchangedNode','unchangedEdge','appearedNode','appearedEdge'],\r\n  'dumb-bell': ['unchangedNode','unchangedEdge','appearedNode','appearedEdge'],\r\n  'compare-degree': ['unchangedNode','unchangedEdge','appearedNode','disappearedNode'],\r\n  'find-degree': ['unchangedNode','unchangedEdge','appearedNode']\r\n}\r\n\r\nexport const TIME_BUTTON_STYLE = {\r\n  boxSizing: 'border-box',\r\n  width: '252px',\r\n  padding: '0px',\r\n  fontSize: '12px',\r\n  height: '26px',\r\n  lineHeight: '26px',\r\n  alighItems: 'center'\r\n}\r\n\r\nexport const REACT_JSON_OPTIONS = {\r\n  displayDataTypes: false,\r\n  name: null,\r\n  indentWidth: 2,\r\n  fontFamily: 'consola',\r\n  theme:\"summerfruit:inverted\",\r\n  style:{\r\n    fontFamily: 'consola'\r\n  },\r\n  collapseStringsAfterLength: 20,\r\n  // iconStyle: \"circle\",\r\n  enableClipboard: false,\r\n  displayObjectSize: false\r\n}","import * as d3 from 'd3'\r\nimport { defaultConfigs,  COMPARISON_CONFIG} from './defaultConfig'\r\nimport * as _lodash from 'lodash'\r\nimport {PATTERN_TO_CHANGE} from './const.js'\r\nimport assign from 'assign-deep'\r\n\r\n\r\nconst TIME_CONFIG = ['timeLine', 'animation', 'color', 'markLine', 'insert']\r\nconst LAYOUT_CONFIG = ['offLine', 'vertical', 'onLine', 'circle', 'bipartite']\r\nexport const INSERT_POSITION = [ 'origin', 'center', 'top', 'bottom', 'left', 'right', 'topLeft', 'topRight', 'bottomRight', 'bottomLeft']\r\n\r\nexport const defaultConfigs_bak = {\r\n    layout: {\r\n        vertical: {\r\n            yDistance: 40,\r\n            linkStyle: {\r\n                overwrite: true,\r\n                shape: 'curve'\r\n            }\r\n        }\r\n    },\r\n    time: {\r\n        insert: {\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#ffcc00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#ffcc00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            bottomMargin: 20\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#FD8F8F',\r\n            endColor: '#90B5FB'\r\n        },\r\n        animation: {\r\n            speed: 800\r\n        },\r\n        markLine: {\r\n            overwrite: true,\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5'\r\n            // xDistance: 100\r\n            // yDistance: 40\r\n        },\r\n        timeLine: {\r\n            positionFlag: 1,\r\n            overwrite: true,\r\n            timeLineFlag: 1,\r\n            eachMargin: 5,\r\n            eachWidth: 180,\r\n            eachHeight: 200,\r\n            element: 'all',\r\n            leftMargin: 180\r\n        }\r\n    },\r\n    comparison: {\r\n        color: {\r\n            appearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#FD8F8F',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 6\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#DAD5D5',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#90B5FB',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            appearLink: {\r\n                strokeColor: '#FD8F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            stableLink: {\r\n                strokeColor: '#908F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            disappearLink: {\r\n                strokeColor: '#90B5FB',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            }\r\n        },\r\n        nodeColor: {\r\n            appearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#FD8F8F',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 6\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#DAD5D5',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#90B5FB',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            }\r\n        },\r\n        linkColor: {\r\n            appearLink: {\r\n                strokeColor: '#FD8F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            stableLink: {\r\n                strokeColor: '#908F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            disappearLink: {\r\n                strokeColor: '#90B5FB',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            }\r\n        }\r\n    },\r\n    basic: {\r\n        eachMargin: 5,\r\n        width: 1010,\r\n        height: 250,\r\n        timeLineFlag: 0,\r\n        eachWidth: 200,\r\n        eachHeight: 250,\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white'\r\n        },\r\n        linkStyle: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 2\r\n        }\r\n    }\r\n}\r\n\r\nfunction isTimeConfig(item) {\r\n    return TIME_CONFIG.indexOf(item) > -1\r\n}\r\n\r\nfunction isComparisonConfig(item) {\r\n    return COMPARISON_CONFIG.indexOf(item) > -1\r\n}\r\n\r\nfunction isLayoutConfig(item) {\r\n    return LAYOUT_CONFIG.indexOf(item) > -1\r\n}\r\n\r\n// 获取svg画布的长宽大小\r\nexport function getSvgWidthHeight(configs, len) {\r\n    let svgWidth, svgHeight\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const { xDistance, yDistance,type } = configs.time.timeLine\r\n    if(type==='circular'){\r\n        const eachDis = eachWidth<eachHeight ? eachWidth: eachHeight\r\n        svgWidth = eachDis*(len/2) + margin*2 + eachDis*2\r\n        svgHeight = svgWidth\r\n    }else{\r\n        if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n            svgWidth = margin * 2 + eachWidth + xDistance * (len - 1)\r\n            svgHeight = margin * 2 + eachHeight + yDistance * (len - 1)\r\n        } else {\r\n            svgWidth = margin * 2 + eachWidth\r\n            svgHeight = margin * 2 + eachHeight\r\n        }\r\n    }\r\n    return { svgWidth, svgHeight }\r\n}\r\n\r\n// 获取插入节点的位置\r\nexport function getInsertPosition(configs){\r\n    let x,y\r\n    const {eachWidth, eachHeight} = configs.graph\r\n    const {margin, position} = configs.time.insert\r\n    switch (position){\r\n        case 'top':\r\n            x = eachWidth/2 \r\n            y = margin\r\n            break\r\n        case 'bottom':\r\n            x = eachWidth/2 \r\n            y = eachHeight - margin\r\n            break\r\n        case 'left':\r\n            x = margin\r\n            y = eachHeight/2\r\n            break\r\n        case 'right':\r\n            x = eachWidth - margin\r\n            y = eachHeight/2\r\n            break\r\n        case 'center':\r\n            x = eachWidth/2\r\n            y = eachHeight/2\r\n            break\r\n        case 'topLeft':\r\n            x = margin\r\n            y = margin\r\n            break\r\n        case 'topRight':\r\n            x = eachWidth - margin\r\n            y = margin\r\n            break\r\n        case 'bottomLeft':\r\n            x = margin\r\n            y = eachHeight - margin\r\n            break\r\n        case 'bottomRight':\r\n            x = eachWidth - margin\r\n            y = eachHeight - margin\r\n            break\r\n        default:\r\n            x = eachWidth/2 \r\n            y = eachHeight - margin\r\n            break\r\n    }\r\n    return {x,y}\r\n}\r\n\r\nexport function assignConfigs(setConfigs) {\r\n    let configs = _lodash.cloneDeep(setConfigs)\r\n    let sumConfigs = _lodash.cloneDeep(defaultConfigs)\r\n\r\n    // 处理time的覆盖\r\n    if ('time' in configs) {\r\n        if (typeof configs.time === 'string' && isTimeConfig(configs.time)) {\r\n            sumConfigs.time.chooseTypes = [configs.time]\r\n        } else if (_lodash.isArray(configs.time)) {\r\n            sumConfigs.time.chooseTypes = configs.time.filter(isTimeConfig)\r\n        } else if (typeof configs.time === 'object') {\r\n            // 是一个对象\r\n            let chooseTypes = new Set()\r\n            Object.keys(configs.time)\r\n                .filter(isTimeConfig)\r\n                .forEach((item) => {\r\n                    chooseTypes.add(item)\r\n                })\r\n            if (configs.time.chooseTypes) {\r\n                // 如果其中存在chooseTypes进行处理\r\n                if (\r\n                    typeof configs.time.chooseTypes === 'string' &&\r\n                    isTimeConfig(configs.time.chooseTypes)\r\n                ) {\r\n                    chooseTypes.add(configs.time.chooseTypes)\r\n                } else if (_lodash.isArray(configs.time.chooseTypes)) {\r\n                    configs.time.chooseTypes.filter(isTimeConfig).forEach((item) => {\r\n                        chooseTypes.add(item)\r\n                    })\r\n                }\r\n            }\r\n            configs.time.chooseTypes = [...chooseTypes]\r\n            // 逐层进行覆盖\r\n            assign(sumConfigs.time, configs.time)\r\n        }\r\n    }\r\n    delete configs.time\r\n\r\n    // 处理layout的覆盖\r\n    if ('layout' in configs) {\r\n        if (typeof configs.layout === 'string' && isLayoutConfig(configs.layout)) {\r\n            sumConfigs.layout.chooseType = configs.layout\r\n        } else if (_lodash.isArray(configs.layout)) {\r\n            configs.layout = configs.layout.filter(isLayoutConfig)\r\n            sumConfigs.layout.chooseType =\r\n                configs.layout.length > 0 ? configs.layout[0] : LAYOUT_CONFIG[0]\r\n        } else {\r\n            // 是一个对象\r\n            let layoutKeys = Object.keys(configs.layout).filter(isLayoutConfig)\r\n\r\n            if (configs.layout.chooseType && _lodash.isArray(configs.layout.chooseType)) {\r\n                const tempArr = configs.layout.chooseType.filter(isLayoutConfig)\r\n                if (tempArr.length > 0) {\r\n                    configs.layout.chooseType = tempArr[0]\r\n                }\r\n            }\r\n            if (!configs.layout.chooseType || !isLayoutConfig(configs.layout.chooseType)) {\r\n                if (layoutKeys.length > 0) {\r\n                    configs.layout.chooseType = layoutKeys[0]\r\n                } else {\r\n                    configs.layout.chooseType = LAYOUT_CONFIG[0]\r\n                }\r\n            }\r\n            assign(sumConfigs.layout, configs.layout)\r\n        }\r\n        delete configs.layout\r\n    }\r\n\r\n    // 处理comparison的覆盖\r\n    if ('comparison' in configs) {\r\n        if (typeof configs.comparison === 'boolean' && configs.comparison) {\r\n            // 全部开启\r\n            sumConfigs.comparison.isOn = true\r\n            sumConfigs.comparison.chooseTypes = COMPARISON_CONFIG\r\n        } else if (\r\n            typeof configs.comparison === 'string' &&\r\n            isComparisonConfig(configs.comparison)\r\n        ) {\r\n            sumConfigs.comparison.chooseTypes = [configs.comparison]\r\n        } else if (_lodash.isArray(configs.comparison)) {\r\n            sumConfigs.comparison.chooseTypes = configs.comparison.filter(isComparisonConfig)\r\n        } else {\r\n            // 是对象\r\n            if (configs.comparison.chooseTypes) {\r\n                if (\r\n                    typeof configs.comparison.chooseTypes === 'string' &&\r\n                    isComparisonConfig(configs.comparison.chooseTypes)\r\n                ) {\r\n                    configs.comparison.chooseTypes = [configs.comparison.chooseTypes]\r\n                } else if (_lodash.isArray(configs.comparison.chooseTypes)) {\r\n                    const tempArr = configs.comparison.chooseTypes.filter(isComparisonConfig)\r\n                    configs.comparison.chooseTypes =\r\n                        tempArr.length > 0 ? tempArr : COMPARISON_CONFIG\r\n                } else {\r\n                    configs.comparison.chooseTypes = COMPARISON_CONFIG\r\n                }\r\n            } else {\r\n                configs.comparison.chooseTypes = COMPARISON_CONFIG\r\n            }\r\n            assign(sumConfigs.comparison, configs.comparison)\r\n        }\r\n    }\r\n    delete configs.comparison\r\n\r\n    // 处理basic的配置\r\n    if ('basic' in configs) {\r\n        assign(sumConfigs.basic, configs.basic)\r\n    }\r\n    delete configs.basic\r\n\r\n    // 将configs的其余配置覆盖到basic中\r\n    assign(sumConfigs.basic, configs)\r\n    return sumConfigs\r\n}\r\n\r\n/*\r\nexport const assignConfigs = (setConfigs) => {\r\n    let configs = _lodash.cloneDeep(setConfigs)\r\n    let sumConfigs = {}\r\n    assign(sumConfigs, defaultConfigs.basic)\r\n    Object.keys(defaultConfigs).forEach((key) => {\r\n        sumConfigs[key] = {}\r\n    })\r\n    Object.keys(configs).forEach((key) => {\r\n        let encoding = configs[key]\r\n        if (typeof encoding === 'string') {\r\n            //timeLine\r\n            if (key in defaultConfigs) {\r\n                sumConfigs[key][encoding] = _lodash.cloneDeep(defaultConfigs[key][encoding])\r\n            } else {\r\n                sumConfigs[key] = encoding\r\n            }\r\n        } else if (_.isArray(encoding)) {\r\n            // time: ['timeLine', 'insert', 'markLine'] 类似于选择作用\r\n            encoding.forEach((e) => {\r\n                if (typeof e === 'string') {\r\n                    sumConfigs[key][e] = _lodash.cloneDeep(defaultConfigs[key][e])\r\n                } else {\r\n                    const e1 = Object.keys(e)[0]\r\n                    sumConfigs[key][e1] = _lodash.cloneDeep(defaultConfigs[key][e1])\r\n                    assign(sumConfigs[key], e)\r\n                }\r\n            })\r\n        } else {\r\n            const e = Object.keys(encoding)[0]\r\n            sumConfigs[key][e] = _lodash.cloneDeep(defaultConfigs[key][e])\r\n            assign(sumConfigs[key], encoding)\r\n        }\r\n    })\r\n    if ('layout' in sumConfigs) {\r\n        sumConfigs.layoutName = Object.keys(sumConfigs.layout)[0]\r\n    }\r\n    sumConfigs.renderType = 'timeLine'\r\n    if (sumConfigs.time && sumConfigs.time.animation) {\r\n        sumConfigs.renderType = 'animation'\r\n    } else {\r\n        // if (sumConfigs.time && sumConfigs.time.color) {\r\n        //     sumConfigs.renderType = 'color'\r\n        // }\r\n    }\r\n    // console.log(defaultConfigs.time.timeLine.element)\r\n    return sumConfigs\r\n}\r\n*/\r\n\r\n// export const timeEncodingOrder = {\r\n//     position: 0,\r\n//     animation: 1,\r\n//     color: 2,\r\n//     link: 3\r\n// }\r\n\r\nexport function getRenderType(arr) {\r\n    if (arr.indexOf('animation') > -1) {\r\n        return 'animation'\r\n    } else if (arr.indexOf('timeLine') > -1) {\r\n        return 'timeLine'\r\n    } else{\r\n        return 'sum'\r\n    }\r\n    // else if(arr.indexOf('chart') > -1){\r\n    //     return 'chart'\r\n    // }else if (arr.indexOf('color') > -1) {\r\n    //     return 'color'\r\n    // } else{  \r\n    //     return 'sumGraph'\r\n    // }\r\n}\r\n\r\n// 根据输入的参数，和默认的配置，合成最终的配置\r\n// 检验输入的参数，确保基础config没有问题\r\nexport function composeConfig(configItem) {\r\n    const config = deepClone(defaultConfigs)\r\n    if (!configItem.time || Object.prototype.toString.call(configItem.time) !== '[object Array]') {\r\n        config.time.chooseTypes = ['position']\r\n    } else {\r\n        config.time.chooseTypes = configItem.time.filter((item) => TIME_CONFIG.indexOf(item) > -1)\r\n    }\r\n    config.comparison.isOn = configItem.comparison ? true : false\r\n    config.layout.chooseTypes =\r\n        LAYOUT_CONFIG.indexOf(configItem.layout) > -1 ? configItem.layout : 'offLine'\r\n    if (Object.prototype.toString.call(configItem.coverConfig) === '[object Object]') {\r\n        coverConfig(config, configItem.coverConfig)\r\n    }\r\n    return config\r\n}\r\n\r\nexport function deepClone(Obj) {\r\n    var buf\r\n    if (Obj instanceof Array) {\r\n        buf = [] //创建一个空的数组\r\n        var i = Obj.length\r\n        while (i--) {\r\n            buf[i] = deepClone(Obj[i])\r\n        }\r\n        return buf\r\n    } else if (Obj instanceof Object) {\r\n        buf = {} //创建一个空对象\r\n        for (var k in Obj) {\r\n            //为这个对象添加新的属性\r\n            buf[k] = deepClone(Obj[k])\r\n        }\r\n        return buf\r\n    } else {\r\n        return Obj\r\n    }\r\n}\r\n\r\nexport function coverConfig(originConfig, newConfig) {\r\n    if (Object.prototype.toString.call(newConfig) === '[object Array]') {\r\n        for (let i = 0; i < newConfig.length; i++) {\r\n            if (typeof newConfig[i] !== 'object') {\r\n                originConfig[i] = newConfig[i]\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[i]) === '[object Array]' &&\r\n                Object.prototype.toString.call(originConfig[i]) === '[object Array]'\r\n            ) {\r\n                coverConfig(originConfig[i], newConfig[i])\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[i]) === '[object Object]' &&\r\n                Object.prototype.toString.call(originConfig[i]) === '[object Object]'\r\n            ) {\r\n                coverConfig(originConfig[i], newConfig[i])\r\n            }\r\n        }\r\n    } else if (Object.prototype.toString.call(newConfig) === '[object Object]') {\r\n        for (let key in newConfig) {\r\n            if (typeof newConfig[key] !== 'object') {\r\n                // 直接覆盖\r\n                originConfig[key] = newConfig[key]\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[key]) === '[object Array]' &&\r\n                Object.prototype.toString.call(originConfig[key]) === '[object Array]'\r\n            ) {\r\n                // 递归覆盖\r\n                coverConfig(originConfig[key], newConfig[key])\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[key]) === '[object Object]' &&\r\n                Object.prototype.toString.call(originConfig[key]) === '[object Object]'\r\n            ) {\r\n                // 递归覆盖\r\n                coverConfig(originConfig[key], newConfig[key])\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function getDividedOptions(props, status) {\r\n    const firstOption = {\r\n        ...props,\r\n        ...props.style[status[0]]\r\n    }\r\n    const secondOption = {\r\n        ...props,\r\n        ...props.style[status[1]]\r\n    }\r\n    const middleX = (props.source.x + props.target.x) / 2\r\n    const middleY = (props.source.y + props.target.y) / 2\r\n    firstOption.target = {\r\n        ...firstOption.target,\r\n        x: middleX,\r\n        y: middleY\r\n    }\r\n    secondOption.source = {\r\n        ...secondOption.source,\r\n        x: middleX,\r\n        y: middleY\r\n    }\r\n    return { firstOption, secondOption }\r\n}\r\nexport function getPiePathData(radius, len) {\r\n    const dataset = new Array(len).fill(1)\r\n\r\n    //新建一个饼状图\r\n    var pie = d3.pie()\r\n\r\n    //新建一个弧形生成器\r\n    var arc_generator = d3.arc().innerRadius(0).outerRadius(radius)\r\n\r\n    //利用饼状图生成器转换数据\r\n    var pieData = pie(dataset)\r\n    //控制台，打印pieData\r\n    const pathData = pieData.map((v) => arc_generator(v))\r\n    return pathData\r\n}\r\n\r\nexport function getBarChartNodePath(radius, len) {\r\n    const pathData = []\r\n    let startX = -1*radius, startY = -1*radius\r\n    let stepX = radius*2/len\r\n    let k = 0\r\n    while(k<len){\r\n        pathData.push({\r\n            x: startX,\r\n            y: startY,\r\n            width: stepX,\r\n            height: radius*2\r\n        })\r\n        startX += stepX\r\n        k++\r\n    }\r\n    return pathData\r\n}\r\n\r\n\r\nexport function getPiePathColor(len, startColor, endColor) {\r\n    //设置颜色比例尺\r\n    let colorScale\r\n    if (!startColor || !endColor) {\r\n        colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    } else {\r\n        // console.log(\"d3.range(len)\", d3.range(len))\r\n        colorScale = d3\r\n            .scaleLinear()\r\n            .domain([0, len - 1])\r\n            .range([startColor, endColor])\r\n    }\r\n    return colorScale\r\n}\r\n\r\n\r\nexport function getChartPathColor(len, startColor, endColor) {\r\n    //设置颜色比例尺\r\n    let colorScale\r\n    if (!startColor || !endColor) {\r\n        colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    } else {\r\n        // console.log(\"d3.range(len)\", d3.range(len))\r\n        colorScale = d3\r\n            .scaleLinear()\r\n            .domain([0, len - 1])\r\n            .range([startColor, endColor])\r\n    }\r\n    return colorScale\r\n}\r\n\r\n/** 节点的策略函数 */\r\nexport function getNodeRenderType(config, isColor, isPosition = true){\r\n    const isChart = config.time.chooseTypes.indexOf('chart') > -1\r\n    const { nodeStyle } = config.graph\r\n    const chartType = config.time.chart&&config.time.chart.type ? config.time.chart.type: 'line'\r\n    if(isChart){\r\n        if(chartType==='line'){\r\n            return 'lineChartNode'\r\n        }else{\r\n            if(nodeStyle.shape==='circle'){\r\n                return 'pieNode'\r\n            }else{\r\n                return 'barNode'\r\n            }\r\n        }\r\n    }else if(isColor&&isPosition){\r\n        if(nodeStyle.shape==='circle'){\r\n            return 'pieNode'\r\n        }else{\r\n            return 'barNode'\r\n        }\r\n    }else{\r\n        return 'simpleNode'\r\n    }\r\n}\r\n\r\nexport function getCurveData(len, data, isColor, strokeColor,colorScale ) {\r\n    const curveData = []\r\n    let lastStart = {\r\n        x: data.source.x,\r\n        y: data.source.y\r\n    }\r\n    const directFlag = data.source.y< data.target.y ? 1 : -1\r\n    const radius = Math.abs((data.source.y - data.target.y)/2)\r\n\r\n    const center = {\r\n        x: data.source.x,\r\n        y: (data.source.y + data.target.y)/2\r\n    }\r\n    \r\n    const stepAngle = Math.PI/len\r\n    let lastAngle = stepAngle\r\n\r\n    let i = 0\r\n    if(isColor){\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: center.x + directFlag*radius*Math.sin(lastAngle) ,\r\n                y: center.y - directFlag*radius*Math.cos(lastAngle) ,\r\n            }\r\n            curveData.push({\r\n                data: `M ${lastStart.x} ${lastStart.y} A ${radius} ${radius} 0 0 1 ${newStart.x} ${newStart.y} `,\r\n                color: colorScale(i)\r\n            })            \r\n            lastAngle += stepAngle\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }else{\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: center.x + directFlag*radius*Math.sin(lastAngle) ,\r\n                y: center.y - directFlag*radius*Math.cos(lastAngle) ,\r\n            }\r\n            curveData.push({\r\n                data: `M ${lastStart.x} ${lastStart.y} A ${radius} ${radius} 0 0 1 ${newStart.x} ${newStart.y} `,\r\n                color: strokeColor\r\n            })\r\n            lastAngle += stepAngle\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }\r\n    return curveData\r\n}\r\n\r\nexport function getLineData(len, data, isColor, strokeColor,colorScale) {\r\n    const lineData = []\r\n    let lastStart = {\r\n        x: data.source.x,\r\n        y: data.source.y\r\n    }\r\n    let xStep = (data.target.x - data.source.x) / len\r\n    let yStep = (data.target.y - data.source.y) / len\r\n    let i = 0\r\n    if(isColor){\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: lastStart.x + xStep,\r\n                y: lastStart.y + yStep\r\n            }\r\n            lineData.push({\r\n                source: lastStart,\r\n                target: newStart,\r\n                color: colorScale(i)\r\n            })\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }else{\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: lastStart.x + xStep,\r\n                y: lastStart.y + yStep\r\n            }\r\n            lineData.push({\r\n                source: lastStart,\r\n                target: newStart,\r\n                color: strokeColor\r\n            })\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }\r\n    return lineData\r\n}\r\n\r\nexport function getLinkData(len, data, shape, isColor, strokeColor,colorScale) {\r\n    return shape === 'line' ?  getLineData(len, data, isColor, strokeColor,colorScale): getCurveData(len, data, isColor, strokeColor,colorScale)\r\n}\r\n\r\n// export function getArcPathData(y1, y2) {\r\n//     const r = Math.abs(y2 - y1) / 2\r\n//     return `M 0,${y1}A${r},${r} 0,0,1 0,${y2}`\r\n// }\r\n\r\nexport function getLinkOpacity(props){\r\n    const { status, type , style} = props\r\n    if(type==='time'|| status.length === 0){\r\n        return style.linkStyle.opacity\r\n    }else if(status.length === 1){\r\n        return style[status[0]].opacity\r\n    }\r\n}\r\n\r\nexport function getLineType(status, style){\r\n    const typeA = style[status[0]].shape\r\n    const typeB = style[status[1]].shape\r\n    if(typeA === typeB){\r\n        return typeA === 'curve'? 'curve': 'line'\r\n    }else{\r\n        return [typeA, typeB]\r\n    }\r\n}\r\n\r\nexport function getArcPathData(source, target) {\r\n    const { firstData, secondData} = getDividedArcPathData(source, target)\r\n    return firstData + secondData\r\n}\r\n\r\nexport function getHybridPathData(source, target) {\r\n    let newSource, newTarget\r\n    // source在上，target在下\r\n    if (source.y > target.y) {\r\n        newSource = target\r\n        newTarget = source\r\n    } else {\r\n        newSource = source\r\n        newTarget = target\r\n    }\r\n    const x1 = newSource.x\r\n    const y1 = newSource.y\r\n    const x2 = newTarget.x\r\n    const y2 = newTarget.y\r\n    const flag = x1 < x2 ? 1 : -1\r\n    const flag2 = x1 < x2 ? 1 : 0\r\n    const r = (Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2 - x1, 2)) * Math.sqrt(2)) / 2\r\n    if (r === 0) {\r\n        return { firstData: null, secondData: null }\r\n    }\r\n    let mx = (x1 + x2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (y2 - y1)) / (Math.sqrt(2) * r)\r\n    let my = (y1 + y2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (x1 - x2)) / (Math.sqrt(2) * r)\r\n    const firstData = `M ${x1},${y1}A${r},${r} 0,0,${flag2} ${mx},${my}`\r\n    const secondData = `M ${mx},${my} L ${x2},${y2}`\r\n    // console.log(\"firstData\",\"secondData\",firstData,secondData)\r\n    return { firstData, secondData }\r\n}\r\n\r\nexport function getConfigPatternChange(task){\r\n    if(task.taskType==='comparison'){\r\n        if(task.basedType==='structure'){\r\n            return { pattern:'compare-structure',change:'all'}\r\n        }else{\r\n            return { pattern:'compare-degree', change: 'appeared'}\r\n        }\r\n    }else if(task.taskType === 'find'){\r\n        if(task.basedType==='structure'){\r\n            if(task.find.structure==='shortest-path'){\r\n                return { pattern:\"shortest-path\",change:'appeared'}\r\n            }else{\r\n                return { pattern:'dumb-bell',change:'appeared'}\r\n            }\r\n        }else{\r\n            return { pattern:'find-degree',change: 'appearedNode'}\r\n        }\r\n    }else{\r\n        return { pattern:'graph',change: 'unchanged'}\r\n    }\r\n}\r\n\r\nexport function addPatternAndChange(config){\r\n    const {task} = config\r\n    if(task.taskType==='comparison'){\r\n        if(task.basedType==='structure'){\r\n            task.pattern = 'compare-structure'\r\n        }else{\r\n            task.pattern = 'compare-attr'\r\n        }\r\n    }else if(task.taskType === 'find'){\r\n        if(task.basedType==='structure'){\r\n            if(task.find.structure==='shortest-path'){\r\n                task.pattern = 'shortest-path'\r\n            }else{\r\n                task.pattern = 'dumb-bell'\r\n            }\r\n        }else{\r\n            task.pattern = 'find-attr'\r\n        }\r\n    }else{\r\n        task.pattern = 'graph'\r\n    }\r\n    task.change = [...PATTERN_TO_CHANGE[task.pattern]]\r\n}\r\n\r\nexport function getSimpleGrammar(config){\r\n    return {\r\n        graph:{\r\n            layout: config.graph.layout.chooseType\r\n        },\r\n        time: config.time.chooseTypes,\r\n        task: {\r\n            taskType:config.task.taskType,\r\n            basedType: config.task.basedType\r\n        }\r\n    }\r\n}\r\n\r\nexport function getDividedArcPathData(source, target) {\r\n    let newSource, newTarget\r\n    // source在上，target在下\r\n    if (source.y > target.y) {\r\n        newSource = target\r\n        newTarget = source\r\n    } else {\r\n        newSource = source\r\n        newTarget = target\r\n    }\r\n    const x1 = newSource.x\r\n    const y1 = newSource.y\r\n    const x2 = newTarget.x\r\n    const y2 = newTarget.y\r\n    const flag = x1 < x2 ? 1 : -1\r\n    const flag2 = x1 < x2 ? 1 : 0\r\n    const r = (Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2 - x1, 2)) * Math.sqrt(2)) / 2\r\n    if (r === 0) {\r\n        return { firstData: null, secondData: null }\r\n    }\r\n    let mx = (x1 + x2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (y2 - y1)) / (Math.sqrt(2) * r)\r\n    let my = (y1 + y2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (x1 - x2)) / (Math.sqrt(2) * r)\r\n    const firstData = `M ${x1},${y1}A${r},${r} 0,0,${flag2} ${mx},${my}`\r\n    const secondData = `M ${mx},${my}A${r},${r} 0,0,${flag2} ${x2},${y2}`\r\n    // console.log(\"firstData\",\"secondData\",firstData,secondData)\r\n    return { firstData, secondData }\r\n}\r\n\r\nexport function getChartLineData(radius, existTimeIndex , colorScale, isColor,strokeColor){\r\n    let startX = -1*radius\r\n    const stepX = radius*2/(existTimeIndex.length-1)\r\n    const stepY = radius/2\r\n    const linePoints = existTimeIndex.map((v,index)=>{\r\n        let result \r\n        if(v === 1){\r\n            result =  {\r\n                x: startX,\r\n                y: -1*stepY\r\n            }\r\n        }else{\r\n            result =  {\r\n                x: startX,\r\n                y: stepY\r\n            }\r\n           \r\n        }\r\n        startX += stepX\r\n        return result\r\n    })\r\n    let resultGroup = []\r\n    for(let i = 1;i<linePoints.length;i++){\r\n        resultGroup.push({source:linePoints[i-1],target:linePoints[i]})\r\n    }\r\n\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const chartLineData = resultGroup.map((line, index)=>{\r\n        return {\r\n            data: link(line),\r\n            color: isColor ? colorScale(index) : strokeColor\r\n        }\r\n    })\r\n        \r\n    return chartLineData\r\n}\r\n\r\nexport function getLinkPathData(markLine, nodeNum) {\r\n    const colorScale = d3.scaleOrdinal().domain(d3.range(nodeNum)).range(d3.schemeCategory10)\r\n    // console.log('node2PathData', node2PathData)\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    \r\n    const linkPathData = Object.keys(markLine).map((markId, index) => {\r\n        const curveData = []\r\n        markLine[markId].forEach((markLineItem) => {\r\n            \r\n            curveData.push(link(markLineItem))\r\n        })\r\n        return {\r\n            id: markId,\r\n            data: curveData,\r\n            color: colorScale[index]\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\n\r\n\r\n\r\n/*\r\nexport function getLinkPathData2(data, xDistance, yDistance, margin, nodeNum) {\r\n    const colorScale = d3.scaleOrdinal().domain(d3.range(nodeNum)).range(d3.schemeCategory10)\r\n    let node2PathData = {}\r\n    let nodeIndex = 0\r\n    data.forEach((dataItem, frameIndex) => {\r\n        dataItem.nodes.forEach((v, j) => {\r\n            let coord = {\r\n                x: margin + frameIndex * xDistance,\r\n                y: margin + j * yDistance\r\n            }\r\n            if (!node2PathData[v.id]) {\r\n                node2PathData[v.id] = {\r\n                    id: v.id,\r\n                    lastFrame: frameIndex,\r\n                    lastData: [coord],\r\n                    data: [],\r\n                    color: colorScale(nodeIndex++)\r\n                }\r\n            } else {\r\n                if (frameIndex === node2PathData[v.id].lastFrame + 1) {\r\n                    // 表示是连续存在\r\n                    node2PathData[v.id].lastData.push(coord)\r\n                } else {\r\n                    // 表示已经断开，重启一组数组\r\n                    node2PathData[v.id].data.push(node2PathData[v.id].lastData)\r\n                    node2PathData[v.id].lastData = [coord]\r\n                }\r\n                node2PathData[v.id].lastFrame = frameIndex\r\n            }\r\n        })\r\n    })\r\n    console.log('node2PathData', node2PathData)\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const linkPathData = Object.keys(node2PathData).map((v) => {\r\n        node2PathData[v].data.push(node2PathData[v].lastData)\r\n        const curveData = []\r\n        node2PathData[v].data.forEach((dataItem) => {\r\n            if (dataItem.length > 1) {\r\n                for (let i = 1; i < dataItem.length; i++) {\r\n                    curveData.push(\r\n                        link({\r\n                            source: dataItem[i - 1],\r\n                            target: dataItem[i]\r\n                        })\r\n                    )\r\n                }\r\n            }\r\n        })\r\n        return {\r\n            id: v,\r\n            data: curveData,\r\n            color: node2PathData[v].color\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\n\r\n*/\r\n","import React from 'react'\r\nimport ArcLinkItem from '../arcLinkItem/arcLinkItem.js'\r\nimport LinkItem from '../linkItem/linkItem.js'\r\nimport { \r\n    getDividedArcPathData, \r\n    getArcPathData, \r\n    getDividedOptions, \r\n    getLineType,\r\n    getHybridPathData\r\n} from '../../util/dnetChart.js'\r\n\r\n\r\nexport default function LinkContainer(props) {\r\n    const { source, target, opacity = 1, status=[], type, style} = props\r\n    \r\n    let linkType \r\n    if(type==='time'||status.length === 0){\r\n        // comparison状态没有开启\r\n        linkType = style.linkStyle.shape\r\n        if(linkType === 'curve'){\r\n            return (\r\n                <ArcLinkItem\r\n                    data = {getArcPathData(source, target)}\r\n                    {...style.linkStyle}\r\n                    motionOpacity={opacity}\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <LinkItem\r\n                    {...style.linkStyle}\r\n                    motionOpacity={opacity}\r\n                    {...props}\r\n                />\r\n            )\r\n        }\r\n        \r\n    }else if (status.length === 1) {\r\n        // comparison状态开启，状态只有一个\r\n        linkType = style[status[0]].shape\r\n        if(linkType === 'curve'){\r\n            return (\r\n                <ArcLinkItem\r\n                    data = {getArcPathData(source, target)}\r\n                    {...style[status[0]]}\r\n                    motionOpacity={opacity}\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <LinkItem\r\n                    {...style[status[0]]}\r\n                    motionOpacity={opacity}\r\n                    {...props}\r\n                />\r\n            )\r\n        }\r\n    } else if((status.length === 2)){\r\n        // 比较状态开启，状态有两个\r\n        // 状态有两个不进行opacity渐变覆盖\r\n        linkType = getLineType(status, style)\r\n        if(linkType === 'curve'){\r\n            const { firstData, secondData} = getDividedArcPathData(source, target)\r\n            return (\r\n                <>\r\n                    <ArcLinkItem\r\n                        data = {firstData}\r\n                        {...style[status[0]]}\r\n                    />\r\n                    <ArcLinkItem\r\n                        data = {secondData}\r\n                        {...style[status[1]]}\r\n                    />\r\n                </>\r\n            )\r\n        }else if(linkType === 'line'){\r\n            const { firstOption, secondOption } = getDividedOptions(props, status)\r\n            return (\r\n                <>\r\n                    <LinkItem {...firstOption} />\r\n                    <LinkItem {...secondOption} />\r\n                </>\r\n            )\r\n        }else{\r\n            let indexA = 0 , indexB = 1;\r\n            if(linkType[0]!=='curve'){\r\n                indexA = 1\r\n                indexB = 0\r\n            }\r\n            const { firstData, secondData} = getHybridPathData(source, target)\r\n            return (\r\n                <>\r\n                    <ArcLinkItem\r\n                        data = {firstData}\r\n                        {...style[status[indexA]]}\r\n                    />\r\n                    <ArcLinkItem\r\n                        data = {secondData}\r\n                        {...style[status[indexB]]}\r\n                    />\r\n                </>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { getLinkData } from '../../util/dnetChart.js'\r\n\r\nexport default function DividedLinkItem(props) {\r\n    const { data, len, colorScale, strokeWidth, strokeType, existTimeIndex, shape, isColor = true, strokeColor } = props\r\n    const linkData = getLinkData(len, data, shape,isColor, strokeColor,colorScale)\r\n    \r\n    return (\r\n        <g>\r\n            {shape === 'line'\r\n                ? linkData.map((v, index) => {\r\n                      if (existTimeIndex[index] === 1) {\r\n                          return (\r\n                              <line\r\n                                  key={`${index}`} //这里不对\r\n                                  x1={v.source.x}\r\n                                  y1={v.source.y}\r\n                                  x2={v.target.x}\r\n                                  y2={v.target.y}\r\n                                  stroke={v.color }\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              ></line>\r\n                          )\r\n                      } else {\r\n                          return (\r\n                              <line\r\n                                  key={index} //这里不对\r\n                                  x1={v.source.x}\r\n                                  y1={v.source.y}\r\n                                  x2={v.target.x}\r\n                                  y2={v.target.y}\r\n                                  stroke={'#dddddd'}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              ></line>\r\n                          )\r\n                      }\r\n                  })\r\n                : linkData.map((v, index) => {\r\n                      if (existTimeIndex[index] === 1) {\r\n                          return (\r\n                              <path\r\n                                  key={`path-${index}`}\r\n                                  d={v.data}\r\n                                  fill={'none'}\r\n                                  stroke={v.color}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              />\r\n                          )\r\n                      } else {\r\n                          return (\r\n                              <path\r\n                                  key={`path-${index}`}\r\n                                  d={v.data}\r\n                                  fill={'none'}\r\n                                  stroke={'#dddddd'}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              />\r\n                          )\r\n                      }\r\n                  })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NodeItem(props) {\r\n    if (props.shape === 'circle') {\r\n        return (\r\n            <circle\r\n                id={props.timeId}\r\n                cx={props.x + (props.xOffset ? props.xOffset : 0)}\r\n                cy={props.y + (props.yOffset ? props.yOffset : 0)}\r\n                fill={props.fillColor}\r\n                stroke={props.strokeColor}\r\n                strokeWidth={`${props.strokeWidth}px`}\r\n                r={props.radius}\r\n                opacity={props.opacity}\r\n                strokeDasharray={\r\n                    props.strokeType === 'solid' ? '' : `${props.radius / 2},${props.radius / 2} `\r\n                }\r\n            ></circle>\r\n        )\r\n    } else {\r\n        return (\r\n            <rect\r\n                id={props.timeId}\r\n                x={props.x + (props.xOffset ? props.xOffset : 0) - props.radius}\r\n                y={props.y + (props.yOffset ? props.yOffset : 0) - props.radius}\r\n                fill={props.fillColor ? props.fillColor : props.strokeColor}\r\n                stroke={props.strokeColor}\r\n                strokeWidth={`${props.strokeWidth}px`}\r\n                width={props.radius * 2}\r\n                height={props.radius * 2}\r\n                opacity={props.opacity}\r\n                strokeDasharray={\r\n                    props.strokeType === 'solid' ? '' : `${props.radius / 2},${props.radius / 2} `\r\n                }\r\n            ></rect>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n// 先判断其实left节点还是right节点\r\nexport default function HalfNodeItem(props) {\r\n    if (props.direction === 'left') {\r\n        if (props.shape === 'circle') {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  A ${props.radius} ${\r\n                        props.radius\r\n                    } 0 1 1 ${props.x} ${props.y - props.radius}`}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  \r\n            L ${props.x - props.radius} ${props.y + props.radius} \r\n            L ${props.x - props.radius} ${props.y - props.radius} \r\n            L ${props.x} ${props.y - props.radius} `}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    } else {\r\n        if (props.shape === 'circle') {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  A ${props.radius} ${\r\n                        props.radius\r\n                    } 0 1 0 ${props.x} ${props.y - props.radius}`}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  \r\n            L ${props.x + props.radius} ${props.y + props.radius} \r\n            L ${props.x + props.radius} ${props.y - props.radius} \r\n            L ${props.x} ${props.y - props.radius} `}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport HalfNodeItem from '../halfNodeItem/halfNodeItem.js'\r\n\r\nexport default function NodeItemContainer(props) {\r\n    const {status=[], type, style} = props\r\n    if(type==='time'||status.length === 0){\r\n        return <NodeItem {...style.nodeStyle} {...props} />\r\n    }else if (status.length === 1) {\r\n        return <NodeItem {...style[status[0]]} {...props} />\r\n    } else if(status.length === 2) {\r\n        return (\r\n            <>\r\n                <HalfNodeItem direction={'left'} {...style[status[0]]} {...props} />\r\n                <HalfNodeItem direction={'right'} {...style[status[1]]} {...props} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { getPiePathData } from '../../util/dnetChart.js'\r\n\r\nexport default function PieNodeItem(props) {\r\n    const { data, len, colorScale, existTimeIndex, strokeColor, strokeWidth, strokeType, radius, fillColor,isColor = true } = props\r\n    // return null\r\n    const pathData = getPiePathData(radius, len)\r\n    return (\r\n        <>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {pathData.map((v, index) => {\r\n                  if(existTimeIndex[index]===1){\r\n                    return (\r\n                        <path\r\n                            d={v}\r\n                            fill={isColor ? colorScale(index): fillColor}\r\n                            key={`pie-node-path-${index}`}\r\n                        />\r\n                    )\r\n                  }else{\r\n                    return (\r\n                        <path\r\n                            d={v}\r\n                            fill={'#eeeeee'}\r\n                            key={`pie-node-path-${index}`}\r\n                        />\r\n                    )\r\n                  } \r\n                })}\r\n            </g>\r\n            <circle\r\n                cx={data.x}\r\n                cy={data.y}\r\n                stroke={strokeColor}\r\n                fill={'none'}\r\n                strokeWidth={`${strokeWidth}px`}\r\n                r={radius}\r\n                strokeDasharray={\r\n                    strokeType === 'solid' ? '' : `${radius / 2},${radius / 2} `\r\n                }\r\n            ></circle>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getBarChartNodePath } from '../../util/dnetChart.js'\r\n\r\nexport default function BarChartNodeItem(props) {\r\n    const { data, len, colorScale, existTimeIndex, strokeColor, strokeWidth, strokeType, radius,fillColor,isColor = true } = props\r\n    const barChartData = getBarChartNodePath(radius, len)\r\n    return (\r\n        <>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {barChartData.map((itemData, index) => {\r\n                  if(existTimeIndex[index]===1){\r\n                    return (\r\n                        <rect\r\n                            key={`bar-chart-node-${index}`}\r\n                            id={props.timeId}\r\n                            x={itemData.x}\r\n                            y={itemData.y}\r\n                            fill={isColor ? colorScale(index):fillColor}\r\n                            stroke={strokeColor}\r\n                            strokeWidth={\"0px\"}\r\n                            width={itemData.width}\r\n                            height={itemData.height}\r\n                            opacity={props.opacity}\r\n                        />\r\n                    )\r\n                  }else{\r\n                    return (\r\n                        <rect\r\n                            key={`bar-chart-node-${index}`}\r\n                            id={props.timeId}\r\n                            x={itemData.x}\r\n                            y={itemData.y}\r\n                            fill={'#eeeeee'}\r\n                            stroke={strokeColor}\r\n                            strokeWidth={\"0px\"}\r\n                            width={itemData.width}\r\n                            height={itemData.height}\r\n                            opacity={props.opacity}\r\n                        />\r\n                    )\r\n                  } \r\n                })}\r\n            </g>\r\n            <rect\r\n                x={data.x - radius}\r\n                y={data.y - radius}\r\n                stroke={strokeColor}\r\n                fill={'none'}\r\n                strokeWidth={`${strokeWidth}px`}\r\n                width={radius * 2}\r\n                height={radius * 2}\r\n                strokeDasharray={\r\n                    strokeType === 'solid' ? '' : `${radius / 2},${radius / 2} `\r\n                }\r\n            ></rect>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport { getChartLineData } from '../../util/dnetChart.js'\r\n\r\nexport default function ChartNodeItem(props) {\r\n    const { data,isColor, colorScale, shape, existTimeIndex, strokeColor, strokeWidth,fillColor, strokeType, radius } = props\r\n    const pathDatas = getChartLineData(radius, existTimeIndex, colorScale, isColor, strokeColor)\r\n    return (\r\n        <>\r\n            <NodeItem\r\n                x={data.x}\r\n                y={data.y}\r\n                shape={shape}\r\n                fillColor={fillColor}\r\n                strokeColor={strokeColor}\r\n                strokeWidth={0}\r\n                radius={radius}\r\n                strokeType={strokeType}\r\n            >\r\n            </NodeItem>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {\r\n                    pathDatas.map((pathData, index)=>{\r\n                        return <path\r\n                            key={`chart-item-${index}-${pathData.data}`}\r\n                            d={pathData.data}\r\n                            stroke={pathData.color}\r\n                            strokeWidth={`${strokeWidth}px`}\r\n                            fill={'none'}\r\n                        ></path>\r\n                    })\r\n                }\r\n            </g>\r\n            <NodeItem\r\n                x={data.x}\r\n                y={data.y}\r\n                shape={shape}\r\n                fillColor={'none'}\r\n                strokeColor={strokeColor}\r\n                strokeWidth={strokeWidth}\r\n                radius={radius}\r\n                strokeType={strokeType}\r\n            >\r\n            </NodeItem>\r\n        </>)\r\n}\r\n","import React from 'react'\r\nimport NodeItemContainer from '../nodeItemContainer/nodeItemContainer.js'\r\nimport PieNodeItem from '../pieNodeItem/pieNodeItem.js'\r\nimport BarChartNodeItem from '../barChartNodeItem/barChartNodeItem.js'\r\nimport ChartNodeItem from '../chartNodeItem/chartNodeItem.js'\r\nimport { getPiePathColor, getNodeRenderType } from '../../util/dnetChart.js'\r\n\r\nexport default function NodeContainer(props) {\r\n    const { data: nodesData, config, len: dataLength, isSum } = props\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const nodeRenderType = getNodeRenderType(config, isColor, isSum)\r\n    if (nodeRenderType === 'simpleNode') {\r\n        return (\r\n            <>\r\n                {nodesData.map((node) => {\r\n                    return <NodeItemContainer {...node} key={`node-${node.id}`} />\r\n                })}\r\n            </>\r\n        )\r\n    } else {\r\n        // 确定颜色比例\r\n        const { nodeStyle, linkStyle } = config.graph\r\n        const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n        let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n        switch (nodeRenderType) {\r\n            case 'lineChartNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            // matrix中链接的节点形式，和普通的基点样式不一样。所以，需要更新\r\n                            const tempStyle =\r\n                                node.type === 'link-node'\r\n                                    ? {\r\n                                          ...nodeStyle,\r\n                                          fillColor: linkStyle.pointFillColor,\r\n                                          shape: linkStyle.pointShape,\r\n                                          opacity: linkStyle.pointOpacity\r\n                                      }\r\n                                    : nodeStyle\r\n                            // const tempStyle = nodeStyle\r\n                            return (\r\n                                <ChartNodeItem\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    colorScale={colorScale}\r\n                                    isColor={isColor}\r\n                                    key={`line-chart-node-${index}`}\r\n                                    {...tempStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            case 'pieNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            return node.type === 'link-node' &&\r\n                                node.style.nodeStyle.shape === 'rect' ? (\r\n                                <BarChartNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    isColor={isColor}\r\n                                    colorScale={colorScale}\r\n                                    key={`bar-node-${index}`}\r\n                                    radius={nodeStyle.radius}\r\n                                    {...nodeStyle}\r\n                                    shape={linkStyle.pointShape}\r\n                                    fillColor={linkStyle.pointFillColor}\r\n                                    opacity={linkStyle.pointFillColor}\r\n                                />\r\n                            ) : (\r\n                                <PieNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    colorScale={colorScale}\r\n                                    isColor={isColor}\r\n                                    key={`pie-node-${index}`}\r\n                                    {...nodeStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            case 'barNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            return (\r\n                                <BarChartNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    isColor={isColor}\r\n                                    colorScale={colorScale}\r\n                                    key={`bar-node-${index}`}\r\n                                    {...nodeStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {\r\n    getPiePathColor, \r\n} from '../../util/dnetChart.js'\r\n\r\nexport default function MarkLineItem(props) {\r\n    const { markLine, markLineOptions } = props\r\n    let colorScale = getPiePathColor(200, '#ECAA7B', '#98DDF3')\r\n    return (\r\n        <g>\r\n            {markLine.map((links, index) => {\r\n                return (\r\n                    <g key={`curve-g-${index}`}>\r\n                        {links.data.map((v, index) => {\r\n                            return (\r\n                                <path\r\n                                    d={v}\r\n                                    // stroke={markLineOptions.strokeColor}\r\n                                    stroke={colorScale(index)}\r\n                                    strokeWidth={`${markLineOptions.strokeWidth}px`}\r\n                                    opacity={markLineOptions.opacity}\r\n                                    fill={\"none\"}\r\n                                    strokeDasharray={\r\n                                        markLineOptions.strokeType === 'solid'\r\n                                            ? ''\r\n                                            : markLineOptions.strokeDasharray\r\n                                    }\r\n                                    key={`curve-link-${index}`}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </g>\r\n                )\r\n            })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LinkContainer from '../../linkContainer/linkContainer.js'\r\nimport DividedLinkItem from '../../dividedLinkItem/dividedLinkItem.js'\r\nimport NodeContainer from '../../nodeContainer/nodeContainer.js'\r\nimport { getSvgWidthHeight } from '../../../util/dnetChart'\r\nimport MarkLineItem from '../../markLineItem/markLineItem.js'\r\nimport { getPiePathColor } from '../../../util/dnetChart.js'\r\n\r\nexport default function TimePositionDnet(props) {\r\n    const { data, config, markLine } = props\r\n    const dataLength = data.length\r\n    if (dataLength === 0) return null\r\n    const { svgWidth, svgHeight } = getSvgWidthHeight(config, dataLength)\r\n    const markLineOptions = config.time.markLine\r\n    const { linkStyle, layout } = config.graph\r\n\r\n    // 确定颜色比例\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n    let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    return (\r\n        <svg\r\n            className=\"nlg-container-svg\"\r\n            width={`${props.sampleWidth ? props.sampleWidth : svgWidth}px`}\r\n            height={`${props.sampleHeight ? props.sampleHeight : svgHeight}px`}\r\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {markLine ? (\r\n                <MarkLineItem markLine={markLine} markLineOptions={markLineOptions} />\r\n            ) : null}\r\n            {data.map((dataItem, index) => {\r\n                return (\r\n                    <g key={`subGraph-${index}`}>\r\n                        <g>\r\n                            {(isChart && !isMatrix)\r\n                                ? dataItem.links.map((link, index) => {\r\n                                      return (\r\n                                          <DividedLinkItem\r\n                                              len={dataLength}\r\n                                              data={link}\r\n                                              existTimeIndex={link.existTimeIndex}\r\n                                              colorScale={colorScale}\r\n                                              isColor={isColor}\r\n                                              key={`time-color-link-${index}`}\r\n                                              {...linkStyle}\r\n                                          />\r\n                                      )\r\n                                  })\r\n                                : dataItem.links.map((link) => {\r\n                                      return <LinkContainer {...link} key={`link-${link.id}`} />\r\n                                  })}\r\n                        </g>\r\n                        <g>\r\n                            <NodeContainer\r\n                                len={dataLength}\r\n                                data={dataItem.nodes}\r\n                                config={config}\r\n                                isSum={false}\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                )\r\n            })}\r\n        </svg>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MARK_POINT_RADIUS as markRadius} from '../../util/const.js'\r\n\r\nexport default function MarkItemGraph(props) {\r\n    const { data, markLineOptions } = props\r\n    return (\r\n        <g>\r\n            {data.nodes.map((node, index) => {\r\n                return (\r\n                    <rect\r\n                        key={`${node.id}-${index}`}\r\n                        id={node.id}\r\n                        x={node.x - markRadius}\r\n                        y={node.y - markRadius}\r\n                        fill={markLineOptions.strokeColor}\r\n                        strokeWidth={`0px`}\r\n                        width={markRadius * 2}\r\n                        height={markRadius * 2}\r\n                        opacity={0.3}\r\n                    ></rect>\r\n                )\r\n            })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LinkContainer from '../linkContainer/linkContainer.js'\r\nimport DividedLinkItem from '../dividedLinkItem/dividedLinkItem.js'\r\nimport NodeContainer from '../nodeContainer/nodeContainer.js'\r\n// import Motion from '../motion/Motion'\r\nimport { getPiePathColor } from '../../util/dnetChart.js'\r\nimport MarkLineItem from '../markLineItem/markLineItem.js'\r\nimport MarkItemGraph from '../markItemGraph/markItemGraph.js'\r\n\r\nexport default function NodeLinkGraph(props) {\r\n    const {\r\n        data,\r\n        config,\r\n        dataLength,\r\n        width,\r\n        height,\r\n        sumData,\r\n        markLine,\r\n        markLineOptions,\r\n        hasTimeLine\r\n    } = props\r\n    // 确定颜色比例\r\n    const { linkStyle, layout } = config.graph\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n    let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    return (\r\n        <svg\r\n            className=\"nlg-container-svg\"\r\n            width={`${props.sampleWidth ? props.sampleWidth : width}px`}\r\n            height={`${props.sampleHeight ? props.sampleHeight : height}px`}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {markLine ? (\r\n                hasTimeLine ? (\r\n                    <MarkLineItem markLine={markLine} markLineOptions={markLineOptions} />\r\n                ) : (\r\n                    <MarkItemGraph data={sumData} markLineOptions={markLineOptions} />\r\n                )\r\n            ) : null}\r\n            <g>\r\n                {isChart && !isMatrix\r\n                    ? data.links.map((link, index) => {\r\n                          return (\r\n                              <DividedLinkItem\r\n                                  len={dataLength}\r\n                                  data={link}\r\n                                  existTimeIndex={link.existTimeIndex}\r\n                                  colorScale={colorScale}\r\n                                  isColor={isColor}\r\n                                  key={`time-color-link-${index}`}\r\n                                  {...linkStyle}\r\n                              />\r\n                          )\r\n                      })\r\n                    : data.links.map((link) => {\r\n                          return <LinkContainer {...link} key={`link-${link.id}`} />\r\n                      })}\r\n                {/* {data.links.map((v, i) => {\r\n                    return (\r\n                        <Motion\r\n                            duration={1500}\r\n                            key={`${v.id}_motion`}\r\n                            style={{\r\n                                opacity: getLinkOpacity(v),\r\n                                sourceX: v.source.x,\r\n                                sourceY: v.source.y,\r\n                                targetX: v.target.x,\r\n                                targetY: v.target.y\r\n                            }}\r\n                        >\r\n                            {({ opacity, sourceX, sourceY, targetX, targetY }) => (\r\n                                <LinkContainer\r\n                                    {...props}\r\n                                    {...v}\r\n                                    source={{\r\n                                        ...v.source,\r\n                                        x: sourceX,\r\n                                        y: sourceY\r\n                                    }}\r\n                                    target={{\r\n                                        ...v.target,\r\n                                        x: targetX,\r\n                                        y: targetY\r\n                                    }}\r\n                                    opacity={opacity}\r\n                                    key={`link-${v.id}`}\r\n                                />\r\n                            )}\r\n                        </Motion>\r\n                    )\r\n                })} */}\r\n            </g>\r\n            <g>\r\n                <NodeContainer len={dataLength} data={data.nodes} config={config} isSum={false} />\r\n                {/* {data.nodes.map((v, i) => {\r\n                    return (\r\n                        <Motion\r\n                            duration={1500}\r\n                            key={`${v.id}_motion`}\r\n                            style={{\r\n                                opacity: v.opacity,\r\n                                x: v.x,\r\n                                y: v.y\r\n                            }}\r\n                        >\r\n                            {({ opacity, x, y }) => (\r\n                                <NodeItemContainer\r\n                                    {...props}\r\n                                    {...v}\r\n                                    x={x}\r\n                                    y={y}\r\n                                    opacity={opacity}\r\n                                    key={`node-${v.id}`}\r\n                                />\r\n                            )}\r\n                        </Motion>\r\n                    )\r\n                })} */}\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Slider } from 'antd'\r\nimport { PauseCircleOutlined, PlayCircleOutlined } from '@ant-design/icons'\r\nimport NodeLinkGraph from '../../nodeLinkGraph/nodeLinkGraph.js'\r\nimport { getSvgWidthHeight } from '../../../util/dnetChart'\r\nimport './timeAnimationDnet.css'\r\n\r\nexport default function TimeAnimationDnet(props) {\r\n    const [frameIndex, setFrameIndex] = useState(0)\r\n    const [playOrPause, setPlayOrPause] = useState(false)\r\n    const [svgWidth, setSvgWidth] = useState(0)\r\n    const [svgHeight, setSvgHeight] = useState(0)\r\n    const { data, config,sumData, markLine } = props\r\n    const timeConfig = config.time\r\n    const speed = timeConfig.animation.speed\r\n    const hasTimeLine = timeConfig.chooseTypes.indexOf('timeLine') > -1\r\n    let timeout\r\n\r\n    useEffect(() => {\r\n        const result = getSvgWidthHeight(config, data.length)\r\n        setSvgWidth(result.svgWidth)\r\n        setSvgHeight(result.svgHeight)\r\n    }, [data.length, config.basic, config.time])\r\n\r\n    useEffect(() => {\r\n        if (timeout) {\r\n            clearTimeout(timeout)\r\n        }\r\n        // 切换数据后暂停，帧号归零\r\n        setPlayOrPause(false)\r\n        setFrameIndex(0)\r\n        setTimeout(() => {\r\n            // 将playOrPause改成true会自动播放动画，所以不用去单独执行controlAnimation函数\r\n            setPlayOrPause(true)\r\n        }, speed)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        controlAnimation()\r\n    }, [frameIndex])\r\n\r\n    useEffect(() => {\r\n        if (playOrPause) {\r\n            controlAnimation()\r\n        }\r\n    }, [playOrPause])\r\n\r\n    if (data.length === 0) return null\r\n\r\n    function handlePlayOrPause() {\r\n        setPlayOrPause(!playOrPause)\r\n    }\r\n\r\n    function controlAnimation() {\r\n        // 清除之前的定时器\r\n        if (timeout) {\r\n            clearTimeout(timeout)\r\n        }\r\n        timeout = setTimeout(() => {\r\n            if (playOrPause) {\r\n                const len = data.length\r\n                const nextFrame = (frameIndex + 1) % len\r\n                setFrameIndex(nextFrame)\r\n            }\r\n        }, speed)\r\n    }\r\n    return data[frameIndex] ? (\r\n        <>\r\n            \r\n            <NodeLinkGraph \r\n                data={props.data[frameIndex]} \r\n                dataLength={data.length}\r\n                config={config}\r\n                height={svgHeight} \r\n                sampleWidth={props.sampleWidth}\r\n                sampleHeight={props.sampleHeight}\r\n                width={svgWidth} \r\n                sumData = {sumData}\r\n                markLine = {markLine}\r\n                markLineOptions = {timeConfig.markLine}\r\n                hasTimeLine = {hasTimeLine}\r\n            />\r\n            {!props.isSample ? (\r\n                <div className=\"tad-control-container\">\r\n                    {playOrPause ? (\r\n                        <PauseCircleOutlined\r\n                            className=\"tad-control-icon\"\r\n                            onClick={handlePlayOrPause}\r\n                        />\r\n                    ) : (\r\n                        <PlayCircleOutlined\r\n                            className=\"tad-control-icon\"\r\n                            onClick={handlePlayOrPause}\r\n                        />\r\n                    )}\r\n                    <Slider\r\n                        style={{\r\n                            width: '150px',\r\n                            marginLeft: '20px'\r\n                        }}\r\n                        included={false}\r\n                        value={frameIndex}\r\n                        min={0}\r\n                        max={props.data.length - 1}\r\n                        tooltipVisible\r\n                        tooltipPlacement={'bottom'}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    ) : null\r\n}\r\n","import React from 'react'\r\nimport DividedLinkItem from '../../dividedLinkItem/dividedLinkItem.js'\r\nimport LinkContainer from '../../linkContainer/linkContainer.js'\r\nimport NodeContainer from '../../nodeContainer/nodeContainer.js'\r\nimport { getPiePathColor } from '../../../util/dnetChart.js'\r\n\r\nexport default function TimeSumDnet(props) {\r\n    if (props.len === 0) return null\r\n    const timeChooseTypes = props.config.time.chooseTypes\r\n\r\n    // isColor是true以及isSample是false的时候，是渲染图例的\r\n    const legendData = new Array(props.len).fill(0)\r\n    const singleLegendWidth = 15\r\n    // 确定颜色比例尺\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = props.config.time.color\r\n    let colorScale = getPiePathColor(props.len, startColor, endColor)\r\n    const { eachWidth, eachHeight, margin, linkStyle,layout } = props.config.graph\r\n\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = isColor || timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    \r\n    const svgWidth = eachWidth + margin * 2\r\n    const svgHeight = eachHeight + margin * 2\r\n\r\n    return (\r\n        <>\r\n            {!props.isSample && isColor ? (\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '20px',\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        margin: '10px'\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"legend-text\"\r\n                        style={{\r\n                            margin: '0 10px'\r\n                        }}\r\n                    >\r\n                        0\r\n                    </div>\r\n                    <svg\r\n                        className=\"legend-svg\"\r\n                        width={`${singleLegendWidth * props.len}px`}\r\n                        height={'20px'}\r\n                        viewBox={`0 0 ${singleLegendWidth * props.len} 20`}\r\n                        preserveAspectRatio=\"xMinYMin\"\r\n                    >\r\n                        {legendData.map((dataItem, index) => {\r\n                            return (\r\n                                <rect\r\n                                    key={`tc-legend-${index}`}\r\n                                    x={index * singleLegendWidth}\r\n                                    y={0}\r\n                                    fill={colorScale(index)}\r\n                                    width={singleLegendWidth}\r\n                                    height={singleLegendWidth}\r\n                                ></rect>\r\n                            )\r\n                        })}\r\n                    </svg>\r\n                    <div\r\n                        style={{\r\n                            margin: '0 10px'\r\n                        }}\r\n                    >\r\n                        {props.len - 1}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            <svg\r\n                className=\"nlg-container-svg\"\r\n                width={`${props.sampleWidth ? props.sampleWidth : svgWidth}px`}\r\n                height={`${props.sampleHeight ? props.sampleHeight : svgHeight}px`}\r\n                viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n                preserveAspectRatio=\"xMinYMin\"\r\n            >\r\n                {\r\n                    /** 链接绘制 */\r\n                    isChart && !isMatrix\r\n                        ? props.data.links.map((dataItem, index) => {\r\n                              return (\r\n                                  <DividedLinkItem\r\n                                      len={props.len}\r\n                                      data={dataItem}\r\n                                      existTimeIndex={dataItem.existTimeIndex}\r\n                                      colorScale={colorScale}\r\n                                      isColor={isColor}\r\n                                      key={`time-color-link-${index}`}\r\n                                      {...linkStyle}\r\n                                  />\r\n                              )\r\n                          })\r\n                        : props.data.links.map((dataItem, index) => {\r\n                              return <LinkContainer {...dataItem} key={`link-${dataItem.id}`} />\r\n                          })\r\n                }\r\n                <NodeContainer\r\n                    len = {props.len}\r\n                    data = {props.data.nodes}\r\n                    config = {props.config}\r\n                    isSum={true}\r\n                />\r\n            </svg>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport TimePositionDnet from '../timePositionDnet/timePositionDnet.js'\r\nimport TimeAnimationDnet from '../timeAnimationDnet/timeAnimationDnet.js'\r\nimport TimeSumDnet from '../timeSumDnet/timeSumDnet.js'\r\n\r\nexport default function DnetChartContainer(props) {\r\n    const { sampleWidth,sampleHeight,renderType, markLine, subGraphs, config, len, sumGraphs, isSample = false } = props\r\n    switch (renderType) {\r\n        case 'timeLine':\r\n            return <TimePositionDnet \r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight}\r\n                    markLine={markLine} \r\n                    data={subGraphs} \r\n                    config={config} \r\n                />\r\n        case 'animation':\r\n            return <TimeAnimationDnet\r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight} \r\n                    markLine={markLine} \r\n                    data={subGraphs} \r\n                    sumData={sumGraphs}\r\n                    config={config} \r\n                    isSample={isSample}\r\n                />\r\n        case 'sum':\r\n            return <TimeSumDnet \r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight}\r\n                    len={len} \r\n                    data={sumGraphs} \r\n                    config={config} \r\n                    isSample={isSample}/>\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","import * as d3 from 'd3'\r\nimport { defaultConfigs } from './defaultConfig'\r\nimport * as assign from 'assign-deep'\r\nimport { getInsertPosition } from './dnetChart.js'\r\nimport * as _ from 'lodash'\r\nimport G6 from '@antv/g6'\r\nimport {TASK_CHANGE_TYPES} from './const'\r\nexport const _intersection = (setA, setB) => {\r\n    let intersection = new Set(setA)\r\n    for (let elem of setA) {\r\n        if (!setB.has(elem)) {\r\n            intersection.delete(elem)\r\n        }\r\n    }\r\n    return intersection\r\n}\r\n// setA 减去 setB\r\nexport const _difference = (setA, setB) => {\r\n    let difference = new Set(setA)\r\n    for (let elem of setB) {\r\n        difference.delete(elem)\r\n    }\r\n    return difference\r\n}\r\nexport const _union = (setA, setB) => {\r\n    let union = new Set(setA)\r\n    for (let elem of setB) {\r\n        union.add(elem)\r\n    }\r\n    return union\r\n}\r\nexport const getTimeId = (graphs, times) => {\r\n    window.d3 = d3\r\n    let timeGraphs = {}\r\n    let nodeSet = new Set()\r\n    let linkSet = new Set()\r\n    let timeGraphSet = {}\r\n    let sumGraphs = { nodes: {}, links: {} }\r\n    const l = Object.keys(times).length\r\n\r\n    graphs.forEach((graph) => {\r\n        const time = graph.time\r\n        const timeIndex = times[time]\r\n        timeGraphSet[time] = { nodes: new Set(), links: new Set() }\r\n        timeGraphs[time] = { nodes: {}, links: {} }\r\n        let node2degree = {}\r\n        graph.nodes.forEach((node) => {\r\n            const id = node.id\r\n            const timeId = `${time}-${id}`\r\n            const type = node.type ? node.type : 'ele'\r\n            timeGraphs[time].nodes[id] = {\r\n                ...node,\r\n                type,\r\n                id,\r\n                timeId,\r\n                time,\r\n                status: [],\r\n                timeIndex,\r\n                style: {}\r\n            }\r\n            timeGraphSet[time].nodes.add(id)\r\n            nodeSet.add(id)\r\n            if (!sumGraphs.nodes[id]) {\r\n                let existTimeIndex = new Array(l).fill(0)\r\n                let existTimes = new Array(l).fill('')\r\n                let existStatus = new Array(l).fill(0).map(() => [])\r\n                sumGraphs.nodes[id] = {\r\n                    ...node,\r\n                    id,\r\n                    type,\r\n                    existTimeIndex,\r\n                    existTimes,\r\n                    existStatus,\r\n                    style: {}\r\n                }\r\n            }\r\n            sumGraphs.nodes[id].existTimeIndex[times[time]] = 1\r\n            sumGraphs.nodes[id].existTimes[times[time]] = time\r\n        })\r\n        graph.links.forEach((link) => {\r\n            let { source, target } = link\r\n            if (link.source < link.target) {\r\n                source = link.target\r\n                target = link.source\r\n            }\r\n            if (node2degree[source] === undefined) {\r\n                node2degree[source] = 1\r\n            } else {\r\n                node2degree[source]++\r\n            }\r\n            if (node2degree[target] === undefined) {\r\n                node2degree[target] = 1\r\n            } else {\r\n                node2degree[target]++\r\n            }\r\n            const id = `${source}-${target}`\r\n            const timeId = `${time}-${id}`\r\n            const type = link.type ? link.type : 'ele'\r\n            const sourceTimeId = timeGraphs[time].nodes[source].timeId\r\n            const targetTimeId = timeGraphs[time].nodes[target].timeId\r\n            timeGraphs[time].links[id] = {\r\n                id,\r\n                type,\r\n                timeId,\r\n                source,\r\n                target,\r\n                sourceTimeId,\r\n                targetTimeId,\r\n                time,\r\n                timeIndex,\r\n                status: [],\r\n                style: {}\r\n            }\r\n            linkSet.add(id)\r\n            timeGraphSet[time].links.add(id)\r\n            if (!sumGraphs.links[id]) {\r\n                let existTimeIndex = new Array(l).fill(0)\r\n                let existTimes = new Array(l).fill('')\r\n                let existStatus = new Array(l).fill(0).map(() => [])\r\n                sumGraphs.links[id] = {\r\n                    id,\r\n                    type,\r\n                    source,\r\n                    target,\r\n                    existTimeIndex,\r\n                    existTimes,\r\n                    existStatus,\r\n                    style: {}\r\n                }\r\n            }\r\n            sumGraphs.links[id].existTimeIndex[times[time]] = 1\r\n            sumGraphs.links[id].existTimes[times[time]] = time\r\n        })\r\n        // 给节点赋予度数属性\r\n        for (let nodeId in timeGraphs[time].nodes) {\r\n            timeGraphs[time].nodes[nodeId].degree = node2degree[nodeId]\r\n        }\r\n    })\r\n    return { timeGraphs, nodeSet, linkSet, timeGraphSet, sumGraphs }\r\n}\r\n\r\nexport function adjustLayout2Svg(nodes, links, width, height) {\r\n    let minX = width,\r\n        maxX = -1,\r\n        minY = height,\r\n        maxY = -1,\r\n        ratio\r\n    const margin = 10\r\n    // ratio取x轴和y轴比较小的\r\n    // 找到比例后，先调整节点的坐标，并记录映射值，再调整链接坐标\r\n    nodes.forEach((node) => {\r\n        if (node.x < minX) {\r\n            minX = node.x\r\n        }\r\n        if (node.x > maxX) {\r\n            maxX = node.x\r\n        }\r\n        if (node.y < minY) {\r\n            minY = node.y\r\n        }\r\n        if (node.y > maxY) {\r\n            maxY = node.y\r\n        }\r\n    })\r\n    const ratioX = (maxX - minX) / (width - margin * 2)\r\n    const ratioY = (maxY - minY) / (height - margin * 2)\r\n    ratio = ratioX > ratioY ? ratioX : ratioY\r\n    const translateX = minX - margin\r\n    const translateY = minY - margin\r\n    const nodeId2Coord = {}\r\n    // console.log(\"ratioX,ratioY, ratio,minX,maxX,minY, maxY\", ratioX,ratioY, ratio,minX,maxX,minY, maxY)\r\n    nodes.forEach((node) => {\r\n        // 平移\r\n        node.x -= translateX\r\n        node.y -= translateY\r\n        // 放缩\r\n        node.x = (node.x - margin) / ratio + margin\r\n        node.y = (node.y - margin) / ratio + margin\r\n        nodeId2Coord[node.id] = {\r\n            x: node.x,\r\n            y: node.y\r\n        }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source.x = nodeId2Coord[link.source.id].x\r\n        link.source.y = nodeId2Coord[link.source.id].y\r\n        link.target.x = nodeId2Coord[link.target.id].x\r\n        link.target.y = nodeId2Coord[link.target.id].y\r\n    })\r\n}\r\n\r\nexport const verticalLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const l = nodes.length\r\n    const step = (eachHeight - margin * 2) / l\r\n    let nodesObj = {}\r\n    nodes.forEach((node, index) => {\r\n        node.y = step * index + margin\r\n        node.x = eachWidth / 2\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n}\r\n\r\nexport const bipartiteLayout = (sumGraphs, timeGraphs, configs) => {\r\n    // 处理总图的节点和链接位置\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const len = nodes.length\r\n    const step = (eachHeight - margin * 2) / len\r\n    let firstNodesObj = {}\r\n    let secondNodesObj = {}\r\n    let secondNodes = []\r\n    nodes.forEach((node, index) => {\r\n        node.y = step * index + margin\r\n        node.x = margin\r\n        firstNodesObj[node.id] = node\r\n        let sNode = _.cloneDeep(node)\r\n        sNode.x = eachWidth - margin\r\n        sNode.id = `s-${node.id}`\r\n        secondNodes.push(sNode)\r\n        secondNodesObj[node.id] = sNode\r\n    })\r\n    while (secondNodes.length > 0) {\r\n        let sNode = secondNodes.pop()\r\n        nodes.push(sNode)\r\n    }\r\n    let sumRevertLinksArr = []\r\n    const sumLinksArr = {}\r\n    links.forEach((link) => {\r\n        const souceId = link.source\r\n        const targetId = link.target\r\n        link.source = firstNodesObj[souceId]\r\n        link.target = secondNodesObj[targetId]\r\n        sumLinksArr[link.id] = link\r\n        let sLink = _.cloneDeep(link)\r\n        sLink.id = `s-${link.id}`\r\n        sLink.source = firstNodesObj[targetId]\r\n        sLink.target = secondNodesObj[souceId]\r\n        sumLinksArr[sLink.id] = sLink\r\n        sumRevertLinksArr.push(sLink)\r\n    })\r\n    // 复制一份总图链接\r\n    while(sumRevertLinksArr.length>0){\r\n        const sLink = sumRevertLinksArr.pop()\r\n        links.push(sLink)\r\n    }\r\n    // 处理分帧图的数据\r\n    let timeGraphsValues = Object.values(timeGraphs)\r\n    timeGraphsValues.forEach((graph, graphIndex) => {\r\n        // 1. 给该分帧图的点赋予和总图一样的坐标，与此同时复制一份分帧图的点，并改变其id和坐标\r\n        let sNodesArr = []\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            assign(node, firstNodesObj[node.id])\r\n            let sNode = _.cloneDeep(node)\r\n            sNode.x = eachWidth - margin\r\n            sNode.id = `s-${node.id}`\r\n            sNodesArr.push(sNode)\r\n        })\r\n        // 2. 将复制的点加入到graph中\r\n        while (sNodesArr.length > 0) {\r\n            let sNode = sNodesArr.pop()\r\n            graph.nodes[sNode.id] = sNode\r\n        }\r\n\r\n        let subReverLinksArr=[]\r\n        // 3. 根据总图链接的位置，调整分帧图链接的位置\r\n        Object.values(graph.links).forEach((link) => {\r\n            const revertLink = _.cloneDeep(link)\r\n            assign(link, _.cloneDeep(sumLinksArr[link.id]))\r\n            revertLink.id = `s-${link.id}`\r\n            assign(revertLink, _.cloneDeep(sumLinksArr[revertLink.id]))\r\n            subReverLinksArr.push(revertLink)\r\n        })\r\n        while(subReverLinksArr.length>0){\r\n            const srLink = subReverLinksArr.pop()\r\n            graph.links[srLink.id] = srLink\r\n        }\r\n    })\r\n\r\n    //  平移节点、链接位置\r\n    const tempElement = configs.time.timeLine.element\r\n    if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n        const graphLength = timeGraphsValues.length\r\n        const positionTransMap = getTranslateMap(configs, graphLength)\r\n        if (tempElement === 'node') {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.nodes).forEach((node) => {\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                })\r\n            })\r\n        } else if (tempElement === 'link') {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.links).forEach((link) => {\r\n                    link.source.x += tranX\r\n                    link.target.x += tranX\r\n                    link.source.y += tranY\r\n                    link.target.y += tranY\r\n                })\r\n            })\r\n        } else {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.nodes).forEach((node) => {\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                })\r\n                Object.values(graph.links).forEach((link) => {\r\n                    link.source.x += tranX\r\n                    link.target.x += tranX\r\n                    link.source.y += tranY\r\n                    link.target.y += tranY\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const dagreLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    var graph = new G6.Graph({\r\n        container: 'g6-graph-container',\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        // fitView: true,\r\n        // fitViewPadding: 20,\r\n        layout: {\r\n            type: 'dagre',\r\n            rankdir: 'TB',\r\n            nodeSize: [2, 30],\r\n            nodesep: 1, // 可选\r\n            ranksep: 1 // 可选\r\n        }\r\n    })\r\n    graph.data(data)\r\n    graph.render()\r\n    const { nodes: rNodes } = graph.cfg.data\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const oneMdsLayout = (sumGraphs, timeGraphs, configs) => {\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const { xDistance, yDistance} = configs.time.timeLine\r\n    let { nodes } = sumGraphs\r\n    // 总图的x是居中，y是按value值比例分布。\r\n    // 分帧图是x会产生平移，y也是按比例分布。两者的y坐标都得按比例求\r\n    let valueArr = []\r\n    Object.values(timeGraphs).forEach((graph,graphIndex)=>{\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            valueArr.push(node.value)\r\n        })\r\n    })\r\n    // 建立比例尺，循环nodes赋予节点的y坐标\r\n    const value2y = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(valueArr))\r\n        .range([margin, eachHeight - margin])\r\n    \r\n    nodes.forEach((node)=>{\r\n        node.x = eachWidth/2\r\n        node.y = value2y(node.value)\r\n    })\r\n\r\n    Object.values(timeGraphs).forEach((graph,graphIndex)=>{\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            node.x = eachWidth/2+graphIndex*xDistance\r\n            node.y = value2y(node.value) + graphIndex*yDistance\r\n        })\r\n    })\r\n}\r\n\r\nexport const mdsLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    var graph = new G6.Graph({\r\n        container: 'g6-graph-container',\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        // fitView: true,\r\n        // fitViewPadding: 20,\r\n        layout: {\r\n            type: 'mds'\r\n        }\r\n    })\r\n    graph.data(data)\r\n    graph.render()\r\n    const { nodes: rNodes} = graph.cfg.data\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const gridLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight, layout } = configs.graph\r\n    var graph = new G6.Graph({\r\n        container: 'g6-graph-container',\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        // fitView: true,\r\n        // fitViewPadding: 20,\r\n        layout: {\r\n            type: 'grid',\r\n            begin: [0, 0], // 可选，\r\n            condense: false, // 可选\r\n            rows: layout.grid.rows, // 可选\r\n            sortBy: 'degree'\r\n        }\r\n    })\r\n    graph.data(data)\r\n    graph.render()\r\n    const { nodes: rNodes } = graph.cfg.data\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const circularLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    const radius = Math.min(eachWidth, eachHeight) / 2\r\n    var graph = new G6.Graph({\r\n        container: 'g6-graph-container',\r\n        width: radius * 2,\r\n        height: radius * 2,\r\n        // fitView: true,\r\n        // fitViewPadding: 20,\r\n        layout: {\r\n            type: 'circular',\r\n            radius: radius,\r\n            center: [radius, radius]\r\n        }\r\n    })\r\n    graph.data(data)\r\n    graph.render()\r\n    const { nodes: rNodes } = graph.cfg.data\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const matrixLayout = (sumGraph, timeGraphs, configs) => {\r\n    // nodes复制一份，links被画作node形式，先不管网格线\r\n    let { nodes, links } = sumGraph\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const width = eachWidth < eachHeight ? eachWidth : eachHeight\r\n    const len = nodes.length\r\n    const stepWidth = width / (len + 1)\r\n    let startX = stepWidth / 2 + margin\r\n    let startY = stepWidth / 2 + margin\r\n    // 处理x轴的节点\r\n    let nodeId2Xobj = {}\r\n    nodes.forEach((node, index) => {\r\n        node.y = startY\r\n        node.x = startX + (index + 1) * stepWidth\r\n        nodeId2Xobj[node.id] = { ...node }\r\n    })\r\n\r\n    // 处理y轴的节点\r\n    let yNodes = _.cloneDeep(nodes)\r\n    let nodeId2Yobj = {}\r\n    yNodes.forEach((node, index) => {\r\n        node.x = startX\r\n        node.y = startY + (index + 1) * stepWidth\r\n        nodeId2Yobj[node.id] = { ...node }\r\n        node.id = `y-${node.id}`\r\n        node.timeId = `y-${node.timeId}`\r\n        // 存入node中\r\n        nodes.push(node)\r\n    })\r\n    // 处理链接关系，一条链接在矩阵中会有两个对称的节点\r\n    let linkId2xyNode = {}\r\n    let linkId2yxNode = {}\r\n    links.forEach((link, index) => {\r\n        let linkNodeX2Y = {\r\n            ...link,\r\n            id: `x2y-link-${link.id}`,\r\n            type: 'link-node',\r\n            x: nodeId2Xobj[link.source].x,\r\n            y: nodeId2Yobj[link.target].y\r\n        }\r\n        linkId2xyNode[link.id] = linkNodeX2Y\r\n        let linkNodeY2X = {\r\n            ...link,\r\n            id: `y2x-link-${link.id}`,\r\n            type: 'link-node',\r\n            x: nodeId2Xobj[link.target].x,\r\n            y: nodeId2Yobj[link.source].y\r\n        }\r\n        linkId2yxNode[link.id] = linkNodeY2X\r\n        nodes.push(linkNodeX2Y)\r\n        nodes.push(linkNodeY2X)\r\n    })\r\n    // 添加总图的辅助线。\r\n    sumGraph.links = []\r\n    const sumLinks = sumGraph.links\r\n    for (let i = 0; i < len + 1; i++) {\r\n        sumLinks.push({\r\n            id: `x-grid-${i}`,\r\n            type: 'grid-line',\r\n            source: {\r\n                x: margin,\r\n                y: margin + (i + 1) * stepWidth\r\n            },\r\n            target: {\r\n                x: margin + width,\r\n                y: margin + (i + 1) * stepWidth\r\n            },\r\n            existTimeIndex: [],\r\n            status: [],\r\n            style: {}\r\n        })\r\n        sumLinks.push({\r\n            id: `y-grid-${i}`,\r\n            type: 'grid-line',\r\n            source: {\r\n                x: margin + (i + 1) * stepWidth,\r\n                y: margin\r\n            },\r\n            target: {\r\n                x: margin + (i + 1) * stepWidth,\r\n                y: margin + width\r\n            },\r\n            existTimeIndex: [],\r\n            status: [],\r\n            style: {}\r\n        })\r\n    }\r\n\r\n    // 根据配置、数据长度，拿到唯一的映射表。即每一帧图应该位移多少的映射数组。\r\n    const graphLength = Object.values(timeGraphs).length\r\n    const positionTransMap = getTranslateMap(configs, graphLength)\r\n    // 1 根据总图节点拿到分帧图节点初始位置\r\n    // 2 根据position函数调整位置\r\n    // 3 复制三份节点，赋予初始位置，并根据position函数修改位置\r\n    // 4 将三份节点也放入到分帧图中\r\n    Object.values(timeGraphs).forEach((graph, graphIndex) => {\r\n        const id2Xnode = {}\r\n        const id2Ynode = {}\r\n        const id2LinkNodeX2Y = {}\r\n        const id2LinkNodeY2X = {}\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            assign(node, nodeId2Xobj[node.id])\r\n            // node.x = nodeId2Xobj[node.id].x\r\n            // node.y = nodeId2Xobj[node.id].y\r\n\r\n            // console.log(\"node,configs,positionTransMap[graphIndex]\",node.x,node.y,configs,positionTransMap[graphIndex])\r\n            applyPosition2Node(node, configs, positionTransMap[graphIndex])\r\n\r\n            id2Xnode[node.id] = node\r\n            let yNode = _.cloneDeep(node)\r\n            assign(yNode, nodeId2Yobj[node.id])\r\n            // yNode.x = nodeId2Yobj[node.id].x\r\n            // yNode.y = nodeId2Yobj[node.id].y\r\n            applyPosition2Node(yNode, configs, positionTransMap[graphIndex])\r\n            yNode.id = `y-${node.id}`\r\n            yNode.timeId = `y-${node.timeId}`\r\n            id2Ynode[node.id] = yNode\r\n        })\r\n\r\n        // 得到链接节点\r\n        Object.values(graph.links).forEach((link) => {\r\n            let linkNodeX2Y = {\r\n                ...link,\r\n                id: `x2y-link-${link.id}`,\r\n                type: 'link-node',\r\n                x: id2Xnode[link.source].x,\r\n                y: id2Ynode[link.target].y,\r\n                existTimeIndex: linkId2yxNode[link.id].existTimeIndex,\r\n                existTimes: linkId2yxNode[link.id].existTimes\r\n            }\r\n            id2LinkNodeX2Y[linkNodeX2Y.id] = linkNodeX2Y\r\n            let linkNodeY2X = {\r\n                ...link,\r\n                type: 'link-node',\r\n                id: `y2x-link-${link.id}`,\r\n                x: id2Xnode[link.target].x,\r\n                y: id2Ynode[link.source].y,\r\n                existTimeIndex: linkId2yxNode[link.id].existTimeIndex,\r\n                existTimes: linkId2yxNode[link.id].existTimes\r\n            }\r\n            id2LinkNodeY2X[linkNodeY2X.id] = linkNodeY2X\r\n        })\r\n        // 把节点加入节点中\r\n        for (let key in id2Ynode) {\r\n            graph.nodes[id2Ynode[key].id] = id2Ynode[key]\r\n        }\r\n        for (let id in id2LinkNodeX2Y) {\r\n            graph.nodes[id] = id2LinkNodeX2Y[id]\r\n        }\r\n        for (let id in id2LinkNodeY2X) {\r\n            graph.nodes[id] = id2LinkNodeY2X[id]\r\n        }\r\n\r\n        graph.links = {}\r\n        const graphLinks = graph.links\r\n        for (let i = 0; i < len + 1; i++) {\r\n            const linkX = {\r\n                id: `x-grid-${i}`,\r\n                type: 'grid-line',\r\n                source: {\r\n                    x: margin,\r\n                    y: margin + (i + 1) * stepWidth\r\n                },\r\n                target: {\r\n                    x: margin + width,\r\n                    y: margin + (i + 1) * stepWidth\r\n                },\r\n                existTimeIndex: [],\r\n                status: [],\r\n                style: {}\r\n            }\r\n            applyPosition2Link(linkX, configs, positionTransMap[graphIndex])\r\n            graphLinks[linkX.id] = linkX\r\n            const linkY = {\r\n                id: `y-grid-${i}`,\r\n                type: 'grid-line',\r\n                source: {\r\n                    x: margin + (i + 1) * stepWidth,\r\n                    y: margin\r\n                },\r\n                target: {\r\n                    x: margin + (i + 1) * stepWidth,\r\n                    y: margin + width\r\n                },\r\n                existTimeIndex: [],\r\n                status: [],\r\n                style: {}\r\n            }\r\n            applyPosition2Link(linkY, configs, positionTransMap[graphIndex])\r\n            graphLinks[linkY.id] = linkY\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTranslateMap = (configs, len) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return []\r\n    }\r\n    let { xDistance, yDistance, type } = configs.time.timeLine\r\n    const result = []\r\n    if (type === 'circular') {\r\n        const tNodes = []\r\n        const tLinks = []\r\n        for (let i = 0; i < len; i++) {\r\n            tNodes.push({\r\n                id: i + ''\r\n            })\r\n            tLinks.push({\r\n                source: i + '',\r\n                target: i + 1 === len ? `${i - 2}` : `${i + 1}`\r\n            })\r\n        }\r\n        const data = {\r\n            nodes: tNodes,\r\n            edges: tLinks\r\n        }\r\n        const { eachWidth, eachHeight } = configs.graph\r\n        const eachDis = eachWidth < eachHeight ? eachWidth : eachHeight\r\n        let radius = (eachDis * len) / 5\r\n        var graph = new G6.Graph({\r\n            container: 'g6-graph-container',\r\n            width: radius * 2,\r\n            height: radius * 2,\r\n            // fitView: true,\r\n            // fitViewPadding: 20,\r\n            layout: {\r\n                type: 'circular',\r\n                radius: radius,\r\n                center: [radius, radius]\r\n            }\r\n        })\r\n        graph.data(data)\r\n        graph.render()\r\n        const { nodes: rNodes } = graph.cfg.data\r\n        rNodes.forEach((rNode, index) => {\r\n            result.push({\r\n                x: rNode.x,\r\n                y: rNode.y\r\n            })\r\n        })\r\n    } else {\r\n        for (let i = 0; i < len; i++) {\r\n            result.push({\r\n                x: i * xDistance,\r\n                y: i * yDistance\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\nexport const applyPosition2Link = (link, configs, posTranslate) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return\r\n    }\r\n    let { element } = configs.time.timeLine\r\n    if (element !== 'node') {\r\n        applyPosition2Node(link.source, configs, posTranslate)\r\n        applyPosition2Node(link.target, configs, posTranslate)\r\n    }\r\n}\r\n\r\nexport const applyPosition2Node = (node, configs, posTranslate) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return\r\n    }\r\n    node.x += posTranslate.x\r\n    node.y += posTranslate.y\r\n}\r\n\r\nexport const timeASnode = (graphs) => {\r\n    // 建立时间节点，在每一个图中，与每个节点都建立连接\r\n    graphs.forEach((graph) => {\r\n        graph.nodes.forEach((node) => {\r\n            const source = `time-${graph.time}`\r\n            const target = node.id\r\n            graph.links.push({ source, target, type: 'time' })\r\n        })\r\n        graph.nodes.push({ id: `time-${graph.time}`, type: 'time' })\r\n    })\r\n}\r\nexport const offLineLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    d3.forceSimulation(nodes)\r\n        .force(\r\n            'link',\r\n            d3.forceLink(links).id((d) => d.id)\r\n        )\r\n        .force('charge', d3.forceManyBody())\r\n        .force('center', d3.forceCenter(eachWidth / 2, eachHeight / 2))\r\n        // .stop()\r\n        .tick(40)\r\n        .stop()\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\nexport const assignConfigs = (setConfigs) => {\r\n    let configs = _.cloneDeep(setConfigs)\r\n    let sumConfigs = {}\r\n    assign(sumConfigs, defaultConfigs.basic)\r\n    Object.keys(defaultConfigs).forEach((key) => {\r\n        sumConfigs[key] = {}\r\n    })\r\n    Object.keys(configs).forEach((key) => {\r\n        let encoding = configs[key]\r\n        if (typeof encoding === 'string') {\r\n            //timeLine\r\n            if (key in defaultConfigs) {\r\n                sumConfigs[key][encoding] = _.cloneDeep(defaultConfigs[key][encoding])\r\n            } else {\r\n                sumConfigs[key] = encoding\r\n            }\r\n        } else {\r\n            if (_.isArray(encoding)) {\r\n                // time: ['timeLine', 'insert', 'markLine'],\r\n                encoding.forEach((e) => {\r\n                    if (typeof e === 'string') {\r\n                        sumConfigs[key][e] = _.cloneDeep(defaultConfigs[key][e])\r\n                    } else {\r\n                        const e1 = Object.keys(e)[0]\r\n                        sumConfigs[key][e1] = _.cloneDeep(defaultConfigs[key][e1])\r\n                        assign(sumConfigs[key], e)\r\n                    }\r\n                })\r\n            } else {\r\n                const e = Object.keys(encoding)[0]\r\n                sumConfigs[key][e] = _.cloneDeep(defaultConfigs[key][e])\r\n                assign(sumConfigs[key], encoding)\r\n            }\r\n        }\r\n    })\r\n    if ('layout' in sumConfigs) {\r\n        sumConfigs.layoutName = Object.keys(sumConfigs.layout)[0]\r\n    }\r\n    console.log(defaultConfigs.time.timeLine.element)\r\n    return sumConfigs\r\n}\r\nexport const getmarkLine = (sumGraphs, timeGraphs, configs) => {\r\n    let markLine = {}\r\n    if (configs.time.timeLine.element === 'link') {\r\n        // 处理只平移链接的情况\r\n        Object.values(sumGraphs.nodes).forEach((node) => {\r\n            const { id, existTimes } = node\r\n            markLine[id] = []\r\n            existTimes.forEach((time) => {\r\n                if (time !== '') {\r\n                    const { tx: x, ty: y } = timeGraphs[time].nodes[id]\r\n                    const l = markLine[id].length\r\n                    if (l) {\r\n                        markLine[id][l - 1].target = { x, y }\r\n                    }\r\n                    markLine[id].push({ source: { x, y } })\r\n                }\r\n            })\r\n            markLine[id].pop()\r\n        })\r\n    } else {\r\n        Object.values(sumGraphs.nodes).forEach((node) => {\r\n            const { id, existTimes } = node\r\n            markLine[id] = []\r\n            existTimes.forEach((time) => {\r\n                if (time !== '') {\r\n                    const { x, y } = timeGraphs[time].nodes[id]\r\n\r\n                    const l = markLine[id].length\r\n                    if (l) {\r\n                        markLine[id][l - 1].target = { x, y }\r\n                    }\r\n                    markLine[id].push({ source: { x, y } })\r\n                }\r\n            })\r\n            markLine[id].pop()\r\n        })\r\n    }\r\n\r\n    markLine = getLinkPathData(markLine)\r\n    return markLine\r\n}\r\nexport function getLinkPathData(markLine) {\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const linkPathData = Object.keys(markLine).map((markId, index) => {\r\n        const curveData = []\r\n        markLine[markId].forEach((markLineItem) => {\r\n            curveData.push(link(markLineItem))\r\n        })\r\n        return {\r\n            id: markId,\r\n            data: curveData\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\nexport const getPiePathColor = (len, startColor, endColor) => {\r\n    //设置颜色比例尺\r\n    // let colorScale\r\n    // if (!startColor || !endColor) {\r\n    //     colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    // } else {\r\n    // console.log(\"d3.range(len)\", d3.range(len))\r\n    const colorScale = d3\r\n        .scaleLinear()\r\n        .domain([0, len - 1])\r\n        .range([startColor, endColor])\r\n    // }\r\n    return colorScale\r\n}\r\n\r\nfunction getChooseComparisonStyle(configs) {\r\n    const tempComparison = configs.task.comparison\r\n    const comparisonNode = _.cloneDeep({\r\n        stableNode: tempComparison.stableNode,\r\n        appearNode: tempComparison.appearNode,\r\n        disappearNode: tempComparison.disappearNode\r\n    })\r\n    const basicNodeStyle = _.cloneDeep(configs.graph.nodeStyle)\r\n    const comparisonLink = _.cloneDeep({\r\n        appearLink: tempComparison.appearLink,\r\n        stableLink: tempComparison.stableLink,\r\n        disappearLink: tempComparison.disappearLink\r\n    })\r\n    const basicLinkStyle = _.cloneDeep(configs.graph.linkStyle)\r\n    tempComparison.chooseTypes.forEach((v) => {\r\n        delete basicNodeStyle[v]\r\n        delete basicLinkStyle[v]\r\n    })\r\n    comparisonNode.stableNode = { ...comparisonNode.stableNode, ...basicNodeStyle }\r\n    comparisonNode.appearNode = { ...comparisonNode.appearNode, ...basicNodeStyle }\r\n    comparisonNode.disappearNode = { ...comparisonNode.disappearNode, ...basicNodeStyle }\r\n    comparisonLink.appearLink = { ...comparisonLink.appearLink, ...basicLinkStyle }\r\n    comparisonLink.stableLink = { ...comparisonLink.stableLink, ...basicLinkStyle }\r\n    comparisonLink.disappearLink = { ...comparisonLink.disappearLink, ...basicLinkStyle }\r\n    return {\r\n        comparisonNode,\r\n        comparisonLink\r\n    }\r\n}\r\n\r\nexport const setStyle = (timeGraphs, sumGraphs, configs) => {\r\n    let timeColorObj = {}\r\n    if (configs.time.chooseTypes.indexOf('color') > -1) {\r\n        const times = Object.keys(timeGraphs)\r\n        const l = times.length\r\n        const colorScale = getPiePathColor(\r\n            l,\r\n            configs.time.color.startColor,\r\n            configs.time.color.endColor\r\n        )\r\n        times.forEach((time, i) => {\r\n            timeColorObj[time] = colorScale(i)\r\n        })\r\n    }\r\n    const { comparisonNode, comparisonLink } = getChooseComparisonStyle(configs)\r\n    const basicNodeStyle = configs.graph.nodeStyle\r\n    const basicLinkStyle = configs.graph.linkStyle\r\n\r\n    // 给总图节点添加基本样式\r\n    let { nodes, links } = sumGraphs\r\n    nodes.forEach((node) => {\r\n        if (node.type === 'time') {\r\n            node.style.nodeStyle = configs.time.insert.nodeStyle\r\n        } else {\r\n            node.style.nodeStyle = basicNodeStyle\r\n        }\r\n        if(Array.isArray(node.status)){\r\n            node.status.forEach((d) => {\r\n                if (!comparisonNode[d]) {\r\n                    node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                } else {\r\n                    node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                }\r\n            })\r\n        }\r\n        if (node.type === 'link-node') {\r\n            node.style.nodeStyle = {\r\n                ...basicNodeStyle,\r\n                fillColor: basicLinkStyle.pointFillColor,\r\n                shape: basicLinkStyle.pointShape,\r\n                opacity: basicLinkStyle.pointOpacity\r\n            }\r\n        }\r\n    })\r\n    links.forEach((link) => {\r\n        if (link.type === 'time') {\r\n            link.style.linkStyle = configs.time.insert.linkStyle\r\n        } else {\r\n            link.style.linkStyle = basicLinkStyle\r\n        }\r\n        if(Array.isArray(link.status)){\r\n            link.status.forEach((d) => {\r\n                // 该style是用于comparison这种方式\r\n                link.style[d] = _.cloneDeep(comparisonLink[d])\r\n            })\r\n        }\r\n    })\r\n\r\n    const isChooseColor = !!(configs.time.chooseTypes.indexOf('color') > -1)\r\n    Object.values(timeGraphs).forEach((graph) => {\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            if (node.type === 'time') {\r\n                node.style.nodeStyle = _.cloneDeep({\r\n                    ...basicNodeStyle,\r\n                    ...configs.time.insert.nodeStyle\r\n                })\r\n                node.status.forEach((d) => {\r\n                    if (!comparisonNode[d]) {\r\n                        node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                    } else {\r\n                        node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                    }\r\n                })\r\n                return\r\n            }\r\n            node.style.nodeStyle = basicNodeStyle\r\n            // 如果用color编码了时间，则修改其填充颜色\r\n            // 处理matrix布局中的链接节点\r\n            if (node.type === 'link-node') {\r\n                node.style.nodeStyle = {\r\n                    ...basicNodeStyle,\r\n                    fillColor: basicLinkStyle.pointFillColor\r\n                        ? basicLinkStyle.pointFillColor\r\n                        : '#73C105',\r\n                    shape: basicLinkStyle.pointShape ? basicLinkStyle.pointShape : 'rect',\r\n                    opacity: basicLinkStyle.pointOpacity ? basicLinkStyle.pointOpacity : 0.8\r\n                }\r\n            }\r\n            if (isChooseColor) {\r\n                // 此处需要深复制\r\n                node.style.nodeStyle = _.cloneDeep(node.style.nodeStyle)\r\n                node.style.nodeStyle.fillColor = timeColorObj[node.time]\r\n            }\r\n            node.status.forEach((d) => {\r\n                if (!comparisonNode[d]) {\r\n                    node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                } else {\r\n                    node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                }\r\n            })\r\n        })\r\n        Object.values(graph.links).forEach((link) => {\r\n            if (link.type === 'time') {\r\n                link.style.linkStyle = _.cloneDeep({\r\n                    ...basicLinkStyle,\r\n                    ...configs.time.insert.linkStyle\r\n                })\r\n                return\r\n            }\r\n            link.style.linkStyle = basicLinkStyle\r\n            if (isChooseColor) {\r\n                link.style.linkStyle = _.cloneDeep(basicLinkStyle)\r\n                if (timeColorObj[link.time]) {\r\n                    link.style.linkStyle.strokeColor = timeColorObj[link.time]\r\n                }\r\n            }\r\n            link.status.forEach((d) => {\r\n                // 该style是用于comparison这种方式\r\n                link.style[d] = _.cloneDeep(comparisonLink[d])\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nexport const getGraphLayout = (timeGraphs, sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n\r\n    const { margin } = configs.graph\r\n    const layoutNodes = Object.fromEntries(nodes.map((d) => [d.id, d]))\r\n    const layoutLinks = Object.fromEntries(links.map((d) => [d.id, d]))\r\n    let timeGraphsValues = Object.values(timeGraphs)\r\n\r\n    const isChangeInsertPosition =\r\n        configs.time.chooseTypes.indexOf('insert') > -1 &&\r\n        configs.time.insert.position !== 'origin' &&\r\n        configs.graph.layout.chooseType !== 'matrix'\r\n    if (isChangeInsertPosition) {\r\n        // 改变总图数据中time类型节点的位置\r\n        let timeNodeResult = {}\r\n        for (let node of nodes) {\r\n            if (node.type === 'time') {\r\n                timeNodeResult = getInsertPosition(configs)\r\n                node.x = timeNodeResult.x\r\n                node.y = timeNodeResult.y\r\n            }\r\n        }\r\n        // 改变总图数据中time类型链接的位置\r\n        for (let link of links) {\r\n            if (link.type === 'time') {\r\n                if (link.source.type === 'time') {\r\n                    link.source.x = timeNodeResult.x\r\n                    link.source.y = timeNodeResult.y\r\n                } else {\r\n                    link.target.x = timeNodeResult.x\r\n                    link.target.y = timeNodeResult.y\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 根据配置调整各帧图的位置\r\n    let newNodes = {}\r\n    const tempElement = configs.time.timeLine.element\r\n    const graphLength = timeGraphsValues.length\r\n    const positionTransMap = getTranslateMap(configs, graphLength)\r\n    timeGraphsValues.forEach((graph, graphIndex) => {\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            // 将总图的位置信息复制到各个子图对应节点上\r\n            assign(node, layoutNodes[node.id])\r\n            let { x, y, timeId, id } = node\r\n            // 无论是否选中节点，margin偏移都是要的\r\n            node.x += margin\r\n            node.y += margin\r\n            if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                if (tempElement === 'node') {\r\n                    x = node.x\r\n                    y = node.y\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                } else if (tempElement === 'link') {\r\n                    // 只是链接进行偏移.\r\n                    x = node.x + tranX\r\n                    y = node.y + tranY\r\n                    node.tx = x\r\n                    node.ty = y\r\n                } else {\r\n                    // 都进行偏移\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                    x = node.x\r\n                    y = node.y\r\n                }\r\n            } else {\r\n                x = node.x\r\n                y = node.y\r\n            }\r\n            // 记录偏移后链接端点的位置信息\r\n            newNodes[node.timeId] = { timeId, x, y, id }\r\n        })\r\n    })\r\n    // 根据节点坐标调整链接坐标\r\n    timeGraphsValues.forEach((graph) => {\r\n        Object.values(graph.links).forEach((link) => {\r\n            assign(link, layoutLinks[link.id])\r\n            link.source = { ...newNodes[link.sourceTimeId] }\r\n            link.target = { ...newNodes[link.targetTimeId] }\r\n        })\r\n    })\r\n    // 调整总图sumGraphs的图面边距\r\n    const id2xy = {}\r\n    for (let node of nodes) {\r\n        node.x += margin\r\n        node.y += margin\r\n        id2xy[node.id] = {\r\n            x: node.x,\r\n            y: node.y\r\n        }\r\n    }\r\n    // 调整总图link的边距\r\n    // links的各个link端点之间有重复，\r\n    // 且存在重复引用。因此不能直接给各个link的端点加margin\r\n    for (let link of links) {\r\n        link.source.x = id2xy[link.source.id].x\r\n        link.source.y = id2xy[link.source.id].y\r\n        link.target.x = id2xy[link.target.id].x\r\n        link.target.y = id2xy[link.target.id].y\r\n    }\r\n    return timeGraphs\r\n}\r\nexport const getComparison = () => {}\r\nexport const _dealCompare = (graph, compareGraph, nodeSet, linkSet) => {\r\n    const appearNodes = _intersection(_difference(graph.nodes, compareGraph.nodes), nodeSet)\r\n    const disappearNodes = _intersection(_difference(compareGraph.nodes, graph.nodes), nodeSet)\r\n    const stableNodes = _intersection(_intersection(graph.nodes, compareGraph.nodes), nodeSet)\r\n    const appearLinks = _intersection(_difference(graph.links, compareGraph.links), linkSet)\r\n    const disappearLinks = _intersection(_difference(compareGraph.links, graph.links), linkSet)\r\n    const stableLinks = _intersection(_intersection(graph.links, compareGraph.links), linkSet)\r\n    return {\r\n        appear: { nodes: appearNodes, links: appearLinks },\r\n        disappear: { nodes: disappearNodes, links: disappearLinks },\r\n        stable: { nodes: stableNodes, links: stableLinks }\r\n    }\r\n}\r\n\r\nexport const getCompareData = (\r\n    timeGraphSet,\r\n    nodeSet,\r\n    linkSet,\r\n    keyFrame,\r\n    timeGraphs,\r\n    sumGraphs,\r\n    times\r\n) => {\r\n    const timeArr = Object.keys(timeGraphSet)\r\n    let result = Object.fromEntries(timeArr.map((time) => [time, {}]))\r\n    if (keyFrame === 'last') {\r\n        // 上一帧\r\n        timeArr.forEach((time, index) => {\r\n            // forEach中使用return终端本次循环，并不是所有的。相当于for中的continue\r\n            if (index === 0) return\r\n            const graphSet = timeGraphSet[time]\r\n            const lastTime = timeArr[index - 1]\r\n            const lastGraphSet = timeGraphSet[lastTime]\r\n            const { appear, disappear, stable } = _dealCompare(\r\n                graphSet,\r\n                lastGraphSet,\r\n                nodeSet,\r\n                linkSet\r\n            )\r\n            result[time].appear = appear\r\n            result[lastTime].disappear = disappear\r\n            result[lastTime].stable = stable\r\n        })\r\n    } else if (keyFrame === 'next') {\r\n        // 下一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === timeArr.length - 1) return\r\n            const graphSet = timeGraphSet[time]\r\n            const nextTime = timeArr[index + 1]\r\n            const nextGraphSet = timeGraphSet[nextTime]\r\n            const { appear, disappear, stable } = _dealCompare(\r\n                nextGraphSet,\r\n                graphSet,\r\n                nodeSet,\r\n                linkSet\r\n            )\r\n            result[nextTime].appear = appear\r\n            result[time].disappear = disappear\r\n            result[time].stable = stable\r\n        })\r\n    } else {\r\n        // 具体到某一帧\r\n        timeArr.forEach((time) => {\r\n            const graphSet = timeGraphSet[time]\r\n            result[time] = _dealCompare(graphSet, timeGraphSet[keyFrame], nodeSet, linkSet)\r\n        })\r\n    }\r\n\r\n    // 最外层的循环是以time为维度，循环\r\n    timeArr.forEach((time) => {\r\n        // 是3种状态：appear\\disappear\\stable为维度进行循环\r\n        Object.keys(result[time]).forEach((status) => {\r\n            const { nodes, links } = result[time][status]\r\n            nodes.forEach((id) => {\r\n                const s = status + 'Node'\r\n                timeGraphs[time].nodes[id].status.push(s)\r\n                sumGraphs.nodes[id].existStatus[times[time]].push(s)\r\n            })\r\n            links.forEach((id) => {\r\n                const s = status + 'Link'\r\n                timeGraphs[time].links[id].status.push(s)\r\n                sumGraphs.links[id].existStatus[times[time]].push(s)\r\n            })\r\n        })\r\n        Object.values(timeGraphs[time].nodes).forEach((node) => {\r\n            if (!node.status.length) {\r\n                node.status.push('stableNode')\r\n                sumGraphs.nodes[node.id].existStatus[times[time]].push('stableNode')\r\n            }\r\n        })\r\n        Object.values(timeGraphs[time].links).forEach((link) => {\r\n            if (!link.status.length) {\r\n                link.status.push('stableLink')\r\n                sumGraphs.links[link.id].existStatus[times[time]].push('stableLink')\r\n            }\r\n        })\r\n    })\r\n    return timeGraphs\r\n}\r\n\r\nexport const getShortestDistance = (matrix, start) => {\r\n    const rows = matrix.length,//rows和cols一样，其实就是顶点个数\r\n        cols = matrix[0].length\r\n \r\n    if(rows !== cols || start >= rows) return new Error(\"邻接矩阵错误或者源点错误\")\r\n \r\n    //初始化distance\r\n    let distance = new Array(rows).fill(Infinity)\r\n    // 记录逐渐加入点集的过程\r\n    // 初始化访问节点\r\n    let visited = new Array(rows).fill(false)\r\n    distance[start] = 0\r\n    for(let i = 0; i < rows; i++) {\r\n        // 更新节点访问\r\n        visited[start] = true\r\n        // 达到不了的顶点不能作为中转跳点\\\r\n        for(let j = 0; j < cols; j++) {\r\n            //通过比较distance[start] + matrix[start][j]和distance[j]的大小来决定是否更新distance[j]。\r\n            if(matrix[start][j]!==0&&(matrix[start][j] + distance[start] < distance[j])) {\r\n                distance[j] = matrix[start][j] + distance[start]\r\n            }\r\n        }\r\n        \r\n        // 找到当前最短路径顶点作为中转跳点\r\n        let minIndex = -1;\r\n        let min = Infinity;\r\n        for(let k = 0; k < rows; k++) {\r\n            if ((!visited[k]) && distance[k] < min) {\r\n                min = distance[k];\r\n                minIndex = k;\r\n            }\r\n        }\r\n        \r\n        if(minIndex!==-1){\r\n            start = minIndex\r\n        }else{\r\n            break\r\n        }\r\n    }\r\n    return distance;\r\n}\r\n\r\nexport const getShortestPath = (matrix, startIndex, endIndex)=>{\r\n    let visited = new Array(matrix.length).fill(false);\r\n    let shortestPath = []\r\n    let shortestDistance = Infinity\r\n    let distance = 0\r\n    let tempPath = []\r\n    visited[startIndex] = true\r\n    tempPath.push(startIndex)\r\n    function Dfs(startIndex){\r\n        for(let i=0;i<matrix[startIndex].length;i++){\r\n            if(visited[i]===false&&matrix[startIndex][i]===1){\r\n                distance++\r\n                tempPath.push(i)\r\n                visited[i]=true\r\n                if(i === endIndex){\r\n                    if(distance<shortestDistance){\r\n                        shortestDistance = distance\r\n                        shortestPath = [...tempPath]\r\n                    }\r\n                }else{\r\n                    Dfs(i)\r\n                }\r\n                distance--\r\n                visited[i] = false\r\n                tempPath.pop()\r\n            }\r\n        }\r\n    }\r\n    Dfs(startIndex)\r\n    return shortestPath\r\n}\r\n\r\nexport const getLongestPath = (matrix, startIndex, endIndex)=>{\r\n    let visited = new Array(matrix.length).fill(false);\r\n    let shortestPath = []\r\n    let shortestDistance = Infinity\r\n    let distance = 0\r\n    let tempPath = []\r\n    visited[startIndex] = true\r\n    tempPath.push(startIndex)\r\n    function Dfs(startIndex){\r\n        for(let i=0;i<matrix[startIndex].length;i++){\r\n            if(visited[i]===false&&matrix[startIndex][i]===1){\r\n                distance++\r\n                tempPath.push(i)\r\n                visited[i]=true\r\n                if(i === endIndex){\r\n                    if(distance<shortestDistance){\r\n                        shortestDistance = distance\r\n                        shortestPath = [...tempPath]\r\n                    }\r\n                }else{\r\n                    Dfs(i)\r\n                }\r\n                distance--\r\n                visited[i] = false\r\n                tempPath.pop()\r\n            }\r\n        }\r\n    }\r\n    Dfs(startIndex)\r\n    return shortestPath\r\n}\r\n\r\nexport const getFindData = (timeGraphs, configs,sumGraphs) => {\r\n    const {find: findOptions, pattern} = configs.task\r\n    if (configs.task.basedType === 'structure') {\r\n        if(pattern === 'dumb-bell'){\r\n        // if(findOptions.structure === 'dumb-bell'){\r\n            // 找结构，现在是假定是找这种类似于哑铃的形态结构。\r\n            for (let timeId in timeGraphs) {\r\n                const graph = timeGraphs[timeId]\r\n                for (let linkId in graph.links) {\r\n                    const link = graph.links[linkId]\r\n                    if (\r\n                        graph.nodes[link.source].degree === 1 &&\r\n                        graph.nodes[link.target].degree === 1\r\n                    ) {\r\n                        link.status.push('appearLink')\r\n                        graph.nodes[link.source].status.push('appearNode')\r\n                        graph.nodes[link.target].status.push('appearNode')\r\n                    }\r\n                }\r\n            }\r\n        // }else if(findOptions.structure==='shortest-path'){\r\n        }else if(pattern === 'shortest-path'){\r\n            let startIndex = 0\r\n            const mapId2Index = {}\r\n            const mapIndex2Id = []\r\n            const {nodes, links} = sumGraphs\r\n            Object.values(nodes).forEach((node)=>{\r\n                if(mapId2Index[node.id]===undefined){\r\n                    mapId2Index[node.id] = startIndex\r\n                    mapIndex2Id[startIndex] = node.id\r\n                    startIndex ++\r\n                }\r\n            })\r\n            let matrix = new Array(startIndex)\r\n            for(let i=0;i<matrix.length;i++){\r\n                matrix[i] = new Array(startIndex).fill(0)\r\n            }\r\n            Object.values(links).forEach((link)=>{\r\n                let sourceIndex = mapId2Index[link.source]\r\n                let targetIndex = mapId2Index[link.target]\r\n                matrix[sourceIndex][targetIndex] = 1\r\n                matrix[targetIndex][sourceIndex] = 1\r\n            })\r\n            let sIndex =0 ,eIndex = 0\r\n            let dis = -1\r\n            for(let i=0;i<startIndex;i++){\r\n                const distanceArr = getShortestDistance(matrix, i)\r\n                // 求出单源最短路径中的最长的那一个\r\n                let endIndex = i \r\n                let maxDistance = distanceArr[i]\r\n                distanceArr.forEach((v,index)=>{\r\n                    if(v!==Infinity&&v>maxDistance){\r\n                        endIndex = index\r\n                        maxDistance = v\r\n                    }\r\n                })\r\n                if(maxDistance>dis){\r\n                    dis = maxDistance\r\n                    sIndex = i\r\n                    eIndex = endIndex\r\n                }\r\n            }\r\n\r\n            const shortestPath = getShortestPath(matrix,sIndex,eIndex)\r\n            const nodeInPathMap = {}\r\n            const linkInPathMap = {}\r\n            shortestPath.forEach((v,i)=>{\r\n                const aId = mapIndex2Id[v]\r\n                nodeInPathMap[aId] = true\r\n                if(i!==0){\r\n                    const bId = mapIndex2Id[shortestPath[i-1]]\r\n                    linkInPathMap[`${aId}-${bId}`] = true\r\n                    linkInPathMap[`${bId}-${aId}`] = true\r\n                }\r\n            })\r\n\r\n            // 修改总图中的状态\r\n            for(let linkId in links){\r\n                if(linkInPathMap[linkId]===true){\r\n                    links[linkId].status = ['appearLink']\r\n                }\r\n            }\r\n            for(let nodeId in nodes) {\r\n                if(nodeInPathMap[nodeId] === true){\r\n                    nodes[nodeId].status = ['appearNode']\r\n                }\r\n            }\r\n\r\n            // 修改分帧图中的状态\r\n            for (let timeId in timeGraphs) {\r\n                const graph = timeGraphs[timeId]\r\n                for (let linkId in graph.links) {\r\n                    if(linkInPathMap[linkId]===true){\r\n                        graph.links[linkId].status.push('appearLink')\r\n                    }\r\n                }\r\n                for(let nodeId in graph.nodes) {\r\n                    if(nodeInPathMap[nodeId] === true){\r\n                        graph.nodes[nodeId].status.push('appearNode')\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    } else {\r\n        const { attr, relation, value } = findOptions\r\n            ? findOptions\r\n            : {\r\n                  attr: 'degree',\r\n                  relation: '>=',\r\n                  value: 3\r\n              }\r\n        for (let timeId in timeGraphs) {\r\n            const graph = timeGraphs[timeId]\r\n            for (let nodeId in graph.nodes) {\r\n                const node = graph.nodes[nodeId]\r\n                switch (relation) {\r\n                    case '>=':\r\n                        if (node[attr] >= value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                    case '<=':\r\n                        if (node[attr] <= value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                    default:\r\n                        if (node[attr] === value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const filterDataFromChange = (timeGraphs, sumGraphs, configs) =>{\r\n    const { change, taskType } = configs.task\r\n    \r\n    if(!change||taskType === 'none'){\r\n        return\r\n    }\r\n    // 都有就不处理了直接返回\r\n    if(change.length === TASK_CHANGE_TYPES.length){\r\n        return\r\n    }\r\n    // 没有change时，啥都不绘制\r\n    if(change.length === 0){\r\n        sumGraphs.nodes = []\r\n        sumGraphs.links = []\r\n        for(let graph in timeGraphs){\r\n            delete(timeGraphs[graph])\r\n        }\r\n        return \r\n    }\r\n\r\n    const changeOptionsToStatus = {\r\n        'appearNode':false,\r\n        'stableNode': false,\r\n        'disappearNode': false,\r\n        'appearLink':false,\r\n        'stableLink': false,\r\n        'disappearLink': false,\r\n    }\r\n    for(let i=0;i<change.length;i++){\r\n        switch(change[i]){\r\n            case 'appearedNode':\r\n                changeOptionsToStatus['appearNode'] = true\r\n                break\r\n            case 'unchangedNode':\r\n                changeOptionsToStatus['stableNode'] = true\r\n                break\r\n            case 'disappearedNode':\r\n                changeOptionsToStatus['disappearNode'] = true\r\n                break\r\n            case 'appearedEdge':\r\n                changeOptionsToStatus['appearLink'] = true\r\n                break\r\n            case 'unchangedEdge':\r\n                changeOptionsToStatus['stableLink'] = true\r\n                break\r\n            case 'disappearedEdge':\r\n                changeOptionsToStatus['disappearLink'] = true\r\n                break  \r\n            default:\r\n                break\r\n        }\r\n    }\r\n    // console.log(\"----change--changeOptionsToStatus\",change,changeOptionsToStatus)\r\n    // console.log(\"changeOptionsToStatus\",changeOptionsToStatus)\r\n    let { nodes, links } = sumGraphs\r\n    // 依据元素的status和changeOptionsToStatus去进行数据过滤\r\n    // status如果没有东西的话，那默认就是unchanged\r\n    // 如果status里面有两种状态的话。一个有一个没有的话，status就删除那个没有的\r\n\r\n    //过滤总图的节点\r\n    for(let i = 0;i<nodes.length;){\r\n        let node = nodes[i]\r\n        if(Array.isArray(node.status)){\r\n            if(node.status.length >=2){\r\n                for(let j =0;j<node.status.length;){\r\n                    if(changeOptionsToStatus[node.status[j]]===false){\r\n                        node.status.splice(j,1)\r\n                    }else{\r\n                        j++\r\n                    }\r\n                }\r\n                if(node.status.length===0){\r\n                    //删除掉该节点\r\n                    nodes.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else if (node.status.length===1){\r\n                if(changeOptionsToStatus[node.status[0]] === false){\r\n                    nodes.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else{\r\n                if(changeOptionsToStatus['stableNode']){\r\n                    i++\r\n                }else{\r\n                    nodes.splice(i,1)\r\n                }\r\n            }\r\n        }else{\r\n            //无状态，即是stabledNode\r\n            if(changeOptionsToStatus['stableNode']){\r\n                i++\r\n            }else{\r\n                nodes.splice(i,1)\r\n            }\r\n        }\r\n    }\r\n    // 过滤总图的连接\r\n    for(let i = 0;i<links.length;){\r\n        let link = links[i]\r\n        if(link.type==='grid-line'){\r\n            i++\r\n            continue\r\n        }\r\n        if(Array.isArray(link.status)){\r\n            if(link.status.length >=2){\r\n                for(let j =0;j<link.status.length;){\r\n                    if(changeOptionsToStatus[link.status[j]]===false){\r\n                        link.status.splice(j,1)\r\n                    }else{\r\n                        j++\r\n                    }\r\n                }\r\n                if(link.status.length===0){\r\n                    //删除掉该节点\r\n                    links.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else if (link.status.length===1){\r\n                if(changeOptionsToStatus[link.status[0]] === false){\r\n                    links.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else{\r\n                if(changeOptionsToStatus['stableLink']){\r\n                    i++\r\n                }else{\r\n                    links.splice(i,1)\r\n                }\r\n            }\r\n        }else{\r\n            //无状态，即是stabledNode\r\n            if(changeOptionsToStatus['stableLink']){\r\n                i++\r\n            }else{\r\n                links.splice(i,1)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 过滤分帧图的节点和链接\r\n    Object.values(timeGraphs).forEach((graph) => {\r\n        for(let nodeKey in graph.nodes){\r\n            let node = graph.nodes[nodeKey]\r\n            if(Array.isArray(node.status)){\r\n                if(node.status.length >=2){\r\n                    for(let j =0;j<node.status.length;){\r\n                        if(changeOptionsToStatus[node.status[j]]===false){\r\n                            node.status.splice(j,1)\r\n                        }else{\r\n                            j++\r\n                        }\r\n                    }\r\n                    if(node.status.length===0){\r\n                        //删除掉该节点\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }else if (node.status.length===1){\r\n                    if(changeOptionsToStatus[node.status[0]] === false){\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }else{\r\n                    if(!changeOptionsToStatus['stableNode']){\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }\r\n            }else{\r\n                //无状态，即是stabledNode\r\n                if(!changeOptionsToStatus['stableNode']){\r\n                    delete graph.nodes[nodeKey]\r\n                }\r\n            }\r\n        }\r\n        for(let linkKey in graph.links){\r\n            let link = graph.links[linkKey]\r\n            if(link.type==='grid-line'){\r\n                continue\r\n            }\r\n            if(Array.isArray(link.status)){\r\n                if(link.status.length >=2){\r\n                    for(let j =0;j<link.status.length;){\r\n                        if(changeOptionsToStatus[link.status[j]]===false){\r\n                            link.status.splice(j,1)\r\n                        }else{\r\n                            j++\r\n                        }\r\n                    }\r\n                    if(link.status.length===0){\r\n                        //删除掉该节点\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }else if (link.status.length===1){\r\n                    if(changeOptionsToStatus[link.status[0]] === false){\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }else{\r\n                    if(!changeOptionsToStatus['stableLink']){\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }\r\n            }else{\r\n                //无状态，即是stabledNode\r\n                if(!changeOptionsToStatus['stableLink']){\r\n                    delete graph.links[linkKey]\r\n                }\r\n            }\r\n        }\r\n        \r\n    })\r\n\r\n\r\n}\r\nexport const compareTwoFrameAboutAttr = (localFrame, compareFrame) => {\r\n    const compareNodesDegree = {}\r\n    for (let nodeId in compareFrame.nodes) {\r\n        compareNodesDegree[nodeId] = compareFrame.nodes[nodeId].degree\r\n    }\r\n    for (let nodeId in localFrame.nodes) {\r\n        const localDegree = localFrame.nodes[nodeId].degree\r\n        if (compareNodesDegree[nodeId] === undefined || compareNodesDegree[nodeId] < localDegree) {\r\n            localFrame.nodes[nodeId].status.push('appearNode')\r\n        } else if (compareNodesDegree[nodeId] === localDegree) {\r\n            localFrame.nodes[nodeId].status.push('stableNode')\r\n        } else if (compareNodesDegree[nodeId] > localDegree) {\r\n            localFrame.nodes[nodeId].status.push('disappearNode')\r\n        }\r\n    }\r\n}\r\n\r\nexport const dealCompareAttr = (timeGraphs, task) => {\r\n    const timeArr = Object.keys(timeGraphs)\r\n    const keyFrame = task.comparison.keyFrame\r\n    if (keyFrame === 'last') {\r\n        // 上一帧\r\n        timeArr.forEach((time, index) => {\r\n            // forEach中使用return终端本次循环，并不是所有的。相当于for中的continue\r\n            if (index === 0) return\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[index - 1]])\r\n        })\r\n    } else if (keyFrame === 'next') {\r\n        // 下一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === timeArr.length - 1) return\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[index + 1]])\r\n        })\r\n    } else {\r\n        // 具体到某一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === keyFrame) {\r\n                return\r\n            }\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[keyFrame]])\r\n        })\r\n    }\r\n}\r\n","// import { link, NetV } from './NetV'\r\nimport * as u from './dealfun'\r\nimport * as _lodash from 'lodash'\r\nclass DNetV {\r\n    constructor() {\r\n        this.elementsName = []\r\n        this.nodeSet = new Set()\r\n        this.linkSets = new Set()\r\n        this.timeGraphs = {}\r\n        this.timeGraphSet = {}\r\n        this.markLine = undefined\r\n    }\r\n    initData(setData, setConfigs) {\r\n        this.elementsName = ['nodes', 'links'] //元素：点、边\r\n        // 建立从times到index的对象映射\r\n        this.times = Object.fromEntries(setData.map((d, index) => [d.time, index])) //时间：key值\r\n        this.configs = setConfigs\r\n        this.oldData = setData\r\n        this.data = _lodash.cloneDeep(setData)\r\n        \r\n        // 判断如果configs的time中如果选择了insert，就执行timeASnode，给graph添加代表时间的节点\r\n        if(this.configs.time.chooseTypes.indexOf('insert') > -1){\r\n            u.timeASnode(this.data)\r\n        }\r\n\r\n        // console.log(\"this.data\",this.data)\r\n        // 建立最初数据结构\r\n        let { timeGraphs, nodeSet, linkSet, timeGraphSet, sumGraphs } = u.getTimeId(\r\n            this.data,\r\n            this.times\r\n        )\r\n\r\n        this.timeGraphs = timeGraphs\r\n        this.timeGraphSet = timeGraphSet\r\n        this.sumGraphs = sumGraphs\r\n        this.nodeSet = nodeSet\r\n        this.linkSet = linkSet\r\n\r\n        const { graph, time, task} = this.configs\r\n\r\n        // 处理和任务分析相关的逻辑\r\n        this.dealTask(task)\r\n        \r\n        this.sumGraphs.nodes = Object.values(this.sumGraphs.nodes)\r\n        this.sumGraphs.links = Object.values(this.sumGraphs.links)\r\n\r\n        // 依据layout的配置去赋予位置信息\r\n        this.dealLayout(graph.layout.chooseType ? graph.layout.chooseType : 'forceDirect')\r\n        // 根据time中的是否选择了markLine而决定是否要去计算markLine的数据\r\n        \r\n        this.markLine = time.chooseTypes.indexOf('markLine') > -1\r\n            ? u.getmarkLine(this.sumGraphs, this.timeGraphs, this.configs)\r\n            : undefined\r\n            \r\n        // 在布局确定之后再去，过滤数据。不然数据先过滤了，会影响布局\r\n        u.filterDataFromChange(this.timeGraphs, this.sumGraphs, this.configs)\r\n\r\n        // 根据配置信息中：样式，以及time，以及comparison信息，去设定样式\r\n        u.setStyle(this.timeGraphs, this.sumGraphs, this.configs)\r\n        this.subGraphs = Object.values(this.timeGraphs).map((v) => ({\r\n            links: Object.values(v.links),\r\n            nodes: Object.values(v.nodes)\r\n        }))\r\n    }\r\n\r\n    dealTask(task){\r\n        // 依据配置，给数据赋予3种状态的信息。这个应该根据config去判断要不要赋予\r\n        if(task.taskType === 'comparison'){\r\n            //函数里面直接改了timeGraphs、sumGraphs\r\n            if(task.basedType === 'structure'){\r\n                this.dealCompareData([{ times: 'all', nodes: 'all', links: 'all', keyFrame: task.comparison.keyFrame }]) \r\n            }else if(task.basedType === 'attr'){\r\n                u.dealCompareAttr(this.timeGraphs, task)\r\n            }\r\n        }else if(task.taskType === 'find'){\r\n            //函数里面直接改了timeGraphs、sumGraphs\r\n            u.getFindData(this.timeGraphs, this.configs, this.sumGraphs) //函数里面直接改了timeGraphs\r\n        }\r\n    }\r\n    dealLayout(layout = 'forceDirect') {\r\n        // 先根据sumGraphs获得布局信息\r\n        if(layout === 'matrix'){\r\n            u.matrixLayout(this.sumGraphs, this.timeGraphs,this.configs)\r\n        }else if(layout === 'bipartite'){\r\n            u.bipartiteLayout(this.sumGraphs, this.timeGraphs, this.configs)\r\n        }else if(layout === 'oneMds'&&this.sumGraphs.nodes[0].value!==undefined){\r\n            u.oneMdsLayout(this.sumGraphs, this.timeGraphs,this.configs)\r\n        }else{  \r\n            switch (layout){\r\n                case 'forceDirect':\r\n                    u.offLineLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'vertical':\r\n                    u.verticalLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'circular':\r\n                    u.circularLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'dagre':\r\n                    u.dagreLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'mds':\r\n                    u.mdsLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'grid':\r\n                    u.gridLayout(this.sumGraphs, this.configs)\r\n                    break \r\n                default:\r\n                    u.offLineLayout(this.sumGraphs, this.configs)\r\n            }\r\n            // 将位置信息放入每个子图中，并根据time调整位置\r\n            u.getGraphLayout(this.timeGraphs, this.sumGraphs, this.configs)\r\n        }\r\n    }\r\n\r\n    dealCompareData(configs) {\r\n        configs.forEach((d) => {\r\n            const { times, nodes, links, keyFrame } = d\r\n            const timeSet = times === 'all' ? new Set(Object.keys(this.times)) : new Set(times)\r\n            const nodeSet = nodes === 'all' ? this.nodeSet : new Set(nodes)\r\n            const linkSet = links === 'all' ? this.linkSet : new Set(links)\r\n            let timeGraphSet = {}\r\n            // this.timeGraphSet中有的放到timeGraphSet中\r\n            Object.keys(this.timeGraphSet).forEach((time) => {\r\n                if (timeSet.has(time)) {\r\n                    timeGraphSet[time] = this.timeGraphSet[time]\r\n                }\r\n            })\r\n            // 给timeGraphs和sumGraphs赋予3种状态的信息\r\n            u.getCompareData(\r\n                timeGraphSet,\r\n                nodeSet,\r\n                linkSet,\r\n                keyFrame,\r\n                this.timeGraphs,\r\n                this.sumGraphs,\r\n                this.times\r\n            ) //函数里面直接改了timeGraphs\r\n        })\r\n    } \r\n\r\n    end(simulation) {\r\n        return new Promise((resolve) => {\r\n            simulation.on('end', resolve)\r\n        })\r\n    }\r\n}\r\n\r\nexport default () => {\r\n    const dnetv = new DNetV()\r\n    return dnetv\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { converObject2Array } from '../../util/preview.js'\r\nimport DnetChartContainer from '../dnetCharts/dnetChartContainer/dnetChartContainer.js'\r\nimport dnetv from '../../util/dnetv.js'\r\nimport { getRenderType } from '../../util/dnetChart'\r\n\r\nexport default function PreviewItem(props) {\r\n    // 要计算\r\n    const [subGraphs, setSubGraphs] = useState([])\r\n    const [sumGraphs, setSumGraphs] = useState({ nodes: [], links: [] })\r\n    const [markLine, setMarkLine] = useState({})\r\n    const [renderType, setRenderType] = useState('')\r\n    useEffect(() => {\r\n        if (props.data.length>0) {\r\n            let dnetvInstance = dnetv()\r\n            dnetvInstance.initData(props.data, props.config)\r\n            setSubGraphs(converObject2Array(dnetvInstance.timeGraphs))\r\n            setMarkLine(dnetvInstance.markLine)\r\n            setSumGraphs(dnetvInstance.sumGraphs)\r\n        }\r\n    }, [props.config, props.data])\r\n\r\n    useEffect(() => {\r\n        if (props.data.length>0) {\r\n            setRenderType(getRenderType(props.config.time.chooseTypes))\r\n        } else {\r\n            setRenderType('')\r\n        }\r\n    }, [props.data, props.config.time.chooseTypes])\r\n    if(props.data.length===0)return null\r\n    return (\r\n        <DnetChartContainer\r\n            sampleWidth = {props.sampleWidth}\r\n            sampleHeight = {props.sampleHeight}\r\n            isSample={true}\r\n            renderType={renderType}\r\n            subGraphs={subGraphs}\r\n            sumGraphs={sumGraphs}\r\n            config={props.config}\r\n            len={subGraphs.length}\r\n            markLine={markLine}\r\n        />\r\n    )\r\n}\r\n","import * as d3 from 'd3'\r\n\r\n// 返回值是 {subgraphs, sumgraphs}\r\nexport function dealData(originData, width, height) {\r\n    // console.log('dealData---', width, height)\r\n    const sumGraphs = getLayout(originData, width, height)\r\n    const subGraphs = assignPos(originData, sumGraphs)\r\n    return { sumGraphs, subGraphs }\r\n}\r\n\r\n// 将所有图的点和边合并到一起，求出每个点和边的相对布局位置\r\nfunction getLayout(originData, width, height) {\r\n    let nodes = []\r\n    let links = []\r\n    let nodeSets = new Set()\r\n    let linkSets = new Set()\r\n    originData.forEach((graph, i) => {\r\n        graph.nodes.forEach((node) => {\r\n            nodeSets.add(node.id)\r\n        })\r\n        graph.links.forEach((link, j) => {\r\n            let { source, target } = link\r\n            if (links.source < links.target) {\r\n                source = link.target\r\n                target = links.source\r\n            }\r\n            const id = `${source}-${target}`\r\n            linkSets.add(id)\r\n        })\r\n    })\r\n    nodeSets.forEach((id) => {\r\n        nodes.push({ id })\r\n    })\r\n    linkSets.forEach((link) => {\r\n        const s = link.split('-')\r\n        const source = s[0]\r\n        const target = s[1]\r\n        links.push({ source, target })\r\n    })\r\n    d3.forceSimulation(nodes)\r\n        .force(\r\n            'link',\r\n            d3.forceLink(links).id((d) => d.id)\r\n        )\r\n        .force('charge', d3.forceManyBody())\r\n        .force('center', d3.forceCenter(width / 2, height / 2))\r\n        .tick(10)\r\n        .stop()\r\n    return { nodes, links }\r\n}\r\n\r\n// 给子图添加位置，给总图添加节点和链接随时间分布情况\r\nfunction assignPos(originData, sumGraphs) {\r\n    let idPos = {}\r\n    // 建立从id到节点的映射\r\n    sumGraphs.nodes.forEach((node) => {\r\n        idPos[node.id] = node\r\n    })\r\n    let node2Array = {}\r\n    let link2Array = {}\r\n    // 每一个time下每个点的位置,同时新建图，每个node在不同时间下id不一样\r\n    const subGraphs = originData.map((graph, index) => {\r\n        const nodes = graph.nodes.map((node) => {\r\n            const id = node.id\r\n            const x = idPos[node.id].x\r\n            const y = idPos[node.id].y\r\n            const time = index\r\n            if (!node2Array[id]) {\r\n                node2Array[id] = new Array(index + 1).fill(0)\r\n            } else {\r\n                while (node2Array[id].length < index + 1) {\r\n                    node2Array[id].push(0)\r\n                }\r\n            }\r\n            node2Array[id][index] = 1\r\n            return { id, x, y, time }\r\n        })\r\n        const links = graph.links.map((link) => {\r\n            const sourcePos = idPos[link.source]\r\n            const targetPos = idPos[link.target]\r\n            const source = {\r\n                id: link.source,\r\n                x: sourcePos.x,\r\n                y: sourcePos.y\r\n            }\r\n            const target = {\r\n                id: link.target,\r\n                x: targetPos.x,\r\n                y: targetPos.y\r\n            }\r\n            const time = index\r\n            const id = `${link.source}-${link.target}`\r\n            if (!link2Array[id]) {\r\n                link2Array[id] = new Array(index + 1).fill(0)\r\n            } else {\r\n                while (link2Array[id].length < index + 1) {\r\n                    link2Array[id].push(0)\r\n                }\r\n            }\r\n            link2Array[id][index] = 1\r\n            return {\r\n                source,\r\n                target,\r\n                time,\r\n                id\r\n            }\r\n        })\r\n        return { nodes, links }\r\n    })\r\n\r\n    const graphLength = originData.length\r\n    for (let key in node2Array) {\r\n        while (node2Array[key].length < graphLength) {\r\n            node2Array[key].push(0)\r\n        }\r\n    }\r\n    for (let key in link2Array) {\r\n        while (link2Array[key].length < graphLength) {\r\n            link2Array[key].push(0)\r\n        }\r\n    }\r\n    sumGraphs.nodes.forEach((node) => {\r\n        node.exsitStatus = node2Array[node.id]\r\n    })\r\n    sumGraphs.links.forEach((link) => {\r\n        link.id = `${link.source.id}-${link.target.id}`\r\n        link.exsitStatus = link2Array[link.id]\r\n    })\r\n    return subGraphs\r\n}\r\n\r\n// 将对象数据转化为数组数据\r\nexport function converObject2Array(data) {\r\n    return Object.values(data).map((v) => {\r\n        return {\r\n            links: Object.values(v.links),\r\n            nodes: Object.values(v.nodes)\r\n        }\r\n    })\r\n}\r\n\r\n// 求交集\r\nfunction intersection(setA, setB) {\r\n    let _intersection = new Set(setA)\r\n    for (let elem of setA) {\r\n        if (!setB.has(elem)) {\r\n            _intersection.delete(elem)\r\n        }\r\n    }\r\n    return _intersection\r\n}\r\n\r\n// setA 减去 setB\r\nfunction difference(setA, setB) {\r\n    let _difference = new Set(setA)\r\n    for (let elem of setB) {\r\n        _difference.delete(elem)\r\n    }\r\n    return _difference\r\n}\r\n\r\nfunction union(setA, setB) {\r\n    let _union = new Set(setA)\r\n    for (let elem of setB) {\r\n        _union.add(elem)\r\n    }\r\n    return _union\r\n}\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport PreviewItem from '../previewItem/previewItem.js'\r\n\r\nfunction Preview(props) {\r\n    // 要计算\r\n    return (\r\n        <div\r\n            style={{\r\n                width: `${props.width ? props.width : 1030}px`,\r\n                height: `${props.height ? props.height : 538}px`,\r\n            }}\r\n            className=\"preview-box\"\r\n        >\r\n            <div className=\"sub-title\">\r\n                &nbsp;Preview\r\n                <svg className=\"icon\" aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-download\"></use>\r\n                </svg>\r\n            </div>\r\n            <div\r\n                className = \"simple_scrollbar\"\r\n                style={{\r\n                    width: '100%',\r\n                    height: '508px',\r\n                    overflowX: 'auto',\r\n                    overflowY:'auto'\r\n                }}\r\n            >\r\n                <PreviewItem\r\n                    data= {props.data}\r\n                    config = {props.config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tdata: state.graphData,\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Preview)\r\n","import {PATTERN_TO_CHANGE} from './const.js'\r\nexport const COMPARISON_CONFIG = [\r\n    'shape',\r\n    'fillColor',\r\n    'strokeColor',\r\n    'strokeWidth',\r\n    'strokeType',\r\n    'radius',\r\n    'strokeDasharray',\r\n    'textColor'\r\n]\r\nexport const initConfig = {\r\n    graph: {\r\n        eachWidth: 300,\r\n        eachHeight: 300,\r\n        margin: 30,\r\n        layout: {\r\n            chooseType: 'matrix',\r\n            vertical: {\r\n                yDistance: 40,\r\n                linkStyle: {\r\n                    shape: 'curve'\r\n                }\r\n            },\r\n            offLine:{\r\n\r\n            },\r\n            onLine: {\r\n    \r\n            },\r\n            bipartite: {\r\n    \r\n            },\r\n            circular: {\r\n    \r\n            },\r\n            dagre: {\r\n\r\n            },\r\n            mds: {\r\n\r\n            },\r\n            grid: {\r\n                rows: 4\r\n            },\r\n            matrix: {\r\n                \r\n            }\r\n        },\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#e6e6e6',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        linkStyle: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 1,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3',\r\n            pointShape: 'rect',\r\n            pointFillColor: '#E6E6E6',\r\n            pointOpacity: 1,\r\n            pointRadius: 8,\r\n            pointStrokeWidth:1,\r\n            pointStrokeColor: '#000000',\r\n            pointStrokeType: 'solid',\r\n        }\r\n    },\r\n    time: {\r\n        chooseTypes:['timeLine'],\r\n        timeLine: {\r\n            xDistance: 330,\r\n            yDistance: 0,\r\n            // 有可能只对节点进行该操作\r\n            element: 'all',\r\n            // 表示位置变换的函数，还有就是环状。。circular\r\n            type: 'linear'\r\n        },\r\n        insert: {\r\n            position:'origin',\r\n            margin: 10,\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#FF5F00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#FF5F00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                fillColor: '#ffffff',\r\n                radius: 8,\r\n            }\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#F39350',\r\n            endColor: '#5DBDAD'\r\n        },\r\n        animation: {\r\n            speed: 500\r\n        },\r\n        markLine: {\r\n            shape: 'line',\r\n            strokeType: 'solid',\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5',\r\n            opacity:1,\r\n        },\r\n        chart: {\r\n            type:'line'\r\n        }\r\n    },\r\n    task: {\r\n        // 任务类型有：comparison\\find\\filter\r\n        taskType: 'comparison',\r\n        basedType: 'structure',\r\n        find:{\r\n            attr:'degree',\r\n            // 结构有shortest-path，也有哑铃结构dumb-bell\r\n            structure: 'graph',\r\n            relation: '>=',\r\n            value: 3\r\n        },\r\n        pattern: 'compare-structure',\r\n        change: [...PATTERN_TO_CHANGE['compare-structure']],\r\n        // change: [],\r\n        comparison: {\r\n            chooseItem: 'stable-Node',\r\n            chooseTypes: COMPARISON_CONFIG,\r\n            attr: '',\r\n            // keyFrame可为上一帧、下一帧、具体某一帧\r\n            keyFrame: 'next',\r\n            elements: 'all',\r\n            appearNode: {\r\n                shape: 'rect',\r\n                fillColor: '#F0785D',\r\n                strokeColor: '#454444',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 8,\r\n                opacity: 1\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#E6E6E6',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#24B8E8',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 8,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            appearLink: {\r\n                shape: 'curve',\r\n                strokeColor: '#F0785D',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            },\r\n            stableLink: {\r\n                shape: 'line',\r\n                strokeColor: '#DAD5D5',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            },\r\n            disappearLink: {\r\n                shape: 'curve',\r\n                strokeColor: '#24B8E8',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            }\r\n        }\r\n    }\r\n}","import {initConfig} from '../util/initConfig.js'\r\n\r\nconst UPDATE_CONFIG = \"UPDATE_CONFIG\";\r\nconst MODIFY_CONFIG = \"MODIFY_CONFIG\";\r\n\r\nexport function config(state = initConfig, action) {\r\n\tswitch (action.type) {\r\n\t\tcase MODIFY_CONFIG:\r\n            return {\r\n                ...state,\r\n                [action.payload.key]:{\r\n                    ...state[action.payload.key],\r\n                    ...action.payload.value\r\n                }\r\n            }\r\n        case UPDATE_CONFIG: \r\n            return action.data\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n// 修改\r\nexport function modifyConfig(payload) {\r\n\treturn { type: MODIFY_CONFIG, payload };\r\n}\r\n\r\n// 重设一套新的config\r\nexport function update(config) {\r\n\treturn { type: UPDATE_CONFIG, data: config };\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport ReactJson from 'react-json-view'\r\nimport FileSaver from 'file-saver'\r\nimport { REACT_JSON_OPTIONS } from '../../util/const'\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../../redux/config.redux.js'\r\n// import * as _ from 'lodash'                                                                                                                               \r\nimport './grammarPanel.css'\r\nimport { getSimpleGrammar } from '../../util/dnetChart.js'\r\n\r\nfunction GrammarPanel(props) {\r\n    const [grammarType, setGrammarType] = useState('simple')\r\n    function handleTemplateAdd() {\r\n        console.log('未实现grammar的加载')\r\n    }\r\n\r\n    function handleTemplateSave() {\r\n        let content = JSON.stringify(props.config)\r\n        let type = 'data:application/json;charset=utf-8'\r\n        let blob = new Blob([content], { type: type })\r\n\r\n        let isFileSaverSupported = false\r\n        try {\r\n            isFileSaverSupported = !!new Blob()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        if (isFileSaverSupported) {\r\n            FileSaver.saveAs(blob, 'template.json')\r\n        } else {\r\n            FileSaver.open(encodeURI(type + ',' + content))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"grammar-panel-box\">\r\n            <div className=\"sub-title\">\r\n                &nbsp;Grammar\r\n                <svg className=\"icon\" onClick={handleTemplateAdd} aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-add\"></use>\r\n                </svg>\r\n                <svg className=\"icon\" onClick={handleTemplateSave} aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-download\"></use>\r\n                </svg>\r\n            </div>\r\n            <div className=\"gp-header-text\">\r\n                <div\r\n                    className={`gp-sub-title ${grammarType === 'simple' ? 'gp-sub-choose' : ''}`}\r\n                    onClick={() => setGrammarType('simple')}\r\n                >\r\n                    Simple\r\n                </div>\r\n                <div className=\"gp-sub-divide\"></div>\r\n                <div\r\n                    className={`gp-sub-title ${grammarType === 'all' ? 'gp-sub-choose' : ''}`}\r\n                    onClick={() => setGrammarType('all')}\r\n                >\r\n                    All\r\n                </div>\r\n            </div>\r\n            <div className=\"json-text simple_scrollbar\">\r\n                <ReactJson\r\n                    className=\"json-box\"\r\n                    {...REACT_JSON_OPTIONS}\r\n                    src={grammarType === 'simple' ? getSimpleGrammar(props.config) : props.config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GrammarPanel)\r\n","import React from \"react\"\nimport ReactJson from \"react-json-view\"\nimport { Upload } from \"antd\"\nimport FileSaver from \"file-saver\"\n\nexport default class Grammar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filename: \"\",\n            jsonData: {},\n            jsonOptions: {\n                displayDataTypes: false,\n                name: null,\n                indentWidth: 2,\n                collapseStringsAfterLength: 20,\n //               iconStyle: \"circle\",\n                enableClipboard: false,\n                displayObjectSize: false\n            },\n        }\n    }\n    componentDidMount() {}\n\n    Export = () => {\n        let content = JSON.stringify(this.state.jsonData)\n        let type = \"data:application/json;charset=utf-8\"\n        let blob = new Blob([content], { type: type })\n\n        let isFileSaverSupported = false\n        try {\n            isFileSaverSupported = !!new Blob()\n        } catch (e) {\n            console.log(e)\n        }\n\n        if (isFileSaverSupported) {\n            FileSaver.saveAs(blob, this.state.filename)\n        } else {\n            FileSaver.open(encodeURI(type + \",\" + content))\n        }\n    }\n    render() {\n        const { fileList } = this.state\n        const props = {\n            name: \"UploadFile\", //name得看接口需求，name与接口需要的name一致\n            showUploadList: false,\n            data: {}, //接口需要的参数，无参数可以不写\n            beforeUpload: (file) => {\n                console.log(file)\n                const reader = new FileReader()\n                reader.readAsText(file)\n                reader.onload = () => {\n                    let myData = reader.result\n                    let myJson = JSON.parse(myData)\n                    \n                    this.setState((state) => ({\n                        fileList: [file],\n                        jsonData: myJson,\n                        filename: file.name,\n                    }))\n                    if (this.props.onSubmit) {\n                        const { filename, jsonData } = this.state\n                        this.props.onSubmit({ filename, jsonData })\n                    }\n                }\n                console.log(file.data)\n                return false\n            },\n        }\n        return (\n            <div \n                style={{\n                    width:`${this.props.width ? this.props.width: 1035}px`,\n                    height: `${this.props.height ? this.props.height: 380}px`\n                }}\n                className=\"grammar-box \">\n                <div className=\"sub-title\">\n                    &nbsp;Grammar\n                    <Upload\n                        className=\"upload-item\"\n                        {...props}\n                        fileList={fileList}\n                    >\n                        <svg className=\"icon\" aria-hidden=\"true\">\n                            <use xlinkHref=\"#icon-add\"></use>\n                        </svg>\n                    </Upload>\n                    <svg\n                        className=\"icon\"\n                        aria-hidden=\"true\"\n                    >\n                        <use onClick={this.Export} xlinkHref=\"#icon-download\"></use>\n                    </svg>\n                </div>\n                <div className=\"filename\">{this.state.filename}</div>\n                <div className=\"json-text simple_scrollbar\">\n                    <ReactJson\n                        className=\"json-box\"\n                        {...this.state.jsonOptions}\n                        src={this.props.options}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","export const configSet = [\r\n    {},\r\n    {\r\n        time: 'timeLine'\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: ['timeLine', 'markLine']\r\n    },\r\n    {\r\n        time: 'animation',\r\n        comparison: {\r\n            isOn: true,\r\n            chooseTypes: ['fillColor']\r\n        }\r\n    },\r\n    {\r\n        time: ['animation', 'timeLine'],\r\n        comparison: true\r\n    },\r\n    {\r\n        time: {\r\n            chooseTypes: ['timeLine','insert'],\r\n            insert: {\r\n                position: 'center', //目前就实现这一个。。。\r\n                linkStyle: {\r\n                    shape: 'line'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        time: {\r\n            chooseTypes: ['timeLine','insert'],\r\n            insert: {\r\n                position: 'bottomRight', //目前就实现这一个。。。\r\n                linkStyle: {\r\n                    shape: 'curve'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    {\r\n        time: [\r\n            'timeLine',\r\n            {\r\n                insert: {\r\n                    timeLine: 'bottom', //目前就实现这一个。。。\r\n                    linkStyle: {\r\n                        shape: 'curve'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        time: 'timeLine'\r\n    },\r\n    {\r\n        comparison: 'color'\r\n    },\r\n\r\n    {\r\n        time: 'timeLine',\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: {\r\n            timeLine: {\r\n                element: 'link'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: [\r\n            'animation',\r\n            {\r\n                timeLine: {\r\n                    element: 'node'\r\n                }\r\n            }\r\n        ],\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: [\r\n            'animation',\r\n            {\r\n                timeLine: {\r\n                    element: 'link'\r\n                }\r\n            }\r\n        ],\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'link'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: ['timeLine', 'insert']\r\n    },\r\n    \r\n    {\r\n        time: [\r\n            'timeLine',\r\n            'color',\r\n            {\r\n                insert: {\r\n                    timeLine: 'bottom', //目前就实现这一个。。。\r\n                    linkStyle: {\r\n                        shape: 'curve'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    */\r\n]\r\n","import React, { useState } from 'react'\r\nimport Grammar from '../../components/grammar.js'\r\nimport Preview from '../../components/preview/preview.js'\r\nimport * as testData from '../../data/import/test1.json'\r\nimport { configSet } from './config.js'\r\nimport './exampleBoard.css'\r\nimport { assignConfigs } from '../../util/dnetChart'\r\nconst dataset = [\r\n    {\r\n        dataName: 'testData',\r\n        description: 'Barley yield by variety across the upper midwest in 1931 and 1932',\r\n        data: testData.default\r\n    }\r\n]\r\n\r\nexport default function ExampleBoard() {\r\n    const [jsonData, setJsonData] = useState(dataset[0].data)\r\n    return (\r\n        <div className=\"example-board\">\r\n            {configSet.map((configItem, index) => {\r\n                const config = assignConfigs(configItem)\r\n                // return null\r\n                return (\r\n                    <div className=\"example-row\" key={`example-row-${index}`}>\r\n                        <Grammar\r\n                            options={configItem}\r\n                            width={340}\r\n                            height={500}\r\n                        />\r\n                        <Preview data={jsonData.graphs} config={config} width={1545} height={500} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","export const  isDnetStorageKey = (v) => {\r\n  const tempArr = v.split('-')\r\n  if(tempArr.length>1&&tempArr[0]==='DnetG'){\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\n\r\nexport const keySort = (a, b)=>{\r\n  const aIndex = Number(a.split('-')[1])\r\n  const bIndex = Number(b.split('-')[1])\r\n  return bIndex - aIndex\r\n}\r\n\r\nexport const getStorageKeyArr = (localStorage) => {\r\n    const storageKeyArr = [] \r\n    new Array(localStorage.length).fill(\"0\").forEach((v,i)=>{\r\n      const key = localStorage.key(i)\r\n      if(isDnetStorageKey(key)){\r\n        // 过滤拿到本应用的localStorage键值\r\n        storageKeyArr.push(key)\r\n      }\r\n    })\r\n    storageKeyArr.sort(keySort)\r\n    return storageKeyArr\r\n}","export const defaultTemplates =  [\r\n  {\r\n    name:\"oneMds\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"oneMds\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"none\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 0,\r\n          \"radius\": 2,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 0,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\"\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 5,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#ECAA7B\",\r\n          \"endColor\": \"#98F3E3\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"attr\",\r\n        \"find\": { \"attr\": \"degree\", \"relation\": \">=\", \"value\": 3 },\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#ECAA7B\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#98F3E3\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#ECAA7B\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#98F3E3\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: \"vertical-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 350,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 10,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"vertical-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }\r\n    \r\n  },\r\n  {\r\n    name:\"force-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 350,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"dagre-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 350,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"dagre\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n          \"taskType\": 'comparison',\r\n          \"basedType\": 'structure',\r\n          \"comparison\": {\r\n            \"chooseItem\": \"stable-Node\",\r\n            \"chooseTypes\": [\r\n              \"shape\",\r\n              \"fillColor\",\r\n              \"strokeColor\",\r\n              \"strokeWidth\",\r\n              \"strokeType\",\r\n              \"radius\",\r\n              \"strokeDasharray\",\r\n              \"textColor\"\r\n            ],\r\n            \"keyFrame\": \"next\",\r\n            \"elements\": \"all\",\r\n            \"appearNode\": {\r\n              \"shape\": \"rect\",\r\n              \"fillColor\": \"#FD8F8F\",\r\n              \"strokeColor\": \"#000000\",\r\n              \"strokeWidth\": 1,\r\n              \"strokeType\": \"solid\",\r\n              \"textColor\": \"white\",\r\n              \"radius\": 8,\r\n              \"opacity\": 1\r\n            },\r\n            \"stableNode\": {\r\n              \"shape\": \"circle\",\r\n              \"fillColor\": \"#DAD5D5\",\r\n              \"strokeColor\": \"#000000\",\r\n              \"strokeWidth\": 1,\r\n              \"radius\": 6,\r\n              \"strokeType\": \"solid\",\r\n              \"textColor\": \"white\",\r\n              \"opacity\": 1\r\n            },\r\n            \"disappearNode\": {\r\n              \"shape\": \"circle\",\r\n              \"fillColor\": \"#90B5FB\",\r\n              \"strokeColor\": \"#000000\",\r\n              \"strokeWidth\": 1,\r\n              \"radius\": 8,\r\n              \"strokeType\": \"solid\",\r\n              \"textColor\": \"white\",\r\n              \"opacity\": 1\r\n            },\r\n            \"appearLink\": {\r\n              \"shape\": \"curve\",\r\n              \"strokeColor\": \"#FD8F8F\",\r\n              \"strokeType\": \"solid\",\r\n              \"strokeWidth\": 3,\r\n              \"opacity\": 1,\r\n              \"strokeDasharray\": \"3,3\"\r\n            },\r\n            \"stableLink\": {\r\n              \"shape\": \"line\",\r\n              \"strokeColor\": \"#908F8F\",\r\n              \"strokeType\": \"solid\",\r\n              \"strokeWidth\": 1,\r\n              \"opacity\": 1,\r\n              \"strokeDasharray\": \"3,3\"\r\n            },\r\n            \"disappearLink\": {\r\n              \"shape\": \"curve\",\r\n              \"strokeColor\": \"#90B5FB\",\r\n              \"strokeType\": \"solid\",\r\n              \"strokeWidth\": 3,\r\n              \"opacity\": 1,\r\n              \"strokeDasharray\": \"3,3\"\r\n            }\r\n          },\r\n      },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-animation',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"animation\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-markLine',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-insert',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"isOn\": true,\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\", \"insert\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'no-comparison',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'find',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n     \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\", \"insert\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#8a6ef5\",\r\n            \"strokeType\": \"dashed\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 0.6,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'vertical-layout',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"isOn\": true,\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n     \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#8a6ef5\",\r\n            \"strokeType\": \"dashed\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 0.6,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name:\"find-structure\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 160,\r\n        \"eachHeight\": 290,\r\n        \"margin\": 20,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 4,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"find\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"appear-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 6,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": { \"xDistance\": 160, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"find-attr\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 200,\r\n        \"eachHeight\": 200,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"circular\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"insert\", \"animation\", \"markLine\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ff5f00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"find-structure\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 160,\r\n        \"eachHeight\": 290,\r\n        \"margin\": 20,\r\n        \"layout\": {\r\n          \"chooseType\": \"circular\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 4,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"attr\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"last\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 6,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": { \"xDistance\": 160, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }\r\n  }\r\n]\r\n  \r\n","import React, { useState, useEffect } from 'react'\r\nimport './templatePanel.css'\r\nimport PreviewItem from '../previewItem/previewItem.js'\r\nimport FileSaver from 'file-saver'\r\nimport { DNET_SAMPLE_WIDTH, DNET_SAMPLE_HEIGHT } from '../../util/const'\r\nimport { getStorageKeyArr } from '../../util/template'\r\nimport deleteSvg from '../../assets/delete.svg'\r\nimport checkSvg from '../../assets/check.svg'\r\nimport { defaultTemplates } from '../../data/template.js'\r\nimport * as exampleData from '../../data/import/test2.json'\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../../redux/config.redux.js'\r\nimport * as assign from 'assign-deep'\r\nimport { initConfig } from '../../util/initConfig.js'\r\nimport * as _ from 'lodash'\r\nimport { addPatternAndChange } from '../../util/dnetChart'\r\n\r\nfunction TemplatePanel(props) {\r\n    const [localStorage, setLocalStorage] = useState(window.localStorage)\r\n    const [storageLength, setStorageLength] = useState(0)\r\n    const [storageKeyArr, setStorageKeyArr] = useState(getStorageKeyArr(localStorage))\r\n    // const [config,setConfig] = useState(props.config)\r\n    // // const [width, setWidth] = useState(0)\r\n    // // const [height, setHeight] = useState(0)\r\n    // useEffect(()=>{\r\n    //     setConfig(props.config)\r\n    // },[props.config])\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // 初始化，判断该电脑的localStorage是否加载过默认的模板，没有先加载\r\n        if (localStorage.lastIndex === undefined) {\r\n            // 没有加载过模板\r\n            localStorage.lastIndex = 0\r\n            for (let i = defaultTemplates.length - 1; i > 0; i--) {\r\n                const item = defaultTemplates[i]\r\n                const lastIndex = localStorage.lastIndex\r\n                const key = `DnetG-${lastIndex}`\r\n                const content = JSON.stringify({\r\n                    config: item.template,\r\n                    name: item.name,\r\n                    index: lastIndex\r\n                })\r\n                localStorage.setItem(key, content)\r\n                localStorage.lastIndex = 1 + Number(lastIndex)\r\n            }\r\n            setStorageLength(localStorage.length)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setStorageKeyArr(getStorageKeyArr(localStorage))\r\n    }, [storageLength])\r\n\r\n    function handleTemplateAdd() {\r\n        if (localStorage.lastIndex === undefined) {\r\n            // 初始化\r\n            localStorage.lastIndex = 0\r\n        }\r\n        if (!localStorage) {\r\n            alert('浏览器支持localstorage')\r\n            return false\r\n        } else {\r\n            //写入当前config\r\n            const lastIndex = localStorage.lastIndex\r\n            const key = `DnetG-${lastIndex}`\r\n            const content = JSON.stringify({\r\n                config: props.config,\r\n                name: `specification-${lastIndex}`,\r\n                index: lastIndex\r\n            })\r\n            localStorage.setItem(key, content)\r\n            localStorage.lastIndex = 1 + Number(lastIndex)\r\n            setStorageLength(localStorage.length)\r\n        }\r\n    }\r\n\r\n    function handleTemplateSave() {\r\n        let content = JSON.stringify(props.config)\r\n        let type = 'data:application/json;charset=utf-8'\r\n        let blob = new Blob([content], { type: type })\r\n\r\n        let isFileSaverSupported = false\r\n        try {\r\n            isFileSaverSupported = !!new Blob()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        if (isFileSaverSupported) {\r\n            FileSaver.saveAs(blob, 'template.json')\r\n        } else {\r\n            FileSaver.open(encodeURI(type + ',' + content))\r\n        }\r\n    }\r\n\r\n    function coverConfig(newInitConfig, vConfig){\r\n        assign(newInitConfig, vConfig)\r\n        addPatternAndChange(newInitConfig)\r\n    }\r\n\r\n    function handleTemplateCheck(v) {\r\n        const vContent = JSON.parse(localStorage.getItem(v))\r\n        if (vContent && vContent.config) {\r\n            const newInitConfig = _.cloneDeep(initConfig)\r\n            coverConfig(newInitConfig, vContent.config)\r\n            props.update(newInitConfig)\r\n        }\r\n    }\r\n\r\n    function handleTemplateRemove(storeKey) {\r\n        localStorage.removeItem(storeKey)\r\n        setStorageLength(localStorage.length)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                // width: `${props.width ? props.width : 1030}px`,\r\n                // height: `${props.height ? props.height : 456}px`\r\n                width: '1030px',\r\n                height: '456px'\r\n            }}\r\n            className=\"template-panel-box\"\r\n        >\r\n            <div className=\"sub-title\">\r\n                &nbsp;template\r\n                <svg className=\"icon\" onClick={handleTemplateAdd} aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-add\"></use>\r\n                </svg>\r\n                <svg className=\"icon\" onClick={handleTemplateSave} aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-download\"></use>\r\n                </svg>\r\n            </div>\r\n            <div className=\"template-content-box simple_scrollbar\">\r\n                {storageKeyArr.map((v, storageIndex) => {\r\n                    const vContent = JSON.parse(localStorage.getItem(v))\r\n                    if (!vContent) {\r\n                        return null\r\n                    }\r\n                    return (\r\n                        <div className=\"sample-item-wrap\" key={`sample-${storageIndex}`}>\r\n                            <div className=\"sample-item-information\">\r\n                                <div className=\"sample-item-icon\">\r\n                                    <div className=\"item-image-wrap\">\r\n                                        <img\r\n                                            className=\"sample-item-svg\"\r\n                                            src={checkSvg}\r\n                                            onClick={() => handleTemplateCheck(v)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"item-image-wrap\">\r\n                                        <img\r\n                                            className=\"sample-item-svg\"\r\n                                            src={deleteSvg}\r\n                                            onClick={() => handleTemplateRemove(v)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"sample-item-name\">{`Specification-${storageIndex}`}</div>\r\n                            </div>\r\n                            <div\r\n                                className=\"sample-item-chart\"\r\n                                style={{\r\n                                    // width: DNET_SAMPLE_WIDTH,\r\n                                    height: DNET_SAMPLE_HEIGHT\r\n                                }}\r\n                            >\r\n                                <PreviewItem \r\n                                    data={exampleData.graphs} \r\n                                    config={vContent.config} \r\n                                    sampleWidth = {DNET_SAMPLE_WIDTH}\r\n                                    sampleHeight = {DNET_SAMPLE_HEIGHT}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    // data: state.graphData,\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n// function areEqual(prevProps, nextProps) {\r\n//     return true\r\n// }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePanel)\r\n// export default React.memo(connect(mapStateToProps, mapDispatchToProps)(TemplatePanel), areEqual)\r\n","import React, { useState } from 'react'\r\nimport { Select, Input, Collapse, InputNumber } from 'antd'\r\nimport { ChromePicker } from 'react-color'\r\nimport './nodeLinkStylePanel.css'\r\n\r\nconst colorIndexToName = ['strokeColor', 'fillColor', 'textColor','pointFillColor']\r\nconst { Option } = Select\r\nconst { Panel } = Collapse\r\n\r\nexport default function NodeLinkStylePanel(props) {\r\n    const [colorPickerDisplay, setColorPickerDisplay] = useState([false, false, false, false])\r\n    const { changeOptions, type } = props\r\n    const strokeDasharrayOption = changeOptions.strokeDasharray\r\n        ? changeOptions.strokeDasharray.split(',').map((v) => parseInt(v))\r\n        : null\r\n    const changeElementStyle = (option) => {\r\n        const changeOptions = { ...props.changeOptions, ...option }\r\n        props.onSubmit({ [props.optionKey]: { ...changeOptions, ...option } })\r\n    }\r\n    const handleStyleChange = (key, value) => {\r\n        changeElementStyle({ [key]: value })\r\n    }\r\n    const handleStrokeDashChange = (index, value) => {\r\n        const tempArr = [...strokeDasharrayOption]\r\n        tempArr[index] = value\r\n        changeElementStyle({ strokeDasharray: tempArr.join(',') })\r\n    }\r\n\r\n    const handleElementColorClick = (index) => {\r\n        const tempArr = [...colorPickerDisplay]\r\n        tempArr[index] = !tempArr[index]\r\n        setColorPickerDisplay(tempArr)\r\n    }\r\n\r\n    const handleElementColorChange = (colorCode, index) => {\r\n        changeElementStyle({ [colorIndexToName[index]]: colorCode.hex })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"change-option-panel\"\r\n            style={{\r\n                margin: '10px'\r\n            }}\r\n        >\r\n            {/* 选择形状：节点和链接是不一样的。\r\n                节点：圆形、三角形、方形 \r\n                链接：直线、曲线\r\n            */}\r\n            <Collapse\r\n                // bordered={false}\r\n                expandIconPosition={'right'}\r\n                style={{\r\n                    backgroundColor: '#ffffff',\r\n                }}\r\n            >\r\n                <Panel className=\"nlsp-panel\" header={props.optionKey}>\r\n                    {type === 'Node' ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Shape:</div>\r\n                            <Select\r\n                                value={changeOptions.shape}\r\n                                size=\"small\"\r\n                                onChange={(value) => handleStyleChange('shape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"circle\">\r\n                                    <div>circle</div>\r\n                                </Option>\r\n                                <Option key=\"rect\">\r\n                                    <div>rect</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Shape:</div>\r\n                            <Select\r\n                                size=\"small\"\r\n                                value={changeOptions.shape}\r\n                                onChange={(value) => handleStyleChange('shape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"line\">\r\n                                    <div>line</div>\r\n                                </Option>\r\n                                <Option key=\"curve\">\r\n                                    <div>curve</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    )}\r\n                    {/* 选择线型 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>StrokeType:</div>\r\n                        <Select\r\n                            size=\"small\"\r\n                            value={changeOptions.strokeType}\r\n                            style={{ width: 115 }}\r\n                            onChange={(value) => handleStyleChange('strokeType', value)}\r\n                        >\r\n                            <Option value=\"solid\">solid</Option>\r\n                            <Option value=\"dashed\">dashed</Option>\r\n                        </Select>\r\n                    </div>\r\n                    {/* 输入线宽 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>StrokeWidth:</div>\r\n                        <Input\r\n                            value={changeOptions.strokeWidth}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            onChange={(e) =>\r\n                                handleStyleChange('strokeWidth', Number(e.target.value))\r\n                            }\r\n                            style={{ width: '115px' }}\r\n                        />\r\n                    </div>\r\n                    {/* 输入透明度 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>Opacity:</div>\r\n                        <InputNumber\r\n                            value={changeOptions.opacity}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.1}\r\n                            onChange={(e) => handleStyleChange('opacity', e)}\r\n                            style={{ width: '115px' }}\r\n                        />\r\n                    </div>\r\n                    {/* 输入半径长度 */}\r\n                    {changeOptions.radius ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Radius:</div>\r\n                            <Input\r\n                                value={changeOptions.radius}\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                onChange={(e) =>\r\n                                    handleStyleChange('radius', Number(e.target.value))\r\n                                }\r\n                                style={{ width: '115px' }}\r\n                            />\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接虚线的设置 */}\r\n                    {strokeDasharrayOption ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>StrokeDasharray:</div>\r\n                            <div>\r\n                                <Input\r\n                                    value={strokeDasharrayOption[0]}\r\n                                    type=\"number\"\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        handleStrokeDashChange(0, Number(e.target.value))\r\n                                    }\r\n                                    style={{ width: '50px' }}\r\n                                />\r\n                                <Input\r\n                                    value={strokeDasharrayOption[1]}\r\n                                    type=\"number\"\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        handleStrokeDashChange(1, Number(e.target.value))\r\n                                    }\r\n                                    style={{\r\n                                        width: '50px',\r\n                                        marginLeft: '10px'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 节点的外边颜色或 线型颜色 */}\r\n                    {\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>strokeColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(0)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.strokeColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[0] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.strokeColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 0)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    }\r\n                    {/* 节点内部的填充颜色 */}\r\n                    {changeOptions.fillColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>fillColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(1)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.fillColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[1] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.fillColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 1)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 节点内部的填充颜色 */}\r\n                    {changeOptions.textColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>textColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(2)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.textColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[2] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.textColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 2)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {/** 链接的节点形式的形状设置，用在matrix布局中 */}\r\n                    {changeOptions.pointShape ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>PointShape:</div>\r\n                            <Select\r\n                                value={changeOptions.pointShape}\r\n                                size=\"small\"\r\n                                onChange={(value) => handleStyleChange('pointShape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"circle\">\r\n                                    <div>circle</div>\r\n                                </Option>\r\n                                <Option key=\"rect\">\r\n                                    <div>rect</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接的节点形式的透明度设置，用在matrix布局中 */}\r\n                    {changeOptions.pointOpacity ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>PointOpacity:</div>\r\n                            <InputNumber\r\n                                value={changeOptions.pointOpacity}\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                onChange={(e) => handleStyleChange('pointOpacity', e)}\r\n                                style={{ width: '115px' }}\r\n                            />\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接的节点形式的填充颜色，用在matrix布局中 */}\r\n                    {changeOptions.pointFillColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>PointFillColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(3)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.pointFillColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[3] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.pointFillColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 3)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ArcLinkItem from '../arcLinkItem/arcLinkItem.js'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport LinkItem from '../linkItem/linkItem.js'\r\nimport { getArcPathData } from '../../util/dnetChart.js'\r\nimport { SAMPLE_LINK_SOURCE as SLS,  \r\n         SAMPLE_LINK_TARGET as SLT, \r\n         SAMPLE_ITEM_WIDTH as SIW,\r\n         SAMPLE_ITEM_HEIGHT as SIH\r\n        } from '../../util/const.js'\r\n\r\nexport default function SampleItem(props) {\r\n    const { config, source = SLS, target = SLT, width = SIW, height = SIH, index = -1, type } = props\r\n\r\n    return (\r\n        <svg\r\n            className={`sample-item-${index}`}\r\n            width={`${width}px`}\r\n            height={`${height}px`}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {type === 'link' ? (\r\n                config.shape === 'line' ?\r\n                <LinkItem\r\n                    {...config}\r\n                    source={source}\r\n                    target={target}\r\n                />:\r\n                <ArcLinkItem\r\n                    {...config}\r\n                    data = {getArcPathData(source, target)}\r\n                />\r\n            ) : (\r\n                <NodeItem {...config} x={width / 2} y={height / 2} />\r\n            )}\r\n        </svg>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { Radio } from 'antd'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport { ROW_BUTTON_STYLE } from '../../util/const.js'\r\n\r\n\r\nexport default function NodeLinkSample(props) {\r\n    const { nodeStyle, linkStyle,  chooseItem} = props\r\n    const handleIconsClick = (value) => {\r\n      props.onSubmit(value)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"node-link-sample\">\r\n            <div onClick={() => handleIconsClick('Node')} className=\"second-line-left\">\r\n                <Radio.Group value={chooseItem}>\r\n                    <Radio.Button style={ROW_BUTTON_STYLE} value=\"Node\" type>\r\n                        Node\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div\r\n                onClick={() => handleIconsClick('Node')}\r\n                className={`bp-line-icon-container ${\r\n                    chooseItem === 'Node' ? 'choose-icon' : ''\r\n                }`}\r\n            >\r\n                <SampleItem config={nodeStyle} />\r\n            </div>\r\n            <div onClick={() => handleIconsClick('Link')} className=\"second-line-left\">\r\n                <Radio.Group value={chooseItem}>\r\n                    <Radio.Button style={ROW_BUTTON_STYLE} value=\"Link\">\r\n                        Link\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div\r\n                onClick={() => handleIconsClick('Link')}\r\n                className={`bp-line-icon-container ${\r\n                    chooseItem === 'Link' ? 'choose-icon' : ''\r\n                }`}\r\n            >\r\n                <SampleItem config={linkStyle} type={'link'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Select, Radio, InputNumber } from 'antd'\r\nimport { ChromePicker } from 'react-color'\r\nimport { INSERT_POSITION } from '../../util/dnetChart'\r\nimport {\r\n    TIME_PANEL_INPUT_WIDTH as TPIW,\r\n    MARK_LINK_SOURCE as MLS,\r\n    MARK_LINK_TARGET as MLT,\r\n    TIME_TIMELINE_ELEMENT,\r\n    TIME_CHART_TYPE,\r\n    TIME_TIMELINE_TYPE,\r\n    TIME_BUTTON_STYLE\r\n} from '../../util/const'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport NodeLinkSample from '../nodeLinkSample/nodeLinkSample.js'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport './timePanel.css'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\n\r\nclass TimePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            colorPickerDisplay: false,\r\n            elementColorPickerDisplay: [false, false, false],\r\n            chooseItem: 'Node'\r\n        }\r\n    }\r\n    handleButtonOnClick(type, event) {\r\n        const tempArr = [...this.props.options.chooseTypes]\r\n        const tempIndex = tempArr.indexOf(type)\r\n        if (tempIndex === -1) {\r\n            tempArr.push(type)\r\n        } else {\r\n            tempArr.splice(tempIndex, 1)\r\n        }\r\n        this.changeTimeConfig({\r\n            chooseTypes: tempArr\r\n        })\r\n    }\r\n    handleElementColorClick = (index) => {\r\n        const tempArr = this.state.elementColorPickerDisplay\r\n        tempArr[index] = !tempArr[index]\r\n        this.setState({\r\n            elementColorPickerDisplay: tempArr\r\n        })\r\n    }\r\n    handleElementColorChange = (colorCode, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = colorCode.hex\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n    handleTimeOptionsInput = (value, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = Number(value)\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n    handleTimeOptionsSelect = (value, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = value\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n\r\n    handleTimeLayoutType =(e) => {\r\n        switch(e){\r\n            case 'juxtaposed':\r\n                if(this.props.options.chooseTypes.indexOf('timeLine') === -1){\r\n                    this.handleButtonOnClick('timeLine')\r\n                }\r\n                this.handleTimeOptionsSelect('linear', 'timeLine', 'type')\r\n                break\r\n            case 'circular':\r\n                if(this.props.options.chooseTypes.indexOf('timeLine') === -1){\r\n                    this.handleButtonOnClick('timeLine')\r\n                }\r\n                this.handleTimeOptionsSelect('circular', 'timeLine', 'type')\r\n                break\r\n            default:\r\n                this.handleButtonOnClick('timeLine')\r\n                break\r\n        }\r\n    }\r\n\r\n    handleTimeOptionsChange = (option, value) => {\r\n        const optionObject = { ...this.props.options[option], ...value }\r\n        // optionObject[key] = value\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n\r\n    handleIconsClick = (value) => {\r\n        this.setState({\r\n            chooseItem: value\r\n        })\r\n    }\r\n    changeTimeConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'time', value })\r\n    }\r\n    render() {\r\n        const options = this.props.options\r\n        const optionKey = this.state.chooseItem === 'Node' ? 'nodeStyle' : 'linkStyle'\r\n        const changeOptions = this.props.options.insert[optionKey]\r\n        return (\r\n            <div className=\"time-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Time</div>\r\n                <div className=\"encoding-table-container\">\r\n                    {/* timeLine */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('timeLine') > -1 ? 'TimeLine' : ''\r\n                                }\r\n                                size={\"small\"}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('timeLine', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"TimeLine\"\r\n                                    size={\"small\"}\r\n                                    type\r\n                                >\r\n                                    TimeLine\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Type:</div>\r\n                                <Select\r\n                                    value={options.timeLine.type}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'timeLine', 'type')\r\n                                     }\r\n                                >\r\n                                    {TIME_TIMELINE_TYPE.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>xDistance:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={1000}\r\n                                    value={options.timeLine.xDistance}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'timeLine', 'xDistance')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>yDistance:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={1000}\r\n                                    value={options.timeLine.yDistance}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'timeLine', 'yDistance')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>Element:</div>\r\n                                <Select\r\n                                    value={options.timeLine.element}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'timeLine', 'element')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {TIME_TIMELINE_ELEMENT.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* animaiton */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('animation') > -1 ? 'animation' : ''\r\n                                }\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('animation', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"animation\"\r\n                                    type\r\n                                >\r\n                                    Animation\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Speed:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={1}\r\n                                    max={1000}\r\n                                    value={options.animation.speed}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'animation', 'speed')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* color */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('color') > -1 ? 'color' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('color', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"color\"\r\n                                    type\r\n                                >\r\n                                    Color\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>startColor</div>\r\n                                <div\r\n                                    onClick={() => this.handleElementColorClick(0)}\r\n                                    style={{\r\n                                        backgroundColor: options.color.startColor,\r\n                                        width: '125px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {this.state.elementColorPickerDisplay[0] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={options.color.startColor}\r\n                                    onChange={(colorCode) =>\r\n                                        this.handleElementColorChange(\r\n                                            colorCode,\r\n                                            'color',\r\n                                            'startColor'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>endColor</div>\r\n                                <div\r\n                                    onClick={() => this.handleElementColorClick(1)}\r\n                                    style={{\r\n                                        backgroundColor: options.color.endColor,\r\n                                        width: '125px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {this.state.elementColorPickerDisplay[1] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={options.color.endColor}\r\n                                    onChange={(colorCode) =>\r\n                                        this.handleElementColorChange(\r\n                                            colorCode,\r\n                                            'color',\r\n                                            'endColor'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Field:</div>\r\n                                <Select\r\n                                    value={'time'}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                >\r\n                                    <Option key={'time'} value={'time'}>\r\n                                        {'time'}\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* MarkLine */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('markLine') > -1 ? 'markLine' : ''\r\n                                }\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('markLine', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"markLine\"\r\n                                    type\r\n                                >\r\n                                    MarkLine\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content sample-item-border\">\r\n                            <SampleItem\r\n                                config={options.markLine}\r\n                                type={'link'}\r\n                                width={258}\r\n                                height={42}\r\n                                source={MLS}\r\n                                target={MLT}\r\n                            />\r\n                        </div>\r\n                        <NodeLinkStylePanel\r\n                            type={'Link'}\r\n                            optionKey={'markLine'}\r\n                            changeOptions={options.markLine}\r\n                            onSubmit={this.changeTimeConfig}\r\n                        />\r\n                    </div>\r\n                    {/* Chart */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('chart') > -1 ? 'chart' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('chart', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"chart\"\r\n                                    type\r\n                                >\r\n                                    Chart\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Type:</div>\r\n                                <Select\r\n                                    value={\r\n                                        options.chart.type === undefined\r\n                                            ? 'line'\r\n                                            : options.chart.type\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'chart', 'type')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {TIME_CHART_TYPE.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* insert */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('insert') > -1 ? 'insert' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('insert', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"insert\"\r\n                                    type\r\n                                >\r\n                                    Insert\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Margin:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={1}\r\n                                    max={1000}\r\n                                    value={options.insert.margin}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'insert', 'margin')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>Position:</div>\r\n                                <Select\r\n                                    value={options.insert.position}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'insert', 'position')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {INSERT_POSITION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <NodeLinkSample\r\n                                nodeStyle={options.insert.nodeStyle}\r\n                                linkStyle={options.insert.linkStyle}\r\n                                chooseItem={this.state.chooseItem}\r\n                                onSubmit={this.handleIconsClick}\r\n                            />\r\n                        </div>\r\n                        <NodeLinkStylePanel\r\n                            type={this.state.chooseItem}\r\n                            optionKey={optionKey}\r\n                            changeOptions={changeOptions}\r\n                            onSubmit={(value) => this.handleTimeOptionsChange('insert', value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.time\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimePanel)\r\n","import React from 'react'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport { Radio, Select, Collapse, Checkbox, Col, Row, InputNumber } from 'antd'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport {\r\n    TIME_PANEL_INPUT_WIDTH as TPIW,\r\n    TIME_TIMELINE_ELEMENT,\r\n    KEYFRAM_OPTIONS,\r\n    TASK_FIND_ATTR,\r\n    TASK_FIND_RELATION,\r\n    TASK_CHANGE_TYPES,\r\n    PATTERN_TO_CHANGE\r\n} from '../../util/const'\r\nimport { COMPARISON_CONFIG } from '../../util/defaultConfig.js'\r\nimport './comparisonPanel.css'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\nconst { Panel } = Collapse\r\n// Trend或者 Diff 配置\r\n// 下面是trend配置\r\n\r\nconst columnButtonStyle = {\r\n    boxSizing: 'border-box',\r\n    width: '62px',\r\n    padding: '0px',\r\n    fontSize: '12px',\r\n    height: '30px',\r\n    lineHeight: '30px',\r\n    alighItems: 'center'\r\n}\r\nconst rowButtonStyle = {\r\n    boxSizing: 'border-box',\r\n    width: '62px',\r\n    padding: '0px',\r\n    fontSize: '12px',\r\n    height: '62px',\r\n    lineHeight: '62px',\r\n    alighItems: 'center'\r\n}\r\n\r\nconst index2chooseItem = [\r\n    'appear-Node',\r\n    'stable-Node',\r\n    'disappear-Node',\r\n    'appear-Link',\r\n    'stable-Link',\r\n    'disappear-Link'\r\n]\r\n\r\nclass TaskPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            indeterminate: true,\r\n            checkAll: false,\r\n            changeIndeterminate: true,\r\n            changeCheckAll: true,\r\n            changeList: [...TASK_CHANGE_TYPES],\r\n            taskPattern: 'graph',\r\n            taskChange: 'all'\r\n        }\r\n    }\r\n    handleOptionChange = (value) => {\r\n        this.handleComparisonChange({ ...value })\r\n    }\r\n    handleSelectChange = (value, key, option) => {\r\n        if (option === 'comparison') {\r\n            this.handleComparisonChange({ [key]: value })\r\n        } else if (option === 'find') {\r\n            this.handleFindChange({ [key]: value })\r\n        }\r\n    }\r\n    handleColumnChange = (e) => {\r\n        const nodeOrLink = this.props.options.comparison.chooseItem.split('-')[1]\r\n        this.handleComparisonChange({ chooseItem: `${e.target.value}-${nodeOrLink}` })\r\n    }\r\n    handleRowChange = (e) => {\r\n        const changeAttr = this.props.options.comparison.chooseItem.split('-')[0]\r\n        this.handleComparisonChange({ chooseItem: `${changeAttr}-${e.target.value}` })\r\n    }\r\n    handleIconsClick = (index) => {\r\n        this.handleComparisonChange({ chooseItem: index2chooseItem[Number(index)] })\r\n    }\r\n    handleIsOnChange = (value) => {\r\n        this.handleComparisonChange({ isOn: value })\r\n    }\r\n\r\n    handleCheckChange = (list) => {\r\n        this.handleComparisonChange({ chooseTypes: list })\r\n        this.setState({ indeterminate: !!list.length && list.length < COMPARISON_CONFIG.length })\r\n        this.setState({ checkAll: list.length === COMPARISON_CONFIG.length })\r\n    }\r\n    handleAllCheckChange = (e) => {\r\n        this.handleComparisonChange({ chooseTypes: e.target.checked ? COMPARISON_CONFIG : [] })\r\n        this.setState({ indeterminate: false })\r\n        this.setState({ checkAll: e.target.checked })\r\n    }\r\n\r\n    handleChangeCheckChange = (list) => {\r\n        this.handleTaskPanelChange('change', list)\r\n    }\r\n    handleAllChangeCheckChange = (e) => {\r\n        this.handleTaskPanelChange('change', [...TASK_CHANGE_TYPES])\r\n    }\r\n\r\n    handleComparisonChange = (value) => {\r\n        this.changeTaskConfig({\r\n            comparison: {\r\n                ...this.props.options.comparison,\r\n                ...value\r\n            }\r\n        })\r\n    }\r\n    handleFindChange = (value) => {\r\n        this.changeTaskConfig({\r\n            find: {\r\n                ...this.props.options.find,\r\n                ...value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleTaskPanelChange = (key, value) => {\r\n        this.changeTaskConfig({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    handleTaskPatternSelect = (value) => {\r\n        switch (value) {\r\n            case 'graph':\r\n                this.handleTaskPanelChange('taskType', 'none')\r\n                this.handleTaskPanelChange('pattern', 'graph')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['graph']])\r\n                break\r\n            case 'compare-structure':\r\n                this.handleTaskPanelChange('taskType', 'comparison')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleTaskPanelChange('pattern', 'compare-structure')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['compare-structure']])\r\n                break\r\n            case 'shortest-path':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleTaskPanelChange('pattern', 'shortest-path')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['shortest-path']])\r\n                break\r\n            case 'dumb-bell':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleSelectChange('dumb-bell', 'structure', 'find')\r\n                this.handleTaskPanelChange('pattern', 'dumb-bell')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['dumb-bell']])\r\n                break\r\n            case 'compare-degree':\r\n                this.handleTaskPanelChange('taskType', 'comparison')\r\n                this.handleTaskPanelChange('basedType', 'attr')\r\n                this.handleTaskPanelChange('pattern', 'compare-degree')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['compare-degree']])\r\n                break\r\n            case 'find-degree':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'attr')\r\n                this.handleTaskPanelChange('pattern', 'find-degree')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['find-degree']])\r\n                break\r\n            default:\r\n                this.handleTaskPanelChange('taskType', 'none')\r\n                this.handleTaskPanelChange('pattern', 'graph')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['graph']])\r\n        }\r\n    }\r\n    handleTaskChangeSelect = (value) => {\r\n        this.setState({\r\n            taskChange: value\r\n        })\r\n    }\r\n    changeTaskConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'task', value })\r\n    }\r\n\r\n    render() {\r\n        const { comparison, find, taskType, basedType, pattern, change} = this.props.options\r\n        const {\r\n            chooseItem,\r\n            keyFrame,\r\n            elements,\r\n            chooseTypes,\r\n            appearNode,\r\n            appearLink,\r\n            stableNode,\r\n            stableLink,\r\n            disappearNode,\r\n            disappearLink\r\n        } = comparison\r\n        let changeKey = chooseItem.split('-')\r\n        changeKey = changeKey.join('')\r\n        const changeOptions = comparison[changeKey]\r\n        return (\r\n            <div className=\"Comparison-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Task</div>\r\n                <div className=\"encoding-table-container\">\r\n                    <div className=\"change-option-item\">\r\n                        <div>TaskType</div>\r\n                        <Select\r\n                            value={taskType}\r\n                            size=\"small\"\r\n                            style={{ width: TPIW }}\r\n                            onChange={(value) => this.handleTaskPanelChange('taskType', value)}\r\n                        >\r\n                            <Option value=\"comparison\">comparison</Option>\r\n                            <Option value=\"find\">find</Option>\r\n                            <Option value=\"none\">none</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div >BasedType</div>\r\n                        <Select\r\n                            value={basedType}\r\n                            size=\"small\"\r\n                            style={{ width: TPIW }}\r\n                            onChange={(value) => this.handleTaskPanelChange('basedType', value)}\r\n                        >\r\n                            <Option value=\"attr\">attr</Option>\r\n                            <Option value=\"structure\">structure</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <Collapse\r\n                            expandIconPosition={'right'}\r\n                            size=\"small\"\r\n                            style={{\r\n                                backgroundColor: '#ffffff',\r\n                                width: '100%'\r\n                            }}\r\n                            defaultActiveKey={['1']}\r\n                        >\r\n                            <Panel key=\"1\" className=\"nlsp-panel\" header={'Change'}>\r\n                                <Col\r\n                                    style={{\r\n                                        width: '50%',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'flex-start',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                >\r\n                                    <Checkbox\r\n                                        indeterminate={false}\r\n                                        onChange={this.handleAllChangeCheckChange}\r\n                                        checked={\r\n                                            change.length === TASK_CHANGE_TYPES.length\r\n                                        }\r\n                                    >\r\n                                        all\r\n                                    </Checkbox>\r\n                                </Col>\r\n                                <Checkbox.Group\r\n                                    style={{\r\n                                        textAlign: 'left',\r\n                                        width: '100%',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                    value={change}\r\n                                    onChange={this.handleChangeCheckChange}\r\n                                >\r\n                                    {[0, 2, 4].map((v) => {\r\n                                        return (\r\n                                            <Row\r\n                                                style={{\r\n                                                    width: '100%'\r\n                                                }}\r\n                                                key={`row-${v}`}\r\n                                            >\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '50%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={TASK_CHANGE_TYPES[v]}>\r\n                                                        {TASK_CHANGE_TYPES[v]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '50%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox\r\n                                                        style={{ fontSize: '10px' }}\r\n                                                        value={TASK_CHANGE_TYPES[v + 1]}\r\n                                                    >\r\n                                                        {TASK_CHANGE_TYPES[v + 1]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </Checkbox.Group>\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>\r\n                    {pattern === 'shortest-path' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Start:</div>\r\n                                <Select\r\n                                    value={'A'}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                >\r\n                                    <Option key={'A'} value={'A'}>\r\n                                        {'A'}\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>End:</div>\r\n                                <Select\r\n                                    value={'F'}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                >\r\n                                    <Option key={'F'} value={'F'}>\r\n                                        {'F'}\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {pattern === 'find-degree' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Relation:</div>\r\n                                <Select\r\n                                    value={find.relation}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'relation', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_RELATION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Value:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={100}\r\n                                    value={find.value}\r\n                                    onChange={(e) => this.handleFindChange({ value: Number(e) })}\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    <div className=\"change-option-item\">\r\n                        <Collapse\r\n                            expandIconPosition={'right'}\r\n                            style={{\r\n                                backgroundColor: '#ffffff',\r\n                                width: '100%'\r\n                            }}\r\n                            size=\"small\"\r\n                            defaultActiveKey={['0']}\r\n                        >\r\n                            <Panel key=\"1\" className=\"nlsp-panel\" header={'chooseTypes'}>\r\n                                <Col\r\n                                    style={{\r\n                                        width: '50%',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'flex-start',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                >\r\n                                    <Checkbox\r\n                                        indeterminate={this.state.indeterminate}\r\n                                        onChange={this.handleAllCheckChange}\r\n                                        checked={this.state.checkAll}\r\n                                    >\r\n                                        all\r\n                                    </Checkbox>\r\n                                </Col>\r\n                                <Checkbox.Group\r\n                                    style={{\r\n                                        textAlign: 'left',\r\n                                        width: '100%',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                    value={chooseTypes}\r\n                                    onChange={this.handleCheckChange}\r\n                                >\r\n                                    {[0, 2, 4, 6].map((v) => {\r\n                                        return (\r\n                                            <Row\r\n                                                style={{\r\n                                                    width: '100%'\r\n                                                }}\r\n                                                key={`row-${v}`}\r\n                                            >\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '55%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={COMPARISON_CONFIG[v]}>\r\n                                                        {COMPARISON_CONFIG[v]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '45%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={COMPARISON_CONFIG[v + 1]}>\r\n                                                        {COMPARISON_CONFIG[v + 1]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </Checkbox.Group>\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>    \r\n                    {taskType === 'comparison' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>KeyFrame:</div>\r\n                                <Select\r\n                                    value={keyFrame}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'keyFrame', 'comparison')\r\n                                    }\r\n                                >\r\n                                    {KEYFRAM_OPTIONS.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Elements:</div>\r\n                                <Select\r\n                                    value={elements}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'elements', 'comparison')\r\n                                    }\r\n                                >\r\n                                    {TIME_TIMELINE_ELEMENT.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {taskType === 'find' && basedType === 'attr' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Attr:</div>\r\n                                <Select\r\n                                    value={find.attr}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'attr', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_ATTR.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Relation:</div>\r\n                                <Select\r\n                                    value={find.relation}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'relation', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_RELATION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Value:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={100}\r\n                                    value={find.value}\r\n                                    onChange={(e) => this.handleFindChange({ value: Number(e) })}\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <div className=\"comparison-table-container\">\r\n                        <div className=\"table-first-line\">\r\n                            <div className=\"blank-icon\"></div>\r\n                            <Radio.Group\r\n                                onChange={this.handleColumnChange}\r\n                                value={chooseItem.split('-')[0]}\r\n                                className=\"first-line-right\"\r\n                            >\r\n                                <Radio.Button style={columnButtonStyle} value=\"appear\">\r\n                                    appear\r\n                                </Radio.Button>\r\n                                <Radio.Button style={columnButtonStyle} value=\"stable\">\r\n                                    stable\r\n                                </Radio.Button>\r\n                                <Radio.Button style={columnButtonStyle} value=\"disappear\">\r\n                                    disappear\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"table-second-line\">\r\n                            <div className=\"second-line-left\">\r\n                                <Radio.Group\r\n                                    onChange={this.handleRowChange}\r\n                                    value={chooseItem.split('-')[1]}\r\n                                >\r\n                                    <Radio.Button style={rowButtonStyle} value=\"Node\">\r\n                                        Node\r\n                                    </Radio.Button>\r\n                                    <Radio.Button style={rowButtonStyle} value=\"Link\">\r\n                                        Link\r\n                                    </Radio.Button>\r\n                                </Radio.Group>\r\n                            </div>\r\n                            <div className=\"second-line-right\">\r\n                                <div\r\n                                    id=\"appear-Node\"\r\n                                    onClick={() => this.handleIconsClick(0)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'appear-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={appearNode} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(1)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'stable-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={stableNode} />\r\n                                </div>\r\n                                <div\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'disappear-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                    onClick={() => this.handleIconsClick(2)}\r\n                                >\r\n                                    <SampleItem config={disappearNode} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(3)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'appear-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={appearLink} type={'link'} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(4)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'stable-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={stableLink} type={'link'} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(5)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'disappear-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={disappearLink} type={'link'} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <NodeLinkStylePanel\r\n                        type={chooseItem.split('-')[1]}\r\n                        optionKey={chooseItem.split('-').join('')}\r\n                        changeOptions={changeOptions}\r\n                        onSubmit={this.handleComparisonChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.task\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPanel)\r\n","import React from 'react'\r\nimport { InputNumber, Select } from 'antd'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport NodeLinkSample from '../nodeLinkSample/nodeLinkSample.js'\r\nimport { GRAPH_LAYOUT_TYPE } from '../../util/const'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\n\r\n// const rowButtonStyle = {\r\n//     boxSizing: 'border-box',\r\n//     width: '64px',\r\n//     padding: '0px',\r\n//     fontSize: '12px',\r\n//     height: '64px',\r\n//     lineHeight: '64px',\r\n//     alighItems: 'center'\r\n// }\r\n\r\nclass GraphPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            chooseItem: 'Node'\r\n        }\r\n    }\r\n    handleConfigChange = (e, key) => {\r\n        this.changeGraphConfig({\r\n            [key]: parseInt(e)\r\n        })\r\n    }\r\n    handleStyleChange = (option, key, value) => {\r\n        const optionItem = this.props.options[option]\r\n        const displayItem = {\r\n            ...optionItem,\r\n            [key]: value\r\n        }\r\n        this.changeGraphConfig({\r\n            [option]: displayItem\r\n        })\r\n    }\r\n\r\n    handleIconsClick = (value) => {\r\n        this.setState({\r\n            chooseItem: value\r\n        })\r\n    }\r\n\r\n    handleLayoutTypeChange = (value) => {\r\n        const layoutItem = this.props.options.layout\r\n        const displayItem = {\r\n            ...layoutItem,\r\n            chooseType: value\r\n        }\r\n        this.changeGraphConfig({ layout: displayItem })\r\n    }\r\n\r\n    changeGraphConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'graph', value })\r\n    }\r\n\r\n    render() {\r\n        const optionKey = this.state.chooseItem === 'Node' ? 'nodeStyle' : 'linkStyle'\r\n        const changeOptions = this.props.options[optionKey]\r\n        return (\r\n            <div className=\"basic-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Graph</div>\r\n                <div className=\"encoding-table-container\">\r\n                    <div className=\"change-option-item\">\r\n                        <div>Layout:</div>\r\n                        <Select\r\n                            size=\"small\"\r\n                            value={this.props.options.layout.chooseType}\r\n                            style={{ width: 125 }}\r\n                            onChange={this.handleLayoutTypeChange}\r\n                        >\r\n                            {GRAPH_LAYOUT_TYPE.map((v) => {\r\n                                return (\r\n                                    <Option key={v} value={v}>\r\n                                        {v}\r\n                                    </Option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>eachWidth:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={1000}\r\n                            value={this.props.options.eachWidth}\r\n                            style={{ width: 125 }}\r\n                            onChange={(e) => this.handleConfigChange(e, 'eachWidth')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>eachHeight:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={7000}\r\n                            style={{ width: 125 }}\r\n                            value={this.props.options.eachHeight}\r\n                            onChange={(e) => this.handleConfigChange(e, 'eachHeight')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>margin:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={200}\r\n                            style={{ width: 125 }}\r\n                            value={this.props.options.margin}\r\n                            onChange={(e) => this.handleConfigChange(e, 'margin')}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"basic-panel-line\">\r\n                        <NodeLinkSample\r\n                            nodeStyle={this.props.options.nodeStyle}\r\n                            linkStyle={this.props.options.linkStyle}\r\n                            chooseItem={this.state.chooseItem}\r\n                            onSubmit={this.handleIconsClick}\r\n                        />\r\n                    </div>\r\n                    <NodeLinkStylePanel\r\n                        type={this.state.chooseItem}\r\n                        optionKey={optionKey}\r\n                        changeOptions={changeOptions}\r\n                        onSubmit={this.changeGraphConfig}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.graph\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GraphPanel)\r\n","import React from 'react'\r\nimport './combinePanel.css'\r\nimport TimePanel from '../timePanel/timePanel.js'\r\nimport TaskPanel from '../taskPanel/taskPanel.js'\r\nimport GraphPanel from '../graphPanel/graphPanel.js'\r\n\r\nexport default function CombinePanel(props) {\r\n    return (\r\n        <div className=\"combine-panel-box\">\r\n            <div className=\"sub-title\">\r\n                &nbsp;Specification\r\n                <svg className=\"icon\" aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-save\"></use>\r\n                </svg>\r\n                <svg className=\"icon\" aria-hidden=\"true\">\r\n                    <use xlinkHref=\"#icon-set\"></use>\r\n                </svg>\r\n            </div>\r\n            <div\r\n                className=\"cbpl-content-container simple_scrollbar\"\r\n            >\r\n                <div>\r\n                    <GraphPanel/>\r\n                    <TaskPanel/>\r\n                </div>\r\n                <TimePanel/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport DataPanel from './components/dataPanel/dataPanel.js'\r\nimport Preview from './components/preview/preview.js'\r\nimport GrammarPanel from './components/grammarPanel/grammarPanel.js'\r\nimport ExampleBoard from './components/exampleBoard/exampleBoard.js'\r\nimport TemplatePanel from './components/templatePanel/templatePanel.js'\r\nimport CombinePanel from './components/combinePanel/combinePanel.js'\r\nimport graphSvg from './assets/graphIcon.svg'\r\nimport { connect } from \"react-redux\"\r\nimport { \r\n\tsetGraphData, \r\n} from './redux/graphData.redux.js'\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            board: 'system',\r\n            jsonfile: {},\r\n            filename: ''\r\n        }\r\n    }\r\n    handleBoardSwitch = (value) => {\r\n        if (this.state.board !== value) {\r\n            this.setState({\r\n                board: value\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"board\">\r\n                <div className=\"window-header\">\r\n                    <img \r\n                        className=\"title-graph-svg\" \r\n                        alt={'graph'}                \r\n                        src={graphSvg}\r\n                    />\r\n                    <div className=\"window-header-text\">\r\n                        <div className=\"title\">DNet-<span className=\"bold-font\">Gra</span> </div>\r\n                        {/* <div\r\n                            className={`header-sub-title ${\r\n                                this.state.board === 'system' ? 'header-sub-choose' : ''\r\n                            }`}\r\n                            onClick={() => this.handleBoardSwitch('system')}\r\n                        >\r\n                            System\r\n                        </div>\r\n                        <div className=\"header-sub-divide\"></div>\r\n                        <div\r\n                            className={`header-sub-title ${\r\n                                this.state.board === 'example' ? 'header-sub-choose' : ''\r\n                            }`}\r\n                            onClick={() => this.handleBoardSwitch('example')}\r\n                        >\r\n                            Example\r\n                        </div> */}\r\n                    </div>\r\n                    \r\n                </div>\r\n                {this.state.board === 'example' ? (\r\n                    <ExampleBoard></ExampleBoard>\r\n                ) : (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <DataPanel />\r\n                            <GrammarPanel/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <CombinePanel/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <TemplatePanel/>\r\n                            <Preview/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div id=\"g6-graph-container\" style={{display:\"none\"}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tgraphData: state.graphData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tsetGraphData,\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Board)","import { combineReducers } from 'redux';\r\n// import { dragStatus } from './drag.redux.js'\r\n// import {encodingItems} from './encoding.redux.js'\r\nimport {graphData} from './graphData.redux.js'\r\n// import {editIndex} from './editIndex.redux.js'\r\nimport {config} from './config.redux.js'\r\nexport default combineReducers({\r\n    config,\r\n    graphData\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n// import 'antd/dist/antd.dark.css'\r\n// import 'antd/dist/antd.less'\r\nimport './util/antd.css'\r\nimport Board from './board.js'\r\nimport reducers from './redux/index.js'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(reducers)\r\n\r\nlet script = document.createElement('script')\r\nscript.type = 'text/javascript'\r\nscript.src = 'http://at.alicdn.com/t/font_2104982_fxuicqlij3m.js'\r\ndocument.getElementById('root').appendChild(script)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Board />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}