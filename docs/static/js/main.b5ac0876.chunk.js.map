{"version":3,"sources":["assets/download.svg","assets/add.svg","assets/dataBase.svg","assets/delete.svg","assets/check.svg","assets/save.svg","assets/settings.svg","assets/graphIcon.svg","redux/graphData.redux.js","components/dataPanel/dataPanel.js","components/arcLinkItem/arcLinkItem.js","components/linkItem/linkItem.js","util/defaultConfig.js","util/const.js","util/dnetChart.js","components/linkContainer/linkContainer.js","components/dividedLinkItem/dividedLinkItem.js","components/nodeItem/nodeItem.js","components/halfNodeItem/halfNodeItem.js","components/nodeItemContainer/nodeItemContainer.js","components/pieNodeItem/pieNodeItem.js","components/barChartNodeItem/barChartNodeItem.js","components/chartNodeItem/chartNodeItem.js","components/nodeContainer/nodeContainer.js","components/markLineItem/markLineItem.js","components/colorLegend/colorLegend.js","components/dnetCharts/timePositionDnet/timePositionDnet.js","components/markItemGraph/markItemGraph.js","components/nodeLinkGraph/nodeLinkGraph.js","components/dnetCharts/timeAnimationDnet/timeAnimationDnet.js","components/dnetCharts/timeSumDnet/timeSumDnet.js","components/dnetCharts/dnetChartContainer/dnetChartContainer.js","util/dealfun.js","util/dnetv.js","components/previewItem/previewItem.js","util/preview.js","components/preview/preview.js","util/initConfig.js","redux/config.redux.js","components/grammarPanel/grammarPanel.js","components/grammar.js","components/exampleBoard/config.js","components/exampleBoard/exampleBoard.js","components/templateList/templateList.js","util/template.js","data/template.js","components/templatePanel/templatePanel.js","components/nodeLinkStylePanel/nodeLinkStylePanel.js","components/sampleItem/sampleItem.js","components/nodeLinkSample/nodeLinkSample.js","components/timePanel/timePanel.js","components/taskPanel/taskPanel.js","components/graphPanel/graphPanel.js","components/combinePanel/combinePanel.js","board.js","redux/index.js","index.js"],"names":["module","exports","initState","testData","graphs","setGraphData","data","type","dataset","dataName","description","getDataDescription","simpleData","insertData","flowData","shortPathData","emailData","tag","result","getDataInfo","times","nodes","links","length","nodeNumber","linkNumber","nodeMap","Map","linkMap","forEach","d","node","get","id","set","link","key","source","target","DataPanel","props","handleChangeData","setState","modalVisible","handleCancel","selectDataset","index","selected","handleCertainButton","selectedData","state","selectedDataName","overviewInfo","name","overview","sliderValue","groups","startToEnd","handleAddButton","groupInfo","slice","handleTimeSliderChange","value","selectGroupItem","selectedGroupIndex","tempStartToEnd","jsonData","compareEncode","filename","this","graphData","marks","0","style","color","label","className","src","dataBaseSvg","alt","onClick","display","justifyContent","alignItems","position","paddingLeft","paddingRight","marginTop","width","marginRight","marginBottom","range","max","defaultValue","onChange","size","marginLeft","overflowY","overflowX","itemLayout","dataSource","renderItem","item","Item","Meta","title","href","visible","onCancel","footer","disabled","React","Component","mapDispatchToProps","connect","ArcLinkItem","fill","stroke","strokeColor","opacity","strokeWidth","strokeDasharray","strokeType","LinkItem","timeId","x1","x","xOffset","y1","y","yOffset","x2","y2","COMPARISON_CONFIG","defaultConfigs","basic","height","eachWidth","eachHeight","margin","layout","chooseType","vertical","offLine","forceDirect","tickCount","grid","columnCount","onLine","bipartite","circle","applyDefault","startRadius","endRadius","rotateAngle","dagre","rankdir","nodeSep","rankSep","nodeStyle","shape","fillColor","radius","textColor","linkStyle","time","chooseTypes","insert","opcity","element","startColor","endColor","number","animation","speed","markLine","timeLine","xDistance","yDistance","comparison","isOn","keyFrame","elements","appearNode","stableNode","disappearNode","appearLink","stableLink","disappearLink","SAMPLE_LINK_SOURCE","SAMPLE_LINK_TARGET","MARK_LINK_SOURCE","MARK_LINK_TARGET","TASK_FIND_ATTR","TASK_FIND_RELATION","TASK_CHANGE_TYPES","TASK_TYPES","TASK_BASED_TYPES","TIME_ENCODING_TYPES","TIME_TIMELINE_ELEMENT","TIME_CHART_TYPE","TIME_TIMELINE_TYPE","GRAPH_LAYOUT_TYPE","KEYFRAM_OPTIONS","ROW_BUTTON_STYLE","boxSizing","padding","fontSize","lineHeight","alighItems","PATTERN_TO_CHANGE","TIME_BUTTON_STYLE","REACT_JSON_OPTIONS","displayDataTypes","indentWidth","fontFamily","theme","collapseStringsAfterLength","enableClipboard","displayObjectSize","TIME_CONFIG","LAYOUT_CONFIG","INSERT_POSITION","isTimeConfig","indexOf","isComparisonConfig","isLayoutConfig","getSvgWidthHeight","configs","len","svgWidth","svgHeight","graph","eachDis","getInsertPosition","getPiePathColor","d3","domain","getLinkData","isColor","colorScale","lineData","lastStart","xStep","yStep","i","newStart","push","getLineData","curveData","directFlag","Math","abs","center","stepAngle","PI","lastAngle","sin","cos","getCurveData","getArcPathData","getDividedArcPathData","firstData","secondData","coverTemplateConfig","newInitConfig","vConfig","assign","config","task","taskType","basedType","pattern","find","structure","change","addPatternAndChange","newSource","newTarget","flag","flag2","r","sqrt","pow","mx","my","LinkContainer","linkType","status","motionOpacity","typeA","typeB","getLineType","firstOption","secondOption","middleX","middleY","getDividedOptions","indexA","indexB","getHybridPathData","DividedLinkItem","existTimeIndex","linkData","map","v","NodeItem","cx","cy","HalfNodeItem","direction","NodeItemContainer","PieNodeItem","pathData","Array","pie","arc_generator","innerRadius","outerRadius","getPiePathData","transform","BarChartNodeItem","barChartData","startX","startY","stepX","k","getBarChartNodePath","itemData","ChartNodeItem","pathDatas","stepY","linePoints","resultGroup","line","getChartLineData","NodeContainer","nodesData","dataLength","isSum","nodeRenderType","isPosition","isChart","chartType","chart","getNodeRenderType","tempStyle","pointFillColor","pointShape","pointOpacity","MarkLineItem","markLineOptions","ColorLegend","legendData","timeChooseTypes","isSample","viewBox","preserveAspectRatio","dataItem","TimePositionDnet","isMatrix","sampleWidth","sampleHeight","MarkItemGraph","markRadius","NodeLinkGraph","sumData","hasTimeLine","TimeAnimationDnet","timeout","useState","frameIndex","setFrameIndex","playOrPause","setPlayOrPause","setSvgWidth","setSvgHeight","timeConfig","useEffect","clearTimeout","setTimeout","controlAnimation","handlePlayOrPause","PauseCircleOutlined","PlayCircleOutlined","included","min","tooltipVisible","tooltipPlacement","TimeSumDnet","DnetChartContainer","renderType","subGraphs","sumGraphs","_intersection","setA","setB","intersection","Set","elem","has","delete","_difference","difference","adjustLayout2Svg","ratio","minX","maxX","minY","maxY","ratioX","ratioY","translateX","translateY","nodeId2Coord","verticalLayout","l","step","nodesObj","bipartiteLayout","timeGraphs","firstNodesObj","secondNodesObj","secondNodes","sNode","_","pop","sumRevertLinksArr","sumLinksArr","souceId","targetId","sLink","timeGraphsValues","Object","values","graphIndex","sNodesArr","subReverLinksArr","revertLink","srLink","tempElement","graphLength","positionTransMap","getTranslateMap","tranX","tranY","dagreLayout","edges","DagreLayout","nodeSize","nodesep","ranksep","rNodes","oneMdsLayout","valueArr","value2y","mdsLayout","MDSLayout","gridLayout","GridLayout","begin","condense","rows","sortBy","circularLayout","CircularLayout","matrixLayout","sumGraph","stepWidth","nodeId2Xobj","yNodes","nodeId2Yobj","linkId2xyNode","linkId2yxNode","linkNodeX2Y","linkNodeY2X","sumLinks","id2Xnode","id2Ynode","id2LinkNodeX2Y","id2LinkNodeY2X","applyPosition2Node","yNode","existTimes","graphLinks","linkX","applyPosition2Link","linkY","tNodes","tLinks","rNode","posTranslate","forceLayout","force","tick","stop","randomLayout","RandomLayout","getmarkLine","tx","ty","keys","markId","markLineItem","getLinkPathData","setStyle","timeColorObj","tempComparison","comparisonNode","basicNodeStyle","comparisonLink","basicLinkStyle","getChooseComparisonStyle","isArray","isChooseColor","getGraphLayout","layoutNodes","fromEntries","layoutLinks","timeNodeResult","newNodes","sourceTimeId","targetTimeId","id2xy","_dealCompare","compareGraph","nodeSet","linkSet","appearNodes","disappearNodes","stableNodes","appear","disappear","stable","getFindData","findOptions","linkId","degree","startIndex","mapId2Index","mapIndex2Id","undefined","matrix","sourceIndex","targetIndex","sIndex","eIndex","dis","distanceArr","start","cols","Error","distance","Infinity","visited","j","minIndex","getShortestDistance","endIndex","maxDistance","shortestPath","shortestDistance","tempPath","Dfs","getShortestPath","nodeInPathMap","linkInPathMap","aId","bId","nodeId","attr","relation","compareTwoFrameAboutAttr","localFrame","compareFrame","compareNodesDegree","localDegree","DNetV","elementsName","linkSets","timeGraphSet","setData","setConfigs","oldData","_lodash","window","timeIndex","node2degree","add","existStatus","u","dealTask","dealLayout","changeOptionsToStatus","splice","nodeKey","linkKey","dealCompareData","timeArr","timeSet","graphSet","lastTime","lastGraphSet","nextTime","nextGraphSet","s","simulation","Promise","resolve","on","PreviewItem","setSubGraphs","setSumGraphs","setMarkLine","setRenderType","setIsSample","setSampleWidth","setSampleHeight","setConfig","dnetvInstance","initData","tempTimeGraphs","tempMarkLine","tempSumGraphs","JSON","stringify","tempRenderType","arr","downloadSvg","initConfig","circular","mds","pointRadius","pointStrokeWidth","pointStrokeColor","pointStrokeType","chooseItem","modifyConfig","payload","update","grammarType","setGrammarType","addSvg","console","log","content","blob","Blob","isFileSaverSupported","e","FileSaver","saveAs","open","encodeURI","onEdit","obj","updated_src","namespace","new_value","updataSrcTask","updateSimpleConfig","Grammar","Export","jsonOptions","fileList","showUploadList","beforeUpload","file","reader","FileReader","readAsText","onload","myData","myJson","parse","onSubmit","aria-hidden","xlinkHref","options","configSet","ExampleBoard","configItem","sumConfigs","filter","layoutKeys","tempArr","assignConfigs","TemplateList","nextProps","nextState","storageKeyArr","storageIndex","vContent","localStorage","getItem","checkSvg","handleTemplateCheck","deleteSvg","handleTemplateRemove","exampleData","keySort","a","b","aIndex","Number","split","getStorageKeyArr","isDnetStorageKey","sort","defaultTemplates","template","storageLength","setStorageLength","setStorageKeyArr","lastIndex","setItem","alert","storeKey","removeItem","colorIndexToName","Option","Select","Panel","Collapse","NodeLinkStylePanel","colorPickerDisplay","setColorPickerDisplay","changeOptions","strokeDasharrayOption","parseInt","changeElementStyle","option","optionKey","handleStyleChange","handleStrokeDashChange","join","handleElementColorClick","handleElementColorChange","colorCode","hex","expandIconPosition","backgroundColor","header","SampleItem","SLS","SLT","NodeLinkSample","handleIconsClick","Group","Button","TimePanel","elementColorPickerDisplay","optionObject","changeTimeConfig","handleTimeOptionsInput","handleTimeOptionsSelect","handleTimeLayoutType","handleButtonOnClick","handleTimeOptionsChange","event","tempIndex","MLS","MLT","columnButtonStyle","rowButtonStyle","index2chooseItem","TaskPanel","handleOptionChange","handleComparisonChange","handleSelectChange","handleFindChange","handleColumnChange","nodeOrLink","handleRowChange","changeAttr","handleIsOnChange","handleCheckChange","list","indeterminate","checkAll","handleAllCheckChange","checked","handleChangeCheckChange","handleTaskPanelChange","handleAllChangeCheckChange","changeTaskConfig","handleTaskPatternSelect","handleTaskChangeSelect","taskChange","changeIndeterminate","changeCheckAll","changeList","taskPattern","changeKey","defaultActiveKey","flexDirection","textAlign","GraphPanel","handleConfigChange","changeGraphConfig","optionItem","displayItem","handleLayoutTypeChange","layoutItem","CombinePanel","saveSvg","settingsSvg","Board","handleBoardSwitch","board","componentDidMount","scale","document","documentElement","clientWidth","jsonfile","graphSvg","combineReducers","action","store","createStore","reducers","script","createElement","getElementById","appendChild","ReactDOM","render"],"mappings":"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","file":"static/js/main.b5ac0876.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/download.d7cf46fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.1ea1ec04.svg\";","module.exports = __webpack_public_path__ + \"static/media/dataBase.3769bf32.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.e91ce918.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.c82675f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.ca935104.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.d6a6b416.svg\";","module.exports = __webpack_public_path__ + \"static/media/graphIcon.2bda4605.svg\";","import * as testData from '../data/import/test1.json'\r\n\r\nconst SET_GRAPH_DATA = \"SET_GRAPH_DATA\";\r\nconst initState = testData.default.graphs\r\n// const initState = []\r\n\r\nexport function graphData(state = initState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase SET_GRAPH_DATA:\r\n\t\t\treturn action.data\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n\r\nexport function setGraphData(data){\r\n\t// console.log(\"setGraphData--data\",data)\r\n\treturn { type: SET_GRAPH_DATA, data }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Modal, List, Button, Slider } from 'antd'\r\nimport './dataPanel.css'\r\nimport { connect } from \"react-redux\"\r\nimport { \r\n\tsetGraphData, \r\n} from '../../redux/graphData.redux.js'\r\nimport dataBaseSvg from '../../assets/dataBase.svg'\r\nimport * as testData from '../../data/import/test1.json'\r\nimport * as simpleData from '../../data/import/test2.json'\r\nimport * as insertData from '../../data/import/test3-insert.json'\r\nimport * as shortPathData from '../../data/import/test4.json'\r\nimport * as flowData from '../../data/import/test5.json'\r\nimport * as emailData from '../../data/import/email-data-dsssss.json'\r\n\r\nconst dataset = [\r\n    {\r\n        dataName: 'DynamicData-1',\r\n        description: getDataDescription(testData.default.graphs,'middle'),\r\n        // description: '测试数据，数据量一般',\r\n        data: testData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-2',\r\n        description: getDataDescription(simpleData.default.graphs,'small'),\r\n        // description: '测试数据，数据量一般',\r\n        data: simpleData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-3',\r\n        description: getDataDescription(insertData.default.graphs,'Insert'),\r\n        // description: '展示插入节点的样例数据',\r\n        data: insertData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-4',\r\n        // description: getDataDescription(flowData.default.graphs,'MdsOne'),\r\n        description: '#Times: 200; #Nodes: 50; #Links: 15;',\r\n        // description: '展示mds一维降维数据',\r\n        data: flowData.default\r\n    },\r\n    {\r\n        dataName: 'DynamicData-5',\r\n        description: getDataDescription(shortPathData.default.graphs,'shortPath'),\r\n        // description: '可以展示最短路径',\r\n        data: shortPathData.default\r\n    },\r\n    {\r\n        dataName: 'EmailData',\r\n        description: getDataDescription(emailData.default.graphs,'big'),\r\n        // description: '大数据量',\r\n        data: emailData.default\r\n    }\r\n]\r\n\r\nfunction getDataDescription(data,tag){\r\n    const result = getDataInfo(data)\r\n    // const description = `Times: ${result.times}; Nodes: ${result.nodes}; Links: ${result.links}; Tag:${tag}`\r\n    const description = `#Times: ${result.times}; #Nodes: ${result.nodes}; #Links: ${result.links};`\r\n    return description\r\n}\r\n\r\nfunction getDataInfo(data) {\r\n    const times = data.length\r\n    let nodeNumber = 0\r\n    let linkNumber = 0\r\n    let nodeMap = new Map()\r\n    let linkMap = new Map()\r\n    data.forEach((d) => {\r\n        d.nodes.forEach((node) => {\r\n            if (!nodeMap.get(node.id)) {\r\n                nodeMap.set(node.id, true)\r\n                nodeNumber++\r\n            }\r\n        })\r\n        d.links.forEach((link) => {\r\n            const key = `${link.source}-${link.target}`\r\n            if (!linkMap.get(key)) {\r\n                linkMap.set(key, true)\r\n                linkNumber++\r\n            }\r\n        })\r\n    })\r\n    return { times, nodes: nodeNumber, links: linkNumber }\r\n}\r\nclass DataPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            modalVisible: false,\r\n            selected: 0,\r\n            overview: {\r\n                name: '',\r\n                times: 0,\r\n                nodes: 0,\r\n                links: 0\r\n            },\r\n            sliderValue: [],\r\n            groups: [],\r\n            selectedGroupIndex: 0,\r\n            data: {}\r\n        }\r\n    }\r\n    handleChangeData = () => {\r\n        this.setState({\r\n            modalVisible: true\r\n        })\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            modalVisible: false\r\n        })\r\n    }\r\n    selectDataset = (index) => {\r\n        this.setState({\r\n            selected: index\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        const selectedDataName = dataset[this.state.selected].dataName\r\n        if (this.props.graphData && this.props.graphData.length) {\r\n            const overviewInfo = getDataInfo(this.props.graphData)\r\n            overviewInfo.name = selectedDataName\r\n            this.setState({\r\n                overview: overviewInfo,\r\n                sliderValue: [0, overviewInfo.times],\r\n                groups: [\r\n                    {\r\n                        ...overviewInfo,\r\n                        startToEnd: [0, overviewInfo.times]\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    handleCertainButton = () => {\r\n        const selectedData = dataset[this.state.selected].data.graphs\r\n        const selectedDataName = dataset[this.state.selected].dataName\r\n        if (selectedData && selectedData.length) {\r\n            const overviewInfo = getDataInfo(selectedData)\r\n            overviewInfo.name = selectedDataName\r\n            this.setState({\r\n                modalVisible: false,\r\n                overview: overviewInfo,\r\n                sliderValue: [0, overviewInfo.times],\r\n                groups: [\r\n                    {\r\n                        ...overviewInfo,\r\n                        startToEnd: [0, overviewInfo.times]\r\n                    }\r\n                ]\r\n            })\r\n            // 传递数据\r\n            this.props.setGraphData(dataset[this.state.selected].data.graphs)\r\n        }\r\n    }\r\n    handleAddButton = () => {\r\n        if (this.state.sliderValue[0] !== this.state.sliderValue[1]) {\r\n            const fileData = dataset[this.state.selected].data.graphs\r\n            const groupData = fileData.slice(this.state.sliderValue[0], this.state.sliderValue[1])\r\n            const groupInfo = getDataInfo(groupData)\r\n            this.setState({\r\n                groups: [\r\n                    ...this.state.groups,\r\n                    {\r\n                        ...groupInfo,\r\n                        startToEnd: this.state.sliderValue\r\n                    }\r\n                ]\r\n            })\r\n        }\r\n    }\r\n    handleTimeSliderChange = (value) => {\r\n        this.setState({\r\n            sliderValue: value\r\n        })\r\n    }\r\n    selectGroupItem = (index) => {\r\n        this.setState({\r\n            selectedGroupIndex: index\r\n        })\r\n        const tempStartToEnd = this.state.groups[index].startToEnd\r\n        const selectedData = dataset[this.state.selected].data.graphs\r\n        const data = {\r\n            jsonData: {\r\n                graphs: selectedData.slice(tempStartToEnd[0], tempStartToEnd[1]),\r\n                compareEncode: dataset[this.state.selected].data.compareEncode\r\n            },\r\n            filename: dataset[this.state.selected].dataset\r\n        }\r\n        // 传递数据\r\n        this.props.setGraphData(data.jsonData.graphs)\r\n    }\r\n    render() {\r\n        const marks = {\r\n            0: {\r\n                style: {\r\n                    color: '#000'\r\n                },\r\n                label: 0\r\n            },\r\n            [this.state.overview.times]: {\r\n                style: {\r\n                    color: '#000'\r\n                },\r\n                label: this.state.overview.times\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"data-box\">\r\n                <div className=\"sub-title\">\r\n                    {' '}\r\n                    &nbsp; Data\r\n                    <img\r\n                        className=\"icon\"\r\n                        src={dataBaseSvg}\r\n                        alt={\"dataBaseSvg\"}\r\n                        onClick={this.handleChangeData}\r\n                    />\r\n                </div>\r\n                <div className=\"divider\">Overview</div>\r\n                <div className=\"item0\">\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10,\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <div>{`Name: ${this.state.overview.name}`}</div>\r\n                        <div>{`Times: ${this.state.overview.times}`}</div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10,\r\n                            marginTop: 10\r\n                        }}\r\n                    >\r\n                        <div>{`Nodes: ${this.state.overview.nodes}`}</div>\r\n                        <div>{`Links: ${this.state.overview.links}`}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"divider\">Selection</div>\r\n                {this.state.overview.times > 0 ? (\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            position: 'relative',\r\n                            paddingLeft: 10,\r\n                            paddingRight: 10\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                width: '15%',\r\n                                marginRight: 10,\r\n                                marginBottom: 15\r\n                            }}\r\n                        >\r\n                            Times:{' '}\r\n                        </div>\r\n                        <Slider\r\n                            range\r\n                            marks={marks}\r\n                            max={this.state.overview.times}\r\n                            defaultValue={[0, this.state.overview.times]}\r\n                            style={{\r\n                                width: '50%'\r\n                            }}\r\n                            onChange={this.handleTimeSliderChange}\r\n                        />\r\n                        <Button\r\n                            // type=\"primary\"\r\n                            size=\"small\"\r\n                            onClick={this.handleAddButton}\r\n                            style={{\r\n                                marginLeft: 10,\r\n                                marginBottom: 15\r\n                            }}\r\n                        >\r\n                            Add\r\n                        </Button>\r\n                    </div>\r\n                ) : null}\r\n                <div className=\"divider\">Group</div>\r\n                {this.state.groups.length > 0 ? (\r\n                    <div\r\n                        className=\"data-group-container\"\r\n                        style={{\r\n                            marginLeft: 5,\r\n                            marginRight: 5,\r\n                            overflowY: 'scroll',\r\n                            overflowX: 'hidden'\r\n                        }}\r\n                    >\r\n                        <List\r\n                            itemLayout=\"horizontal\"\r\n                            dataSource={this.state.groups}\r\n                            renderItem={(item, index) => (\r\n                                <List.Item onClick={() => this.selectGroupItem(index)}>\r\n                                    <List.Item.Meta\r\n                                        title={\r\n                                            <a href=\"javascript:void(0)\">\r\n                                                {`Times: ${item.startToEnd[0]}-${item.startToEnd[1]}`}\r\n                                                {index === this.state.selectedGroupIndex\r\n                                                    ? ' selected'\r\n                                                    : ''}\r\n                                            </a>\r\n                                        }\r\n                                        description={`Nodes: ${item.nodes}  Links: ${item.links}`}\r\n                                        className={\r\n                                            index === this.state.selectedGroupIndex\r\n                                                ? 'selected'\r\n                                                : ''\r\n                                        }\r\n                                    />\r\n                                </List.Item>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n                <Modal\r\n                    title=\"Dataset\"\r\n                    visible={this.state.modalVisible}\r\n                    onCancel={this.handleCancel}\r\n                    footer={[]}\r\n                >\r\n                    <List\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={dataset}\r\n                        renderItem={(item, index) => (\r\n                            <List.Item onClick={() => this.selectDataset(index)}>\r\n                                <List.Item.Meta\r\n                                    title={\r\n                                        <a href=\"javascript:void(0)\">\r\n                                            {item.dataName}\r\n                                            {index === this.state.selected ? ' selected' : ''}\r\n                                        </a>\r\n                                    }\r\n                                    description={item.description}\r\n                                    className={index === this.state.selected ? 'selected' : ''}\r\n                                />\r\n                            </List.Item>\r\n                        )}\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around',\r\n                            marginTop: 30\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            // type=\"primary\"\r\n                            size=\"small\"\r\n                            disabled={this.state.selected === -1 ? true : false}\r\n                            onClick={this.handleCertainButton}\r\n                        >\r\n                            Select\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tgraphData: state.graphData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\tsetGraphData,\r\n} \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DataPanel)","import React from 'react'\r\n\r\nexport default function ArcLinkItem(props) {\r\n    if(!props.data){\r\n        return null\r\n    }\r\n    return (\r\n        <path\r\n            d={props.data}\r\n            fill={'none'}\r\n            stroke={props.strokeColor}\r\n            opacity={props.opacity}\r\n            strokeWidth={`${props.strokeWidth}px`}\r\n            strokeDasharray={\r\n                props.strokeType === 'solid' ? '' : '5,5 '\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LinkItem(props) {\r\n    return (\r\n        <line\r\n            id={props.timeId}\r\n            x1={props.source.x + (props.xOffset ? props.xOffset : 0)}\r\n            y1={props.source.y + (props.yOffset ? props.yOffset : 0)}\r\n            x2={props.target.x + (props.xOffset ? props.xOffset : 0)}\r\n            y2={props.target.y + (props.yOffset ? props.yOffset : 0)}\r\n            stroke={props.strokeColor}\r\n            strokeWidth={`${props.strokeWidth}px`}\r\n            opacity={props.opacity}\r\n            strokeDasharray={\r\n                props.strokeType === 'solid'\r\n                    ? ''\r\n                    : `${props.strokeWidth * 2},${props.strokeWidth * 2} `\r\n            }\r\n        ></line>\r\n    )\r\n}\r\n","export const COMPARISON_CONFIG = [\r\n    'shape',\r\n    'fillColor',\r\n    'strokeColor',\r\n    'strokeWidth',\r\n    'strokeType',\r\n    'radius',\r\n    'strokeDasharray',\r\n    'textColor'\r\n]\r\n\r\nexport const defaultConfigs = {\r\n    basic: {\r\n        width: 250,\r\n        height: 250,\r\n        eachWidth: 250,\r\n        eachHeight: 250,\r\n        margin: 30,\r\n        layout: {\r\n            chooseType: 'offLine',\r\n            vertical: {},\r\n            offLine: {},\r\n            forceDirect: {\r\n                tickCount: 10\r\n            },\r\n            grid: {\r\n                columnCount: 1\r\n            },\r\n            onLine: {},\r\n            bipartite: {},\r\n            circle: {\r\n                applyDefault: true,\r\n                startRadius: 50,\r\n                endRadius: 200,\r\n                rotateAngle: 720\r\n            },\r\n            dagre: {\r\n                rankdir: 'TB',\r\n                nodeSep: 5,\r\n                rankSep: 5\r\n            }\r\n        },\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white'\r\n        },\r\n        linkStyle: {\r\n            shape: 'curve',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 2,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        \r\n    },\r\n    layout: {\r\n        chooseType: 'offLine',\r\n        vertical: {},\r\n        offLine: {},\r\n        forceDirect: {\r\n            tickCount: 10\r\n        },\r\n        grid: {\r\n            columnCount: 1\r\n        },\r\n        onLine: {},\r\n        bipartite: {},\r\n        circle: {\r\n            applyDefault: true,\r\n            startRadius: 50,\r\n            endRadius: 200,\r\n            rotateAngle: 720\r\n        },\r\n        dagre: {\r\n            rankdir: 'TB',\r\n            nodeSep: 5,\r\n            rankSep: 5\r\n        }\r\n    },\r\n    time: {\r\n        chooseTypes: [],\r\n        insert: {\r\n            position: 'bottom',\r\n            margin: 10,\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#ffcc00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opcity: 1\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#ffcc00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3'\r\n            }\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#FD8F8F',\r\n            endColor: '#90B5FB',\r\n            number: 5\r\n        },\r\n        animation: {\r\n            speed: 1800\r\n        },\r\n        markLine: {\r\n            shape: 'line',\r\n            strokeType: 'dashed',\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5'\r\n        },\r\n        timeLine: {\r\n            xDistance: 250,\r\n            yDistance: 0,\r\n            // 有可能只对节点进行该操作\r\n            element: 'all'\r\n        }\r\n    },\r\n    comparison: {\r\n        isOn: true,\r\n        keyFrame: 'next',\r\n        elements: 'all',\r\n        chooseTypes: COMPARISON_CONFIG,\r\n        // keyFrame可为上一帧、下一帧、具体某一帧\r\n        appearNode: {\r\n            shape: 'circle',\r\n            fillColor: '#FD8F8F',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            radius: 8,\r\n            opacity: 1\r\n        },\r\n        stableNode: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        disappearNode: {\r\n            shape: 'circle',\r\n            fillColor: '#90B5FB',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 8,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        appearLink: {\r\n            shape: 'curve',\r\n            strokeColor: '#FD8F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 3,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        stableLink: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 1,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        },\r\n        disappearLink: {\r\n            shape: 'curve',\r\n            strokeColor: '#90B5FB',\r\n            strokeType: 'solid',\r\n            strokeWidth: 3,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3'\r\n        }\r\n    }\r\n}\r\n","export const TIME_PANEL_INPUT_WIDTH = 125\r\nexport const SAMPLE_LINK_SOURCE = {\r\n  x: 5,\r\n  y: 5\r\n}\r\nexport const SAMPLE_LINK_TARGET = {\r\n  x: 57,\r\n  y: 57\r\n}\r\n\r\nexport const MARK_LINK_SOURCE = {\r\n  x: 10,\r\n  y: 21\r\n}\r\n\r\nexport const MARK_LINK_TARGET = {\r\n  x: 248,\r\n  y: 21\r\n}\r\n\r\nexport const MARK_POINT_RADIUS = 6\r\n\r\nexport const SINGLE_LEGEND_WIDTH = 15\r\n\r\nexport const DNET_SAMPLE_WIDTH = 400\r\nexport const DNET_SAMPLE_HEIGHT = 65\r\n\r\n\r\nexport const SAMPLE_ITEM_WIDTH = 62\r\nexport const SAMPLE_ITEM_HEIGHT = 62\r\nexport const TASK_FIND_ATTR = ['degree']\r\nexport const TASK_FIND_STRUCTURE = ['shortest-path','dumb-bell']\r\nexport const TASK_FIND_RELATION = ['>=','=','<=']\r\n\r\nexport const TASK_PATTERN_TYPES = ['graph','shortest-path', 'frequent-structure','dumb-bell', 'compare-degree', 'find-degree', 'anomaly-detection']\r\nexport const TASK_CHANGE_TYPES = ['appearedNode', 'appearedEdge', 'disappearedNode', 'disappearedEdge','unchangedNode','unchangedEdge']\r\nexport const TASK_TYPES = ['comparison', 'find', 'none']\r\nexport const TASK_BASED_TYPES = ['structure', 'attr']\r\n\r\nexport const TIME_ENCODING_TYPES = ['timeLine', 'animation', 'color', 'markLine', 'insert', 'chart']\r\nexport const TIME_TIMELINE_ELEMENT = ['node', 'link', 'all']\r\nexport const TIME_CHART_TYPE = ['line', 'bar']\r\nexport const TIME_TIMELINE_TYPE = ['circular','linear']\r\nexport const GRAPH_LAYOUT_TYPE = ['matrix','grid','forceDirect','bipartite', 'vertical','circular','dagre','mds','random','oneMds']\r\n\r\nexport const KEYFRAM_OPTIONS = ['next', 'last']\r\n\r\n\r\nexport const ROW_BUTTON_STYLE = {\r\n  boxSizing: 'border-box',\r\n  width: '64px',\r\n  padding: '0px',\r\n  fontSize: '12px',\r\n  height: '64px',\r\n  lineHeight: '64px',\r\n  alighItems: 'center'\r\n}\r\n\r\nexport const PATTERN_TO_CHANGE = {\r\n  'compare-structure':[...TASK_CHANGE_TYPES],\r\n  'compare-attr': [...TASK_CHANGE_TYPES],\r\n  'find-structure': [...TASK_CHANGE_TYPES],\r\n  'find-attr': [...TASK_CHANGE_TYPES],\r\n  'graph': ['unchangedNode','unchangedEdge'],\r\n  'shortest-path': ['unchangedNode','unchangedEdge','appearedNode','appearedEdge'],\r\n  'dumb-bell': ['unchangedNode','unchangedEdge','appearedNode','appearedEdge'],\r\n  'compare-degree': ['unchangedNode','unchangedEdge','appearedNode','disappearedNode'],\r\n  'find-degree': ['unchangedNode','unchangedEdge','appearedNode']\r\n}\r\n\r\nexport const TIME_BUTTON_STYLE = {\r\n  boxSizing: 'border-box',\r\n  width: '252px',\r\n  padding: '0px',\r\n  fontSize: '12px',\r\n  height: '26px',\r\n  lineHeight: '26px',\r\n  alighItems: 'center'\r\n}\r\n\r\nexport const REACT_JSON_OPTIONS = {\r\n  displayDataTypes: false,\r\n  name: null,\r\n  indentWidth: 2,\r\n  fontFamily: 'consola',\r\n  theme:\"summerfruit:inverted\",\r\n  style:{\r\n    fontFamily: 'consola'\r\n  },\r\n  collapseStringsAfterLength: 20,\r\n  enableClipboard: false,\r\n  displayObjectSize: false\r\n}","import * as d3 from 'd3'\r\nimport { defaultConfigs,  COMPARISON_CONFIG} from './defaultConfig'\r\nimport * as _lodash from 'lodash'\r\nimport {\r\n    PATTERN_TO_CHANGE,\r\n    GRAPH_LAYOUT_TYPE,\r\n    TIME_ENCODING_TYPES,\r\n    TASK_TYPES,\r\n    TASK_BASED_TYPES\r\n} from './const.js'\r\nimport assign from 'assign-deep'\r\n\r\n\r\nconst TIME_CONFIG = ['timeLine', 'animation', 'color', 'markLine', 'insert']\r\nconst LAYOUT_CONFIG = ['offLine', 'vertical', 'onLine', 'circle', 'bipartite']\r\nexport const INSERT_POSITION = [ 'origin', 'center', 'top', 'bottom', 'left', 'right', 'topLeft', 'topRight', 'bottomRight', 'bottomLeft']\r\n\r\nexport const defaultConfigs_bak = {\r\n    layout: {\r\n        vertical: {\r\n            yDistance: 40,\r\n            linkStyle: {\r\n                overwrite: true,\r\n                shape: 'curve'\r\n            }\r\n        }\r\n    },\r\n    time: {\r\n        insert: {\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#ffcc00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#ffcc00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            bottomMargin: 20\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#FD8F8F',\r\n            endColor: '#90B5FB'\r\n        },\r\n        animation: {\r\n            speed: 800\r\n        },\r\n        markLine: {\r\n            overwrite: true,\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5'\r\n            // xDistance: 100\r\n            // yDistance: 40\r\n        },\r\n        timeLine: {\r\n            positionFlag: 1,\r\n            overwrite: true,\r\n            timeLineFlag: 1,\r\n            eachMargin: 5,\r\n            eachWidth: 180,\r\n            eachHeight: 200,\r\n            element: 'all',\r\n            leftMargin: 180\r\n        }\r\n    },\r\n    comparison: {\r\n        color: {\r\n            appearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#FD8F8F',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 6\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#DAD5D5',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#90B5FB',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            appearLink: {\r\n                strokeColor: '#FD8F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            stableLink: {\r\n                strokeColor: '#908F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            disappearLink: {\r\n                strokeColor: '#90B5FB',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            }\r\n        },\r\n        nodeColor: {\r\n            appearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#FD8F8F',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 6\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#DAD5D5',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#90B5FB',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white'\r\n            }\r\n        },\r\n        linkColor: {\r\n            appearLink: {\r\n                strokeColor: '#FD8F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            stableLink: {\r\n                strokeColor: '#908F8F',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            },\r\n            disappearLink: {\r\n                strokeColor: '#90B5FB',\r\n                strokeType: 'solid',\r\n                strokeWidth: 2\r\n            }\r\n        }\r\n    },\r\n    basic: {\r\n        eachMargin: 5,\r\n        width: 1010,\r\n        height: 250,\r\n        timeLineFlag: 0,\r\n        eachWidth: 200,\r\n        eachHeight: 250,\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#DAD5D5',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 6,\r\n            strokeType: 'solid',\r\n            textColor: 'white'\r\n        },\r\n        linkStyle: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 2\r\n        }\r\n    }\r\n}\r\n\r\nfunction isTimeConfig(item) {\r\n    return TIME_CONFIG.indexOf(item) > -1\r\n}\r\n\r\nfunction isComparisonConfig(item) {\r\n    return COMPARISON_CONFIG.indexOf(item) > -1\r\n}\r\n\r\nfunction isLayoutConfig(item) {\r\n    return LAYOUT_CONFIG.indexOf(item) > -1\r\n}\r\n\r\n// 获取svg画布的长宽大小\r\nexport function getSvgWidthHeight(configs, len) {\r\n    let svgWidth, svgHeight\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const { xDistance, yDistance,type } = configs.time.timeLine\r\n    if(type==='circular'){\r\n        const eachDis = eachWidth<eachHeight ? eachWidth: eachHeight\r\n        svgWidth = eachDis*(len/2) + margin*2 + eachDis*2\r\n        svgHeight = svgWidth\r\n    }else{\r\n        if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n            svgWidth = margin * 2 + eachWidth + xDistance * (len - 1)\r\n            svgHeight = margin * 2 + eachHeight + yDistance * (len - 1)\r\n        } else {\r\n            svgWidth = margin * 2 + eachWidth\r\n            svgHeight = margin * 2 + eachHeight\r\n        }\r\n    }\r\n    return { svgWidth, svgHeight }\r\n}\r\n\r\n// 获取插入节点的位置\r\nexport function getInsertPosition(configs){\r\n    let x,y\r\n    const {eachWidth, eachHeight} = configs.graph\r\n    const {margin, position} = configs.time.insert\r\n    switch (position){\r\n        case 'top':\r\n            x = eachWidth/2 \r\n            y = margin\r\n            break\r\n        case 'bottom':\r\n            x = eachWidth/2 \r\n            y = eachHeight - margin\r\n            break\r\n        case 'left':\r\n            x = margin\r\n            y = eachHeight/2\r\n            break\r\n        case 'right':\r\n            x = eachWidth - margin\r\n            y = eachHeight/2\r\n            break\r\n        case 'center':\r\n            x = eachWidth/2\r\n            y = eachHeight/2\r\n            break\r\n        case 'topLeft':\r\n            x = margin\r\n            y = margin\r\n            break\r\n        case 'topRight':\r\n            x = eachWidth - margin\r\n            y = margin\r\n            break\r\n        case 'bottomLeft':\r\n            x = margin\r\n            y = eachHeight - margin\r\n            break\r\n        case 'bottomRight':\r\n            x = eachWidth - margin\r\n            y = eachHeight - margin\r\n            break\r\n        default:\r\n            x = eachWidth/2 \r\n            y = eachHeight - margin\r\n            break\r\n    }\r\n    return {x,y}\r\n}\r\n\r\nexport function assignConfigs(setConfigs) {\r\n    let configs = _lodash.cloneDeep(setConfigs)\r\n    let sumConfigs = _lodash.cloneDeep(defaultConfigs)\r\n\r\n    // 处理time的覆盖\r\n    if ('time' in configs) {\r\n        if (typeof configs.time === 'string' && isTimeConfig(configs.time)) {\r\n            sumConfigs.time.chooseTypes = [configs.time]\r\n        } else if (_lodash.isArray(configs.time)) {\r\n            sumConfigs.time.chooseTypes = configs.time.filter(isTimeConfig)\r\n        } else if (typeof configs.time === 'object') {\r\n            // 是一个对象\r\n            let chooseTypes = new Set()\r\n            Object.keys(configs.time)\r\n                .filter(isTimeConfig)\r\n                .forEach((item) => {\r\n                    chooseTypes.add(item)\r\n                })\r\n            if (configs.time.chooseTypes) {\r\n                // 如果其中存在chooseTypes进行处理\r\n                if (\r\n                    typeof configs.time.chooseTypes === 'string' &&\r\n                    isTimeConfig(configs.time.chooseTypes)\r\n                ) {\r\n                    chooseTypes.add(configs.time.chooseTypes)\r\n                } else if (_lodash.isArray(configs.time.chooseTypes)) {\r\n                    configs.time.chooseTypes.filter(isTimeConfig).forEach((item) => {\r\n                        chooseTypes.add(item)\r\n                    })\r\n                }\r\n            }\r\n            configs.time.chooseTypes = [...chooseTypes]\r\n            // 逐层进行覆盖\r\n            assign(sumConfigs.time, configs.time)\r\n        }\r\n    }\r\n    delete configs.time\r\n\r\n    // 处理layout的覆盖\r\n    if ('layout' in configs) {\r\n        if (typeof configs.layout === 'string' && isLayoutConfig(configs.layout)) {\r\n            sumConfigs.layout.chooseType = configs.layout\r\n        } else if (_lodash.isArray(configs.layout)) {\r\n            configs.layout = configs.layout.filter(isLayoutConfig)\r\n            sumConfigs.layout.chooseType =\r\n                configs.layout.length > 0 ? configs.layout[0] : LAYOUT_CONFIG[0]\r\n        } else {\r\n            // 是一个对象\r\n            let layoutKeys = Object.keys(configs.layout).filter(isLayoutConfig)\r\n\r\n            if (configs.layout.chooseType && _lodash.isArray(configs.layout.chooseType)) {\r\n                const tempArr = configs.layout.chooseType.filter(isLayoutConfig)\r\n                if (tempArr.length > 0) {\r\n                    configs.layout.chooseType = tempArr[0]\r\n                }\r\n            }\r\n            if (!configs.layout.chooseType || !isLayoutConfig(configs.layout.chooseType)) {\r\n                if (layoutKeys.length > 0) {\r\n                    configs.layout.chooseType = layoutKeys[0]\r\n                } else {\r\n                    configs.layout.chooseType = LAYOUT_CONFIG[0]\r\n                }\r\n            }\r\n            assign(sumConfigs.layout, configs.layout)\r\n        }\r\n        delete configs.layout\r\n    }\r\n\r\n    // 处理comparison的覆盖\r\n    if ('comparison' in configs) {\r\n        if (typeof configs.comparison === 'boolean' && configs.comparison) {\r\n            // 全部开启\r\n            sumConfigs.comparison.isOn = true\r\n            sumConfigs.comparison.chooseTypes = COMPARISON_CONFIG\r\n        } else if (\r\n            typeof configs.comparison === 'string' &&\r\n            isComparisonConfig(configs.comparison)\r\n        ) {\r\n            sumConfigs.comparison.chooseTypes = [configs.comparison]\r\n        } else if (_lodash.isArray(configs.comparison)) {\r\n            sumConfigs.comparison.chooseTypes = configs.comparison.filter(isComparisonConfig)\r\n        } else {\r\n            // 是对象\r\n            if (configs.comparison.chooseTypes) {\r\n                if (\r\n                    typeof configs.comparison.chooseTypes === 'string' &&\r\n                    isComparisonConfig(configs.comparison.chooseTypes)\r\n                ) {\r\n                    configs.comparison.chooseTypes = [configs.comparison.chooseTypes]\r\n                } else if (_lodash.isArray(configs.comparison.chooseTypes)) {\r\n                    const tempArr = configs.comparison.chooseTypes.filter(isComparisonConfig)\r\n                    configs.comparison.chooseTypes =\r\n                        tempArr.length > 0 ? tempArr : COMPARISON_CONFIG\r\n                } else {\r\n                    configs.comparison.chooseTypes = COMPARISON_CONFIG\r\n                }\r\n            } else {\r\n                configs.comparison.chooseTypes = COMPARISON_CONFIG\r\n            }\r\n            assign(sumConfigs.comparison, configs.comparison)\r\n        }\r\n    }\r\n    delete configs.comparison\r\n\r\n    // 处理basic的配置\r\n    if ('basic' in configs) {\r\n        assign(sumConfigs.basic, configs.basic)\r\n    }\r\n    delete configs.basic\r\n\r\n    // 将configs的其余配置覆盖到basic中\r\n    assign(sumConfigs.basic, configs)\r\n    return sumConfigs\r\n}\r\n\r\n/*\r\nexport const assignConfigs = (setConfigs) => {\r\n    let configs = _lodash.cloneDeep(setConfigs)\r\n    let sumConfigs = {}\r\n    assign(sumConfigs, defaultConfigs.basic)\r\n    Object.keys(defaultConfigs).forEach((key) => {\r\n        sumConfigs[key] = {}\r\n    })\r\n    Object.keys(configs).forEach((key) => {\r\n        let encoding = configs[key]\r\n        if (typeof encoding === 'string') {\r\n            //timeLine\r\n            if (key in defaultConfigs) {\r\n                sumConfigs[key][encoding] = _lodash.cloneDeep(defaultConfigs[key][encoding])\r\n            } else {\r\n                sumConfigs[key] = encoding\r\n            }\r\n        } else if (_.isArray(encoding)) {\r\n            // time: ['timeLine', 'insert', 'markLine'] 类似于选择作用\r\n            encoding.forEach((e) => {\r\n                if (typeof e === 'string') {\r\n                    sumConfigs[key][e] = _lodash.cloneDeep(defaultConfigs[key][e])\r\n                } else {\r\n                    const e1 = Object.keys(e)[0]\r\n                    sumConfigs[key][e1] = _lodash.cloneDeep(defaultConfigs[key][e1])\r\n                    assign(sumConfigs[key], e)\r\n                }\r\n            })\r\n        } else {\r\n            const e = Object.keys(encoding)[0]\r\n            sumConfigs[key][e] = _lodash.cloneDeep(defaultConfigs[key][e])\r\n            assign(sumConfigs[key], encoding)\r\n        }\r\n    })\r\n    if ('layout' in sumConfigs) {\r\n        sumConfigs.layoutName = Object.keys(sumConfigs.layout)[0]\r\n    }\r\n    sumConfigs.renderType = 'timeLine'\r\n    if (sumConfigs.time && sumConfigs.time.animation) {\r\n        sumConfigs.renderType = 'animation'\r\n    } else {\r\n        // if (sumConfigs.time && sumConfigs.time.color) {\r\n        //     sumConfigs.renderType = 'color'\r\n        // }\r\n    }\r\n    // console.log(defaultConfigs.time.timeLine.element)\r\n    return sumConfigs\r\n}\r\n*/\r\n\r\n// export const timeEncodingOrder = {\r\n//     position: 0,\r\n//     animation: 1,\r\n//     color: 2,\r\n//     link: 3\r\n// }\r\n\r\nexport function getRenderType(arr) {\r\n    if (arr.indexOf('animation') > -1) {\r\n        return 'animation'\r\n    } else if (arr.indexOf('timeLine') > -1) {\r\n        return 'timeLine'\r\n    } else{\r\n        return 'sum'\r\n    }\r\n    // else if(arr.indexOf('chart') > -1){\r\n    //     return 'chart'\r\n    // }else if (arr.indexOf('color') > -1) {\r\n    //     return 'color'\r\n    // } else{  \r\n    //     return 'sumGraph'\r\n    // }\r\n}\r\n\r\n// 根据输入的参数，和默认的配置，合成最终的配置\r\n// 检验输入的参数，确保基础config没有问题\r\nexport function composeConfig(configItem) {\r\n    const config = deepClone(defaultConfigs)\r\n    if (!configItem.time || Object.prototype.toString.call(configItem.time) !== '[object Array]') {\r\n        config.time.chooseTypes = ['position']\r\n    } else {\r\n        config.time.chooseTypes = configItem.time.filter((item) => TIME_CONFIG.indexOf(item) > -1)\r\n    }\r\n    config.comparison.isOn = configItem.comparison ? true : false\r\n    config.layout.chooseTypes =\r\n        LAYOUT_CONFIG.indexOf(configItem.layout) > -1 ? configItem.layout : 'offLine'\r\n    if (Object.prototype.toString.call(configItem.coverConfig) === '[object Object]') {\r\n        coverConfig(config, configItem.coverConfig)\r\n    }\r\n    return config\r\n}\r\n\r\nexport function deepClone(Obj) {\r\n    var buf\r\n    if (Obj instanceof Array) {\r\n        buf = [] //创建一个空的数组\r\n        var i = Obj.length\r\n        while (i--) {\r\n            buf[i] = deepClone(Obj[i])\r\n        }\r\n        return buf\r\n    } else if (Obj instanceof Object) {\r\n        buf = {} //创建一个空对象\r\n        for (var k in Obj) {\r\n            //为这个对象添加新的属性\r\n            buf[k] = deepClone(Obj[k])\r\n        }\r\n        return buf\r\n    } else {\r\n        return Obj\r\n    }\r\n}\r\n\r\nexport function coverConfig(originConfig, newConfig) {\r\n    if (Object.prototype.toString.call(newConfig) === '[object Array]') {\r\n        for (let i = 0; i < newConfig.length; i++) {\r\n            if (typeof newConfig[i] !== 'object') {\r\n                originConfig[i] = newConfig[i]\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[i]) === '[object Array]' &&\r\n                Object.prototype.toString.call(originConfig[i]) === '[object Array]'\r\n            ) {\r\n                coverConfig(originConfig[i], newConfig[i])\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[i]) === '[object Object]' &&\r\n                Object.prototype.toString.call(originConfig[i]) === '[object Object]'\r\n            ) {\r\n                coverConfig(originConfig[i], newConfig[i])\r\n            }\r\n        }\r\n    } else if (Object.prototype.toString.call(newConfig) === '[object Object]') {\r\n        for (let key in newConfig) {\r\n            if (typeof newConfig[key] !== 'object') {\r\n                // 直接覆盖\r\n                originConfig[key] = newConfig[key]\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[key]) === '[object Array]' &&\r\n                Object.prototype.toString.call(originConfig[key]) === '[object Array]'\r\n            ) {\r\n                // 递归覆盖\r\n                coverConfig(originConfig[key], newConfig[key])\r\n            } else if (\r\n                Object.prototype.toString.call(newConfig[key]) === '[object Object]' &&\r\n                Object.prototype.toString.call(originConfig[key]) === '[object Object]'\r\n            ) {\r\n                // 递归覆盖\r\n                coverConfig(originConfig[key], newConfig[key])\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function getDividedOptions(props, status) {\r\n    const firstOption = {\r\n        ...props,\r\n        ...props.style[status[0]]\r\n    }\r\n    const secondOption = {\r\n        ...props,\r\n        ...props.style[status[1]]\r\n    }\r\n    const middleX = (props.source.x + props.target.x) / 2\r\n    const middleY = (props.source.y + props.target.y) / 2\r\n    firstOption.target = {\r\n        ...firstOption.target,\r\n        x: middleX,\r\n        y: middleY\r\n    }\r\n    secondOption.source = {\r\n        ...secondOption.source,\r\n        x: middleX,\r\n        y: middleY\r\n    }\r\n    return { firstOption, secondOption }\r\n}\r\nexport function getPiePathData(radius, len) {\r\n    const dataset = new Array(len).fill(1)\r\n\r\n    //新建一个饼状图\r\n    var pie = d3.pie()\r\n\r\n    //新建一个弧形生成器\r\n    var arc_generator = d3.arc().innerRadius(0).outerRadius(radius)\r\n\r\n    //利用饼状图生成器转换数据\r\n    var pieData = pie(dataset)\r\n    //控制台，打印pieData\r\n    const pathData = pieData.map((v) => arc_generator(v))\r\n    return pathData\r\n}\r\n\r\nexport function getBarChartNodePath(radius, len) {\r\n    const pathData = []\r\n    let startX = -1*radius, startY = -1*radius\r\n    let stepX = radius*2/len\r\n    let k = 0\r\n    while(k<len){\r\n        pathData.push({\r\n            x: startX,\r\n            y: startY,\r\n            width: stepX,\r\n            height: radius*2\r\n        })\r\n        startX += stepX\r\n        k++\r\n    }\r\n    return pathData\r\n}\r\n\r\n\r\nexport function getPiePathColor(len, startColor, endColor) {\r\n    //设置颜色比例尺\r\n    let colorScale\r\n    if (!startColor || !endColor) {\r\n        colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    } else {\r\n        // console.log(\"d3.range(len)\", d3.range(len))\r\n        colorScale = d3\r\n            .scaleLinear()\r\n            .domain([0, len - 1])\r\n            .range([startColor, endColor])\r\n    }\r\n    return colorScale\r\n}\r\n\r\n\r\nexport function getChartPathColor(len, startColor, endColor) {\r\n    //设置颜色比例尺\r\n    let colorScale\r\n    if (!startColor || !endColor) {\r\n        colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    } else {\r\n        // console.log(\"d3.range(len)\", d3.range(len))\r\n        colorScale = d3\r\n            .scaleLinear()\r\n            .domain([0, len - 1])\r\n            .range([startColor, endColor])\r\n    }\r\n    return colorScale\r\n}\r\n\r\n/** 节点的策略函数 */\r\nexport function getNodeRenderType(config, isColor, isPosition = true){\r\n    const isChart = config.time.chooseTypes.indexOf('chart') > -1\r\n    const { nodeStyle } = config.graph\r\n    const chartType = config.time.chart&&config.time.chart.type ? config.time.chart.type: 'line'\r\n    if(isChart){\r\n        if(chartType==='line'){\r\n            return 'lineChartNode'\r\n        }else{\r\n            if(nodeStyle.shape==='circle'){\r\n                return 'pieNode'\r\n            }else{\r\n                return 'barNode'\r\n            }\r\n        }\r\n    }else if(isColor&&isPosition){\r\n        if(nodeStyle.shape==='circle'){\r\n            return 'pieNode'\r\n        }else{\r\n            return 'barNode'\r\n        }\r\n    }else{\r\n        return 'simpleNode'\r\n    }\r\n}\r\n\r\nexport function getCurveData(len, data, isColor, strokeColor,colorScale ) {\r\n    const curveData = []\r\n    let lastStart = {\r\n        x: data.source.x,\r\n        y: data.source.y\r\n    }\r\n    const directFlag = data.source.y< data.target.y ? 1 : -1\r\n    const radius = Math.abs((data.source.y - data.target.y)/2)\r\n\r\n    const center = {\r\n        x: data.source.x,\r\n        y: (data.source.y + data.target.y)/2\r\n    }\r\n    \r\n    const stepAngle = Math.PI/len\r\n    let lastAngle = stepAngle\r\n\r\n    let i = 0\r\n    if(isColor){\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: center.x + directFlag*radius*Math.sin(lastAngle) ,\r\n                y: center.y - directFlag*radius*Math.cos(lastAngle) ,\r\n            }\r\n            curveData.push({\r\n                data: `M ${lastStart.x} ${lastStart.y} A ${radius} ${radius} 0 0 1 ${newStart.x} ${newStart.y} `,\r\n                color: colorScale(i)\r\n            })            \r\n            lastAngle += stepAngle\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }else{\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: center.x + directFlag*radius*Math.sin(lastAngle) ,\r\n                y: center.y - directFlag*radius*Math.cos(lastAngle) ,\r\n            }\r\n            curveData.push({\r\n                data: `M ${lastStart.x} ${lastStart.y} A ${radius} ${radius} 0 0 1 ${newStart.x} ${newStart.y} `,\r\n                color: strokeColor\r\n            })\r\n            lastAngle += stepAngle\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }\r\n    return curveData\r\n}\r\n\r\nexport function getLineData(len, data, isColor, strokeColor,colorScale) {\r\n    const lineData = []\r\n    let lastStart = {\r\n        x: data.source.x,\r\n        y: data.source.y\r\n    }\r\n    let xStep = (data.target.x - data.source.x) / len\r\n    let yStep = (data.target.y - data.source.y) / len\r\n    let i = 0\r\n    if(isColor){\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: lastStart.x + xStep,\r\n                y: lastStart.y + yStep\r\n            }\r\n            lineData.push({\r\n                source: lastStart,\r\n                target: newStart,\r\n                color: colorScale(i)\r\n            })\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }else{\r\n        while (i < len) {\r\n            const newStart = {\r\n                x: lastStart.x + xStep,\r\n                y: lastStart.y + yStep\r\n            }\r\n            lineData.push({\r\n                source: lastStart,\r\n                target: newStart,\r\n                color: strokeColor\r\n            })\r\n            lastStart = newStart\r\n            i++\r\n        }\r\n    }\r\n    return lineData\r\n}\r\n\r\nexport function getLinkData(len, data, shape, isColor, strokeColor,colorScale) {\r\n    return shape === 'line' ?  getLineData(len, data, isColor, strokeColor,colorScale): getCurveData(len, data, isColor, strokeColor,colorScale)\r\n}\r\n\r\n// export function getArcPathData(y1, y2) {\r\n//     const r = Math.abs(y2 - y1) / 2\r\n//     return `M 0,${y1}A${r},${r} 0,0,1 0,${y2}`\r\n// }\r\n\r\nexport function getLinkOpacity(props){\r\n    const { status, type , style} = props\r\n    if(type==='time'|| status.length === 0){\r\n        return style.linkStyle.opacity\r\n    }else if(status.length === 1){\r\n        return style[status[0]].opacity\r\n    }\r\n}\r\n\r\nexport function getLineType(status, style){\r\n    const typeA = style[status[0]].shape\r\n    const typeB = style[status[1]].shape\r\n    if(typeA === typeB){\r\n        return typeA === 'curve'? 'curve': 'line'\r\n    }else{\r\n        return [typeA, typeB]\r\n    }\r\n}\r\n\r\nexport function getArcPathData(source, target) {\r\n    const { firstData, secondData} = getDividedArcPathData(source, target)\r\n    return firstData + secondData\r\n}\r\n\r\nexport function getHybridPathData(source, target) {\r\n    let newSource, newTarget\r\n    // source在上，target在下\r\n    if (source.y > target.y) {\r\n        newSource = target\r\n        newTarget = source\r\n    } else {\r\n        newSource = source\r\n        newTarget = target\r\n    }\r\n    const x1 = newSource.x\r\n    const y1 = newSource.y\r\n    const x2 = newTarget.x\r\n    const y2 = newTarget.y\r\n    const flag = x1 < x2 ? 1 : -1\r\n    const flag2 = x1 < x2 ? 1 : 0\r\n    const r = (Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2 - x1, 2)) * Math.sqrt(2)) / 2\r\n    if (r === 0) {\r\n        return { firstData: null, secondData: null }\r\n    }\r\n    let mx = (x1 + x2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (y2 - y1)) / (Math.sqrt(2) * r)\r\n    let my = (y1 + y2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (x1 - x2)) / (Math.sqrt(2) * r)\r\n    const firstData = `M ${x1},${y1}A${r},${r} 0,0,${flag2} ${mx},${my}`\r\n    const secondData = `M ${mx},${my} L ${x2},${y2}`\r\n    // console.log(\"firstData\",\"secondData\",firstData,secondData)\r\n    return { firstData, secondData }\r\n}\r\n\r\nexport function getConfigPatternChange(task){\r\n    if(task.taskType==='comparison'){\r\n        if(task.basedType==='structure'){\r\n            return { pattern:'compare-structure',change:'all'}\r\n        }else{\r\n            return { pattern:'compare-degree', change: 'appeared'}\r\n        }\r\n    }else if(task.taskType === 'find'){\r\n        if(task.basedType==='structure'){\r\n            if(task.find.structure==='shortest-path'){\r\n                return { pattern:\"shortest-path\",change:'appeared'}\r\n            }else{\r\n                return { pattern:'dumb-bell',change:'appeared'}\r\n            }\r\n        }else{\r\n            return { pattern:'find-degree',change: 'appearedNode'}\r\n        }\r\n    }else{\r\n        return { pattern:'graph',change: 'unchanged'}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function addPatternAndChange(config){\r\n    const {task} = config\r\n    if(task.taskType==='comparison'){\r\n        if(task.basedType==='structure'){\r\n            task.pattern = 'compare-structure'\r\n        }else{\r\n            task.pattern = 'compare-attr'\r\n        }\r\n    }else if(task.taskType === 'find'){\r\n        if(task.basedType==='structure'){\r\n            if(task.find.structure==='shortest-path'){\r\n                task.pattern = 'shortest-path'\r\n            }else{\r\n                task.pattern = 'dumb-bell'\r\n            }\r\n        }else{\r\n            task.pattern = 'find-attr'\r\n        }\r\n    }else{\r\n        task.pattern = 'graph'\r\n    }\r\n    task.change = [...PATTERN_TO_CHANGE[task.pattern]]\r\n}\r\n\r\nexport function coverTemplateConfig(newInitConfig, vConfig){\r\n    assign(newInitConfig, vConfig)\r\n    addPatternAndChange(newInitConfig)\r\n}\r\n\r\n\r\nexport function getSimpleGrammar(config){\r\n    return {\r\n        graph:{\r\n            layout: config.graph.layout.chooseType\r\n        },\r\n        time: config.time.chooseTypes,\r\n        task: {\r\n            taskType:config.task.taskType,\r\n            basedType: config.task.basedType\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateSimpleConfig(obj, config, modifyConfig){\r\n    if(obj.namespace[0]==='graph'){\r\n        if(GRAPH_LAYOUT_TYPE.indexOf(obj.new_value)>-1){\r\n            modifyConfig({\r\n                key: 'graph',\r\n                value: {\r\n                    layout:{\r\n                        ...config.graph.layout,\r\n                        chooseType: obj.new_value\r\n                    }\r\n                }\r\n            })\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n        \r\n    }else if(obj.namespace[0]==='time'){\r\n        if(TIME_ENCODING_TYPES.indexOf(obj.new_value)>-1){\r\n            modifyConfig({\r\n                key: 'time' ,\r\n                value: {\r\n                    chooseTypes : obj.updated_src.time\r\n                }\r\n            })\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n        \r\n    }else{\r\n        const updataSrcTask = obj.updated_src.task\r\n        if(TASK_TYPES.indexOf(updataSrcTask.taskType)>-1&&TASK_BASED_TYPES.indexOf(updataSrcTask.basedType)>-1){\r\n            modifyConfig({\r\n                key: 'task' ,\r\n                value: {\r\n                    [obj.name]: obj.new_value\r\n                }\r\n            })\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport function getDividedArcPathData(source, target) {\r\n    let newSource, newTarget\r\n    // source在上，target在下\r\n    if (source.y > target.y) {\r\n        newSource = target\r\n        newTarget = source\r\n    } else {\r\n        newSource = source\r\n        newTarget = target\r\n    }\r\n    const x1 = newSource.x\r\n    const y1 = newSource.y\r\n    const x2 = newTarget.x\r\n    const y2 = newTarget.y\r\n    const flag = x1 < x2 ? 1 : -1\r\n    const flag2 = x1 < x2 ? 1 : 0\r\n    const r = (Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2 - x1, 2)) * Math.sqrt(2)) / 2\r\n    if (r === 0) {\r\n        return { firstData: null, secondData: null }\r\n    }\r\n    let mx = (x1 + x2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (y2 - y1)) / (Math.sqrt(2) * r)\r\n    let my = (y1 + y2) / 2 + (flag * (1 - Math.sqrt(2) / 2) * r * (x1 - x2)) / (Math.sqrt(2) * r)\r\n    const firstData = `M ${x1},${y1}A${r},${r} 0,0,${flag2} ${mx},${my}`\r\n    const secondData = `M ${mx},${my}A${r},${r} 0,0,${flag2} ${x2},${y2}`\r\n    // console.log(\"firstData\",\"secondData\",firstData,secondData)\r\n    return { firstData, secondData }\r\n}\r\n\r\nexport function getChartLineData(radius, existTimeIndex , colorScale, isColor,strokeColor){\r\n    let startX = -1*radius\r\n    const stepX = radius*2/(existTimeIndex.length-1)\r\n    const stepY = radius/2\r\n    const linePoints = existTimeIndex.map((v,index)=>{\r\n        let result \r\n        if(v === 1){\r\n            result =  {\r\n                x: startX,\r\n                y: -1*stepY\r\n            }\r\n        }else{\r\n            result =  {\r\n                x: startX,\r\n                y: stepY\r\n            }\r\n           \r\n        }\r\n        startX += stepX\r\n        return result\r\n    })\r\n    let resultGroup = []\r\n    for(let i = 1;i<linePoints.length;i++){\r\n        resultGroup.push({source:linePoints[i-1],target:linePoints[i]})\r\n    }\r\n\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const chartLineData = resultGroup.map((line, index)=>{\r\n        return {\r\n            data: link(line),\r\n            color: isColor ? colorScale(index) : strokeColor\r\n        }\r\n    })\r\n        \r\n    return chartLineData\r\n}\r\n\r\nexport function getLinkPathData(markLine, nodeNum) {\r\n    const colorScale = d3.scaleOrdinal().domain(d3.range(nodeNum)).range(d3.schemeCategory10)\r\n    // console.log('node2PathData', node2PathData)\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    \r\n    const linkPathData = Object.keys(markLine).map((markId, index) => {\r\n        const curveData = []\r\n        markLine[markId].forEach((markLineItem) => {\r\n            \r\n            curveData.push(link(markLineItem))\r\n        })\r\n        return {\r\n            id: markId,\r\n            data: curveData,\r\n            color: colorScale[index]\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\n\r\n\r\n\r\n/*\r\nexport function getLinkPathData2(data, xDistance, yDistance, margin, nodeNum) {\r\n    const colorScale = d3.scaleOrdinal().domain(d3.range(nodeNum)).range(d3.schemeCategory10)\r\n    let node2PathData = {}\r\n    let nodeIndex = 0\r\n    data.forEach((dataItem, frameIndex) => {\r\n        dataItem.nodes.forEach((v, j) => {\r\n            let coord = {\r\n                x: margin + frameIndex * xDistance,\r\n                y: margin + j * yDistance\r\n            }\r\n            if (!node2PathData[v.id]) {\r\n                node2PathData[v.id] = {\r\n                    id: v.id,\r\n                    lastFrame: frameIndex,\r\n                    lastData: [coord],\r\n                    data: [],\r\n                    color: colorScale(nodeIndex++)\r\n                }\r\n            } else {\r\n                if (frameIndex === node2PathData[v.id].lastFrame + 1) {\r\n                    // 表示是连续存在\r\n                    node2PathData[v.id].lastData.push(coord)\r\n                } else {\r\n                    // 表示已经断开，重启一组数组\r\n                    node2PathData[v.id].data.push(node2PathData[v.id].lastData)\r\n                    node2PathData[v.id].lastData = [coord]\r\n                }\r\n                node2PathData[v.id].lastFrame = frameIndex\r\n            }\r\n        })\r\n    })\r\n    console.log('node2PathData', node2PathData)\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const linkPathData = Object.keys(node2PathData).map((v) => {\r\n        node2PathData[v].data.push(node2PathData[v].lastData)\r\n        const curveData = []\r\n        node2PathData[v].data.forEach((dataItem) => {\r\n            if (dataItem.length > 1) {\r\n                for (let i = 1; i < dataItem.length; i++) {\r\n                    curveData.push(\r\n                        link({\r\n                            source: dataItem[i - 1],\r\n                            target: dataItem[i]\r\n                        })\r\n                    )\r\n                }\r\n            }\r\n        })\r\n        return {\r\n            id: v,\r\n            data: curveData,\r\n            color: node2PathData[v].color\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\n\r\n*/\r\n","import React from 'react'\r\nimport ArcLinkItem from '../arcLinkItem/arcLinkItem.js'\r\nimport LinkItem from '../linkItem/linkItem.js'\r\nimport { \r\n    getDividedArcPathData, \r\n    getArcPathData, \r\n    getDividedOptions, \r\n    getLineType,\r\n    getHybridPathData\r\n} from '../../util/dnetChart.js'\r\n\r\n\r\nexport default function LinkContainer(props) {\r\n    const { source, target, opacity = 1, status=[], type, style} = props\r\n    \r\n    let linkType \r\n    if(type==='time'||status.length === 0){\r\n        // comparison状态没有开启\r\n        linkType = style.linkStyle.shape\r\n        if(linkType === 'curve'){\r\n            return (\r\n                <ArcLinkItem\r\n                    data = {getArcPathData(source, target)}\r\n                    {...style.linkStyle}\r\n                    motionOpacity={opacity}\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <LinkItem\r\n                    {...style.linkStyle}\r\n                    motionOpacity={opacity}\r\n                    {...props}\r\n                />\r\n            )\r\n        }\r\n        \r\n    }else if (status.length === 1) {\r\n        // comparison状态开启，状态只有一个\r\n        linkType = style[status[0]].shape\r\n        if(linkType === 'curve'){\r\n            return (\r\n                <ArcLinkItem\r\n                    data = {getArcPathData(source, target)}\r\n                    {...style[status[0]]}\r\n                    motionOpacity={opacity}\r\n                />\r\n            )\r\n        }else{\r\n            return (\r\n                <LinkItem\r\n                    {...style[status[0]]}\r\n                    motionOpacity={opacity}\r\n                    {...props}\r\n                />\r\n            )\r\n        }\r\n    } else if((status.length === 2)){\r\n        // 比较状态开启，状态有两个\r\n        // 状态有两个不进行opacity渐变覆盖\r\n        linkType = getLineType(status, style)\r\n        if(linkType === 'curve'){\r\n            const { firstData, secondData} = getDividedArcPathData(source, target)\r\n            return (\r\n                <>\r\n                    <ArcLinkItem\r\n                        data = {firstData}\r\n                        {...style[status[0]]}\r\n                    />\r\n                    <ArcLinkItem\r\n                        data = {secondData}\r\n                        {...style[status[1]]}\r\n                    />\r\n                </>\r\n            )\r\n        }else if(linkType === 'line'){\r\n            const { firstOption, secondOption } = getDividedOptions(props, status)\r\n            return (\r\n                <>\r\n                    <LinkItem {...firstOption} />\r\n                    <LinkItem {...secondOption} />\r\n                </>\r\n            )\r\n        }else{\r\n            let indexA = 0 , indexB = 1;\r\n            if(linkType[0]!=='curve'){\r\n                indexA = 1\r\n                indexB = 0\r\n            }\r\n            const { firstData, secondData} = getHybridPathData(source, target)\r\n            return (\r\n                <>\r\n                    <ArcLinkItem\r\n                        data = {firstData}\r\n                        {...style[status[indexA]]}\r\n                    />\r\n                    <ArcLinkItem\r\n                        data = {secondData}\r\n                        {...style[status[indexB]]}\r\n                    />\r\n                </>\r\n            )\r\n\r\n        }\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { getLinkData } from '../../util/dnetChart.js'\r\n\r\nexport default function DividedLinkItem(props) {\r\n    const { data, len, colorScale, strokeWidth, strokeType, existTimeIndex, shape, isColor = true, strokeColor } = props\r\n    const linkData = getLinkData(len, data, shape,isColor, strokeColor,colorScale)\r\n    \r\n    return (\r\n        <g>\r\n            {shape === 'line'\r\n                ? linkData.map((v, index) => {\r\n                      if (existTimeIndex[index] === 1) {\r\n                          return (\r\n                              <line\r\n                                  key={`${index}`} //这里不对\r\n                                  x1={v.source.x}\r\n                                  y1={v.source.y}\r\n                                  x2={v.target.x}\r\n                                  y2={v.target.y}\r\n                                  stroke={v.color }\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              ></line>\r\n                          )\r\n                      } else {\r\n                          return (\r\n                              <line\r\n                                  key={index} //这里不对\r\n                                  x1={v.source.x}\r\n                                  y1={v.source.y}\r\n                                  x2={v.target.x}\r\n                                  y2={v.target.y}\r\n                                  stroke={'#dddddd'}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              ></line>\r\n                          )\r\n                      }\r\n                  })\r\n                : linkData.map((v, index) => {\r\n                      if (existTimeIndex[index] === 1) {\r\n                          return (\r\n                              <path\r\n                                  key={`path-${index}`}\r\n                                  d={v.data}\r\n                                  fill={'none'}\r\n                                  stroke={v.color}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              />\r\n                          )\r\n                      } else {\r\n                          return (\r\n                              <path\r\n                                  key={`path-${index}`}\r\n                                  d={v.data}\r\n                                  fill={'none'}\r\n                                  stroke={'#dddddd'}\r\n                                  strokeWidth={`${strokeWidth}px`}\r\n                                  strokeDasharray={\r\n                                      strokeType === 'solid'\r\n                                          ? ''\r\n                                          : `${strokeWidth * 2},${strokeWidth * 2} `\r\n                                  }\r\n                              />\r\n                          )\r\n                      }\r\n                  })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NodeItem(props) {\r\n    if (props.shape === 'circle') {\r\n        return (\r\n            <circle\r\n                id={props.timeId}\r\n                cx={props.x + (props.xOffset ? props.xOffset : 0)}\r\n                cy={props.y + (props.yOffset ? props.yOffset : 0)}\r\n                fill={props.fillColor}\r\n                stroke={props.strokeColor}\r\n                strokeWidth={`${props.strokeWidth}px`}\r\n                r={props.radius}\r\n                opacity={props.opacity}\r\n                strokeDasharray={\r\n                    props.strokeType === 'solid' ? '' : `${props.radius / 2},${props.radius / 2} `\r\n                }\r\n            ></circle>\r\n        )\r\n    } else {\r\n        return (\r\n            <rect\r\n                id={props.timeId}\r\n                x={props.x + (props.xOffset ? props.xOffset : 0) - props.radius}\r\n                y={props.y + (props.yOffset ? props.yOffset : 0) - props.radius}\r\n                fill={props.fillColor ? props.fillColor : props.strokeColor}\r\n                stroke={props.strokeColor}\r\n                strokeWidth={`${props.strokeWidth}px`}\r\n                width={props.radius * 2}\r\n                height={props.radius * 2}\r\n                opacity={props.opacity}\r\n                strokeDasharray={\r\n                    props.strokeType === 'solid' ? '' : `${props.radius / 2},${props.radius / 2} `\r\n                }\r\n            ></rect>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n// 先判断其实left节点还是right节点\r\nexport default function HalfNodeItem(props) {\r\n    if (props.direction === 'left') {\r\n        if (props.shape === 'circle') {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  A ${props.radius} ${\r\n                        props.radius\r\n                    } 0 1 1 ${props.x} ${props.y - props.radius}`}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  \r\n            L ${props.x - props.radius} ${props.y + props.radius} \r\n            L ${props.x - props.radius} ${props.y - props.radius} \r\n            L ${props.x} ${props.y - props.radius} `}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    } else {\r\n        if (props.shape === 'circle') {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  A ${props.radius} ${\r\n                        props.radius\r\n                    } 0 1 0 ${props.x} ${props.y - props.radius}`}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <path\r\n                    d={`M${props.x} ${props.y + props.radius}  \r\n            L ${props.x + props.radius} ${props.y + props.radius} \r\n            L ${props.x + props.radius} ${props.y - props.radius} \r\n            L ${props.x} ${props.y - props.radius} `}\r\n                    fill={props.fillColor ? props.fillColor: props.strokeColor}\r\n                    stroke={props.strokeColor}\r\n                    strokeWidth={`${props.strokeWidth}px`}\r\n                    opacity={props.opacity}\r\n                    strokeDasharray={\r\n                        props.strokeType === 'solid'\r\n                            ? ''\r\n                            : `${props.radius / 2},${props.radius / 2} `\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport HalfNodeItem from '../halfNodeItem/halfNodeItem.js'\r\n\r\nexport default function NodeItemContainer(props) {\r\n    const {status=[], type, style} = props\r\n    if(type==='time'||status.length === 0){\r\n        return <NodeItem {...style.nodeStyle} {...props} />\r\n    }else if (status.length === 1) {\r\n        return <NodeItem {...style[status[0]]} {...props} />\r\n    } else if(status.length === 2) {\r\n        return (\r\n            <>\r\n                <HalfNodeItem direction={'left'} {...style[status[0]]} {...props} />\r\n                <HalfNodeItem direction={'right'} {...style[status[1]]} {...props} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { getPiePathData } from '../../util/dnetChart.js'\r\n\r\nexport default function PieNodeItem(props) {\r\n    const { data, len, colorScale, existTimeIndex, strokeColor, strokeWidth, strokeType, radius, fillColor,isColor = true } = props\r\n    // return null\r\n    const pathData = getPiePathData(radius, len)\r\n    return (\r\n        <>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {pathData.map((v, index) => {\r\n                  if(existTimeIndex[index]===1){\r\n                    return (\r\n                        <path\r\n                            d={v}\r\n                            fill={isColor ? colorScale(index): fillColor}\r\n                            key={`pie-node-path-${index}`}\r\n                        />\r\n                    )\r\n                  }else{\r\n                    return (\r\n                        <path\r\n                            d={v}\r\n                            fill={'#eeeeee'}\r\n                            key={`pie-node-path-${index}`}\r\n                        />\r\n                    )\r\n                  } \r\n                })}\r\n            </g>\r\n            <circle\r\n                cx={data.x}\r\n                cy={data.y}\r\n                stroke={strokeColor}\r\n                fill={'none'}\r\n                strokeWidth={`${strokeWidth}px`}\r\n                r={radius}\r\n                strokeDasharray={\r\n                    strokeType === 'solid' ? '' : `${radius / 2},${radius / 2} `\r\n                }\r\n            ></circle>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { getBarChartNodePath } from '../../util/dnetChart.js'\r\n\r\nexport default function BarChartNodeItem(props) {\r\n    const { data, len, colorScale, existTimeIndex, strokeColor, strokeWidth, strokeType, radius,fillColor,isColor = true } = props\r\n    const barChartData = getBarChartNodePath(radius, len)\r\n    return (\r\n        <>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {barChartData.map((itemData, index) => {\r\n                  if(existTimeIndex[index]===1){\r\n                    return (\r\n                        <rect\r\n                            key={`bar-chart-node-${index}`}\r\n                            id={props.timeId}\r\n                            x={itemData.x}\r\n                            y={itemData.y}\r\n                            fill={isColor ? colorScale(index):fillColor}\r\n                            stroke={strokeColor}\r\n                            strokeWidth={\"0px\"}\r\n                            width={itemData.width}\r\n                            height={itemData.height}\r\n                            opacity={props.opacity}\r\n                        />\r\n                    )\r\n                  }else{\r\n                    return (\r\n                        <rect\r\n                            key={`bar-chart-node-${index}`}\r\n                            id={props.timeId}\r\n                            x={itemData.x}\r\n                            y={itemData.y}\r\n                            fill={'#eeeeee'}\r\n                            stroke={strokeColor}\r\n                            strokeWidth={\"0px\"}\r\n                            width={itemData.width}\r\n                            height={itemData.height}\r\n                            opacity={props.opacity}\r\n                        />\r\n                    )\r\n                  } \r\n                })}\r\n            </g>\r\n            <rect\r\n                x={data.x - radius}\r\n                y={data.y - radius}\r\n                stroke={strokeColor}\r\n                fill={'none'}\r\n                strokeWidth={`${strokeWidth}px`}\r\n                width={radius * 2}\r\n                height={radius * 2}\r\n                strokeDasharray={\r\n                    strokeType === 'solid' ? '' : `${radius / 2},${radius / 2} `\r\n                }\r\n            ></rect>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport { getChartLineData } from '../../util/dnetChart.js'\r\n\r\nexport default function ChartNodeItem(props) {\r\n    const { data,isColor, colorScale, shape, existTimeIndex, strokeColor, strokeWidth,fillColor, strokeType, radius } = props\r\n    const pathDatas = getChartLineData(radius, existTimeIndex, colorScale, isColor, strokeColor)\r\n    return (\r\n        <>\r\n            <NodeItem\r\n                x={data.x}\r\n                y={data.y}\r\n                shape={shape}\r\n                fillColor={fillColor}\r\n                strokeColor={strokeColor}\r\n                strokeWidth={0}\r\n                radius={radius}\r\n                strokeType={strokeType}\r\n            >\r\n            </NodeItem>\r\n            <g transform={`translate(${data.x}, ${data.y})`}>\r\n                {\r\n                    pathDatas.map((pathData, index)=>{\r\n                        return <path\r\n                            key={`chart-item-${index}-${pathData.data}`}\r\n                            d={pathData.data}\r\n                            stroke={pathData.color}\r\n                            strokeWidth={`${strokeWidth}px`}\r\n                            fill={'none'}\r\n                        ></path>\r\n                    })\r\n                }\r\n            </g>\r\n            <NodeItem\r\n                x={data.x}\r\n                y={data.y}\r\n                shape={shape}\r\n                fillColor={'none'}\r\n                strokeColor={strokeColor}\r\n                strokeWidth={strokeWidth}\r\n                radius={radius}\r\n                strokeType={strokeType}\r\n            >\r\n            </NodeItem>\r\n        </>)\r\n}\r\n","import React from 'react'\r\nimport NodeItemContainer from '../nodeItemContainer/nodeItemContainer.js'\r\nimport PieNodeItem from '../pieNodeItem/pieNodeItem.js'\r\nimport BarChartNodeItem from '../barChartNodeItem/barChartNodeItem.js'\r\nimport ChartNodeItem from '../chartNodeItem/chartNodeItem.js'\r\nimport { getPiePathColor, getNodeRenderType } from '../../util/dnetChart.js'\r\n\r\nexport default function NodeContainer(props) {\r\n    const { data: nodesData, config, len: dataLength, isSum } = props\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const nodeRenderType = getNodeRenderType(config, isColor, isSum)\r\n    if (nodeRenderType === 'simpleNode') {\r\n        return (\r\n            <>\r\n                {nodesData.map((node) => {\r\n                    return <NodeItemContainer {...node} key={`node-${node.id}`} />\r\n                })}\r\n            </>\r\n        )\r\n    } else {\r\n        // 确定颜色比例\r\n        const { nodeStyle, linkStyle } = config.graph\r\n        const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n        let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n        switch (nodeRenderType) {\r\n            case 'lineChartNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            // matrix中链接的节点形式，和普通的基点样式不一样。所以，需要更新\r\n                            const tempStyle =\r\n                                node.type === 'link-node'\r\n                                    ? {\r\n                                          ...nodeStyle,\r\n                                          fillColor: linkStyle.pointFillColor,\r\n                                          shape: linkStyle.pointShape,\r\n                                          opacity: linkStyle.pointOpacity\r\n                                      }\r\n                                    : nodeStyle\r\n                            // const tempStyle = nodeStyle\r\n                            return (\r\n                                <ChartNodeItem\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    colorScale={colorScale}\r\n                                    isColor={isColor}\r\n                                    key={`line-chart-node-${index}`}\r\n                                    {...tempStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            case 'pieNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            return node.type === 'link-node' &&\r\n                                node.style.nodeStyle.shape === 'rect' ? (\r\n                                <BarChartNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    isColor={isColor}\r\n                                    colorScale={colorScale}\r\n                                    key={`bar-node-${index}`}\r\n                                    radius={nodeStyle.radius}\r\n                                    {...nodeStyle}\r\n                                    shape={linkStyle.pointShape}\r\n                                    fillColor={linkStyle.pointFillColor}\r\n                                    opacity={linkStyle.pointFillColor}\r\n                                />\r\n                            ) : (\r\n                                <PieNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    colorScale={colorScale}\r\n                                    isColor={isColor}\r\n                                    key={`pie-node-${index}`}\r\n                                    {...nodeStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            case 'barNode':\r\n                return (\r\n                    <>\r\n                        {nodesData.map((node, index) => {\r\n                            return (\r\n                                <BarChartNodeItem\r\n                                    len={dataLength}\r\n                                    data={node}\r\n                                    existTimeIndex={node.existTimeIndex}\r\n                                    isColor={isColor}\r\n                                    colorScale={colorScale}\r\n                                    key={`bar-node-${index}`}\r\n                                    {...nodeStyle}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </>\r\n                )\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\n// import {\r\n//     getPiePathColor, \r\n// } from '../../util/dnetChart.js'\r\n\r\nexport default function MarkLineItem(props) {\r\n    const { markLine, markLineOptions } = props\r\n    // let colorScale = getPiePathColor(200, '#ECAA7B', '#98DDF3')\r\n    return (\r\n        <g>\r\n            {markLine.map((links, index) => {\r\n                return (\r\n                    <g key={`curve-g-${index}`}>\r\n                        {links.data.map((v, index) => {\r\n                            return (\r\n                                <path\r\n                                    d={v}\r\n                                    stroke={markLineOptions.strokeColor}\r\n                                    strokeWidth={`${markLineOptions.strokeWidth}px`}\r\n                                    opacity={markLineOptions.opacity}\r\n                                    fill={\"none\"}\r\n                                    strokeDasharray={\r\n                                        markLineOptions.strokeType === 'solid'\r\n                                            ? ''\r\n                                            : markLineOptions.strokeDasharray\r\n                                    }\r\n                                    key={`curve-link-${index}`}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </g>\r\n                )\r\n            })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { SINGLE_LEGEND_WIDTH } from '../../util/const.js'\r\n\r\nexport default function ColorLegend(props) {\r\n    if (props.len === 0) return null\r\n    // isColor是true以及isSample是false的时候，是渲染图例的\r\n    const legendData = new Array(props.len).fill(0)\r\n    // 确定颜色比例尺\r\n    const isColor = props.timeChooseTypes.indexOf('color') > -1\r\n    if(!props.isSample && isColor){\r\n        return (\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    height: '20px',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-start',\r\n                    margin: '10px'\r\n                }}\r\n            >\r\n                <div\r\n                    className=\"legend-text\"\r\n                    style={{\r\n                        margin: '0 10px'\r\n                    }}\r\n                >\r\n                    0\r\n                </div>\r\n                <svg\r\n                    className=\"legend-svg\"\r\n                    width={`${SINGLE_LEGEND_WIDTH * props.len}px`}\r\n                    height={'20px'}\r\n                    viewBox={`0 0 ${SINGLE_LEGEND_WIDTH * props.len} 20`}\r\n                    preserveAspectRatio=\"xMinYMin\"\r\n                >\r\n                    {legendData.map((dataItem, index) => {\r\n                        return (\r\n                            <rect\r\n                                key={`tc-legend-${index}`}\r\n                                x={index * SINGLE_LEGEND_WIDTH}\r\n                                y={0}\r\n                                fill={props.colorScale(index)}\r\n                                width={SINGLE_LEGEND_WIDTH}\r\n                                height={SINGLE_LEGEND_WIDTH}\r\n                            ></rect>\r\n                        )\r\n                    })}\r\n                </svg>\r\n                <div\r\n                    style={{\r\n                        margin: '0 10px'\r\n                    }}\r\n                >\r\n                    {props.len - 1}\r\n                </div>\r\n            </div>\r\n        )\r\n    }else{\r\n        return null\r\n    }\r\n}\r\n","import React from 'react'\r\nimport LinkContainer from '../../linkContainer/linkContainer.js'\r\nimport DividedLinkItem from '../../dividedLinkItem/dividedLinkItem.js'\r\nimport NodeContainer from '../../nodeContainer/nodeContainer.js'\r\nimport { getSvgWidthHeight } from '../../../util/dnetChart'\r\nimport MarkLineItem from '../../markLineItem/markLineItem.js'\r\nimport ColorLegend from '../../colorLegend/colorLegend.js'\r\nimport { getPiePathColor } from '../../../util/dnetChart.js'\r\n\r\nexport default function TimePositionDnet(props) {\r\n    const { data, config, markLine } = props\r\n    const dataLength = data.length\r\n    if (dataLength === 0) return null\r\n    const { svgWidth, svgHeight } = getSvgWidthHeight(config, dataLength)\r\n    const markLineOptions = config.time.markLine\r\n    const { linkStyle, layout } = config.graph\r\n\r\n    // 确定颜色比例\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n    let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    return (\r\n        <>\r\n            <ColorLegend\r\n                len = {dataLength}\r\n                timeChooseTypes = {timeChooseTypes}\r\n                colorScale = {colorScale}\r\n                isSample = {props.isSample}\r\n            />\r\n        <svg\r\n            className=\"nlg-container-svg\"\r\n            width={`${props.sampleWidth ? props.sampleWidth : svgWidth}px`}\r\n            height={`${props.sampleHeight ? props.sampleHeight : svgHeight}px`}\r\n            viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {markLine ? (\r\n                <MarkLineItem markLine={markLine} markLineOptions={markLineOptions} />\r\n            ) : null}\r\n            {data.map((dataItem, index) => {\r\n                return (\r\n                    <g key={`subGraph-${index}`}>\r\n                        <g>\r\n                            {(isChart && !isMatrix)\r\n                                ? dataItem.links.map((link, index) => {\r\n                                      return (\r\n                                          <DividedLinkItem\r\n                                              len={dataLength}\r\n                                              data={link}\r\n                                              existTimeIndex={link.existTimeIndex}\r\n                                              colorScale={colorScale}\r\n                                              isColor={isColor}\r\n                                              key={`time-color-link-${index}`}\r\n                                              {...linkStyle}\r\n                                          />\r\n                                      )\r\n                                  })\r\n                                : dataItem.links.map((link) => {\r\n                                      return <LinkContainer {...link} key={`link-${link.id}`} />\r\n                                  })}\r\n                        </g>\r\n                        <g>\r\n                            <NodeContainer\r\n                                len={dataLength}\r\n                                data={dataItem.nodes}\r\n                                config={config}\r\n                                isSum={false}\r\n                            />\r\n                        </g>\r\n                    </g>\r\n                )\r\n            })}\r\n        </svg>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MARK_POINT_RADIUS as markRadius} from '../../util/const.js'\r\n\r\nexport default function MarkItemGraph(props) {\r\n    const { data, markLineOptions } = props\r\n    return (\r\n        <g>\r\n            {data.nodes.map((node, index) => {\r\n                return (\r\n                    <rect\r\n                        key={`${node.id}-${index}`}\r\n                        id={node.id}\r\n                        x={node.x - markRadius}\r\n                        y={node.y - markRadius}\r\n                        fill={markLineOptions.strokeColor}\r\n                        strokeWidth={`0px`}\r\n                        width={markRadius * 2}\r\n                        height={markRadius * 2}\r\n                        opacity={0.3}\r\n                    ></rect>\r\n                )\r\n            })}\r\n        </g>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport LinkContainer from '../linkContainer/linkContainer.js'\r\nimport DividedLinkItem from '../dividedLinkItem/dividedLinkItem.js'\r\nimport NodeContainer from '../nodeContainer/nodeContainer.js'\r\n// import Motion from '../motion/Motion'\r\nimport { getPiePathColor } from '../../util/dnetChart.js'\r\nimport MarkLineItem from '../markLineItem/markLineItem.js'\r\nimport MarkItemGraph from '../markItemGraph/markItemGraph.js'\r\n\r\nexport default function NodeLinkGraph(props) {\r\n    const {\r\n        data,\r\n        config,\r\n        dataLength,\r\n        width,\r\n        height,\r\n        sumData,\r\n        markLine,\r\n        markLineOptions,\r\n        hasTimeLine\r\n    } = props\r\n    // 确定颜色比例\r\n    const { linkStyle, layout } = config.graph\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = config.time.color\r\n    let colorScale = getPiePathColor(dataLength, startColor, endColor)\r\n    const timeChooseTypes = config.time.chooseTypes\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    return (\r\n        <svg\r\n            className=\"nlg-container-svg\"\r\n            width={`${props.sampleWidth ? props.sampleWidth : width}px`}\r\n            height={`${props.sampleHeight ? props.sampleHeight : height}px`}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {markLine ? (\r\n                hasTimeLine ? (\r\n                    <MarkLineItem markLine={markLine} markLineOptions={markLineOptions} />\r\n                ) : (\r\n                    <MarkItemGraph data={sumData} markLineOptions={markLineOptions} />\r\n                )\r\n            ) : null}\r\n            <g>\r\n                {isChart && !isMatrix\r\n                    ? data.links.map((link, index) => {\r\n                          return (\r\n                              <DividedLinkItem\r\n                                  len={dataLength}\r\n                                  data={link}\r\n                                  existTimeIndex={link.existTimeIndex}\r\n                                  colorScale={colorScale}\r\n                                  isColor={isColor}\r\n                                  key={`time-color-link-${index}`}\r\n                                  {...linkStyle}\r\n                              />\r\n                          )\r\n                      })\r\n                    : data.links.map((link) => {\r\n                          return <LinkContainer {...link} key={`link-${link.id}`} />\r\n                      })}\r\n                {/* {data.links.map((v, i) => {\r\n                    return (\r\n                        <Motion\r\n                            duration={1500}\r\n                            key={`${v.id}_motion`}\r\n                            style={{\r\n                                opacity: getLinkOpacity(v),\r\n                                sourceX: v.source.x,\r\n                                sourceY: v.source.y,\r\n                                targetX: v.target.x,\r\n                                targetY: v.target.y\r\n                            }}\r\n                        >\r\n                            {({ opacity, sourceX, sourceY, targetX, targetY }) => (\r\n                                <LinkContainer\r\n                                    {...props}\r\n                                    {...v}\r\n                                    source={{\r\n                                        ...v.source,\r\n                                        x: sourceX,\r\n                                        y: sourceY\r\n                                    }}\r\n                                    target={{\r\n                                        ...v.target,\r\n                                        x: targetX,\r\n                                        y: targetY\r\n                                    }}\r\n                                    opacity={opacity}\r\n                                    key={`link-${v.id}`}\r\n                                />\r\n                            )}\r\n                        </Motion>\r\n                    )\r\n                })} */}\r\n            </g>\r\n            <g>\r\n                <NodeContainer len={dataLength} data={data.nodes} config={config} isSum={false} />\r\n                {/* {data.nodes.map((v, i) => {\r\n                    return (\r\n                        <Motion\r\n                            duration={1500}\r\n                            key={`${v.id}_motion`}\r\n                            style={{\r\n                                opacity: v.opacity,\r\n                                x: v.x,\r\n                                y: v.y\r\n                            }}\r\n                        >\r\n                            {({ opacity, x, y }) => (\r\n                                <NodeItemContainer\r\n                                    {...props}\r\n                                    {...v}\r\n                                    x={x}\r\n                                    y={y}\r\n                                    opacity={opacity}\r\n                                    key={`node-${v.id}`}\r\n                                />\r\n                            )}\r\n                        </Motion>\r\n                    )\r\n                })} */}\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Slider } from 'antd'\r\nimport { PauseCircleOutlined, PlayCircleOutlined } from '@ant-design/icons'\r\nimport NodeLinkGraph from '../../nodeLinkGraph/nodeLinkGraph.js'\r\nimport { getSvgWidthHeight } from '../../../util/dnetChart'\r\nimport ColorLegend from '../../colorLegend/colorLegend.js'\r\nimport { getPiePathColor } from '../../../util/dnetChart.js'\r\nimport './timeAnimationDnet.css'\r\n\r\nexport default function TimeAnimationDnet(props) {\r\n    const [frameIndex, setFrameIndex] = useState(0)\r\n    const [playOrPause, setPlayOrPause] = useState(false)\r\n    const [svgWidth, setSvgWidth] = useState(0)\r\n    const [svgHeight, setSvgHeight] = useState(0)\r\n    const { data, config,sumData, markLine } = props\r\n    const timeConfig = config.time\r\n    const speed = timeConfig.animation.speed\r\n    const hasTimeLine = timeConfig.chooseTypes.indexOf('timeLine') > -1\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = timeConfig.color\r\n    let colorScale = getPiePathColor(data.length, startColor, endColor)\r\n    let timeout\r\n\r\n    useEffect(() => {\r\n        const result = getSvgWidthHeight(config, data.length)\r\n        setSvgWidth(result.svgWidth)\r\n        setSvgHeight(result.svgHeight)\r\n    }, [data.length, config.basic, config.time])\r\n\r\n    useEffect(() => {\r\n        if (timeout) {\r\n            clearTimeout(timeout)\r\n        }\r\n        // 切换数据后暂停，帧号归零\r\n        setPlayOrPause(false)\r\n        setFrameIndex(0)\r\n        setTimeout(() => {\r\n            // 将playOrPause改成true会自动播放动画，所以不用去单独执行controlAnimation函数\r\n            setPlayOrPause(true)\r\n        }, speed)\r\n    }, [props.data])\r\n\r\n    useEffect(() => {\r\n        controlAnimation()\r\n    }, [frameIndex])\r\n\r\n    useEffect(() => {\r\n        if (playOrPause) {\r\n            controlAnimation()\r\n        }\r\n    }, [playOrPause])\r\n\r\n    if (data.length === 0) return null\r\n\r\n    function handlePlayOrPause() {\r\n        setPlayOrPause(!playOrPause)\r\n    }\r\n\r\n    function controlAnimation() {\r\n        // 清除之前的定时器\r\n        if (timeout) {\r\n            clearTimeout(timeout)\r\n        }\r\n        timeout = setTimeout(() => {\r\n            if (playOrPause) {\r\n                const len = data.length\r\n                const nextFrame = (frameIndex + 1) % len\r\n                setFrameIndex(nextFrame)\r\n            }\r\n        }, speed)\r\n    }\r\n    return data[frameIndex] ? (\r\n        <>\r\n            <ColorLegend\r\n                len = {data.length}\r\n                timeChooseTypes = {timeConfig.chooseTypes}\r\n                colorScale = {colorScale}\r\n                isSample = {props.isSample}\r\n            />\r\n            <NodeLinkGraph \r\n                data={props.data[frameIndex]} \r\n                dataLength={data.length}\r\n                config={config}\r\n                height={svgHeight} \r\n                sampleWidth={props.sampleWidth}\r\n                sampleHeight={props.sampleHeight}\r\n                width={svgWidth} \r\n                sumData = {sumData}\r\n                markLine = {markLine}\r\n                markLineOptions = {timeConfig.markLine}\r\n                hasTimeLine = {hasTimeLine}\r\n            />\r\n            {!props.isSample ? (\r\n                <div className=\"tad-control-container\">\r\n                    {playOrPause ? (\r\n                        <PauseCircleOutlined\r\n                            className=\"tad-control-icon\"\r\n                            onClick={handlePlayOrPause}\r\n                        />\r\n                    ) : (\r\n                        <PlayCircleOutlined\r\n                            className=\"tad-control-icon\"\r\n                            onClick={handlePlayOrPause}\r\n                        />\r\n                    )}\r\n                    <Slider\r\n                        style={{\r\n                            width: '150px',\r\n                            marginLeft: '20px'\r\n                        }}\r\n                        included={false}\r\n                        value={frameIndex}\r\n                        min={0}\r\n                        max={props.data.length - 1}\r\n                        tooltipVisible\r\n                        tooltipPlacement={'bottom'}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    ) : null\r\n}\r\n","import React from 'react'\r\nimport DividedLinkItem from '../../dividedLinkItem/dividedLinkItem.js'\r\nimport LinkContainer from '../../linkContainer/linkContainer.js'\r\nimport NodeContainer from '../../nodeContainer/nodeContainer.js'\r\nimport ColorLegend from '../../colorLegend/colorLegend.js'\r\nimport { getPiePathColor } from '../../../util/dnetChart.js'\r\n\r\nexport default function TimeSumDnet(props) {\r\n    if (props.len === 0) return null\r\n    const timeChooseTypes = props.config.time.chooseTypes\r\n\r\n    // isColor是true以及isSample是false的时候，是渲染图例的\r\n    // 确定颜色比例尺\r\n    const { startColor = '#FD8F8F', endColor = '#90B5FB' } = props.config.time.color\r\n    let colorScale = getPiePathColor(props.len, startColor, endColor)\r\n    const { eachWidth, eachHeight, margin, linkStyle,layout } = props.config.graph\r\n\r\n    const isColor = timeChooseTypes.indexOf('color') > -1\r\n    const isChart = isColor || timeChooseTypes.indexOf('chart') > -1\r\n    const isMatrix = layout.chooseType === 'matrix'\r\n    \r\n    const svgWidth = eachWidth + margin * 2\r\n    const svgHeight = eachHeight + margin * 2\r\n\r\n    return (\r\n        <>\r\n            <ColorLegend\r\n                len = {props.len}\r\n                timeChooseTypes = {timeChooseTypes}\r\n                colorScale = {colorScale}\r\n                isSample = {props.isSample}\r\n            />\r\n            {/* {!props.isSample && isColor ? (\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        height: '20px',\r\n                        display: 'flex',\r\n                        justifyContent: 'flex-start',\r\n                        margin: '10px'\r\n                    }}\r\n                >\r\n                    <div\r\n                        className=\"legend-text\"\r\n                        style={{\r\n                            margin: '0 10px'\r\n                        }}\r\n                    >\r\n                        0\r\n                    </div>\r\n                    <svg\r\n                        className=\"legend-svg\"\r\n                        width={`${singleLegendWidth * props.len}px`}\r\n                        height={'20px'}\r\n                        viewBox={`0 0 ${singleLegendWidth * props.len} 20`}\r\n                        preserveAspectRatio=\"xMinYMin\"\r\n                    >\r\n                        {legendData.map((dataItem, index) => {\r\n                            return (\r\n                                <rect\r\n                                    key={`tc-legend-${index}`}\r\n                                    x={index * singleLegendWidth}\r\n                                    y={0}\r\n                                    fill={colorScale(index)}\r\n                                    width={singleLegendWidth}\r\n                                    height={singleLegendWidth}\r\n                                ></rect>\r\n                            )\r\n                        })}\r\n                    </svg>\r\n                    <div\r\n                        style={{\r\n                            margin: '0 10px'\r\n                        }}\r\n                    >\r\n                        {props.len - 1}\r\n                    </div>\r\n                </div>\r\n            ) : null} */}\r\n\r\n            <svg\r\n                className=\"nlg-container-svg\"\r\n                width={`${props.sampleWidth ? props.sampleWidth : svgWidth}px`}\r\n                height={`${props.sampleHeight ? props.sampleHeight : svgHeight}px`}\r\n                viewBox={`0 0 ${svgWidth} ${svgHeight}`}\r\n                preserveAspectRatio=\"xMinYMin\"\r\n            >\r\n                {\r\n                    /** 链接绘制 */\r\n                    isChart && !isMatrix\r\n                        ? props.data.links.map((dataItem, index) => {\r\n                              return (\r\n                                  <DividedLinkItem\r\n                                      len={props.len}\r\n                                      data={dataItem}\r\n                                      existTimeIndex={dataItem.existTimeIndex}\r\n                                      colorScale={colorScale}\r\n                                      isColor={isColor}\r\n                                      key={`time-color-link-${index}`}\r\n                                      {...linkStyle}\r\n                                  />\r\n                              )\r\n                          })\r\n                        : props.data.links.map((dataItem, index) => {\r\n                              return <LinkContainer {...dataItem} key={`link-${dataItem.id}`} />\r\n                          })\r\n                }\r\n                <NodeContainer\r\n                    len = {props.len}\r\n                    data = {props.data.nodes}\r\n                    config = {props.config}\r\n                    isSum={true}\r\n                />\r\n            </svg>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport TimePositionDnet from '../timePositionDnet/timePositionDnet.js'\r\nimport TimeAnimationDnet from '../timeAnimationDnet/timeAnimationDnet.js'\r\nimport TimeSumDnet from '../timeSumDnet/timeSumDnet.js'\r\n\r\nexport default function DnetChartContainer(props) {\r\n    const { sampleWidth,sampleHeight,renderType, markLine, subGraphs, config, len, sumGraphs, isSample = false } = props\r\n    switch (renderType) {\r\n        case 'timeLine':\r\n            return <TimePositionDnet \r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight}\r\n                    markLine={markLine} \r\n                    data={subGraphs} \r\n                    config={config} \r\n                    isSample={isSample}\r\n                />\r\n        case 'animation':\r\n            return <TimeAnimationDnet\r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight} \r\n                    markLine={markLine} \r\n                    data={subGraphs} \r\n                    sumData={sumGraphs}\r\n                    config={config} \r\n                    isSample={isSample}\r\n                />\r\n        case 'sum':\r\n            return <TimeSumDnet \r\n                    sampleWidth={sampleWidth}\r\n                    sampleHeight={sampleHeight}\r\n                    len={len} \r\n                    data={sumGraphs} \r\n                    config={config} \r\n                    isSample={isSample}/>\r\n        default:\r\n            return null\r\n    }\r\n}\r\n","import * as d3 from 'd3'\r\nimport { defaultConfigs } from './defaultConfig'\r\nimport * as assign from 'assign-deep'\r\nimport { getInsertPosition } from './dnetChart.js'\r\nimport * as _ from 'lodash'\r\nimport { GridLayout, CircularLayout, MDSLayout, DagreLayout, ForceLayout, RandomLayout } from '@antv/layout'\r\nimport {TASK_CHANGE_TYPES} from './const'\r\nexport const _intersection = (setA, setB) => {\r\n    let intersection = new Set(setA)\r\n    for (let elem of setA) {\r\n        if (!setB.has(elem)) {\r\n            intersection.delete(elem)\r\n        }\r\n    }\r\n    return intersection\r\n}\r\n// setA 减去 setB\r\nexport const _difference = (setA, setB) => {\r\n    let difference = new Set(setA)\r\n    for (let elem of setB) {\r\n        difference.delete(elem)\r\n    }\r\n    return difference\r\n}\r\nexport const _union = (setA, setB) => {\r\n    let union = new Set(setA)\r\n    for (let elem of setB) {\r\n        union.add(elem)\r\n    }\r\n    return union\r\n}\r\nexport const getTimeId = (graphs, times) => {\r\n    window.d3 = d3\r\n    let timeGraphs = {}\r\n    let nodeSet = new Set()\r\n    let linkSet = new Set()\r\n    let timeGraphSet = {}\r\n    let sumGraphs = { nodes: {}, links: {} }\r\n    const l = Object.keys(times).length\r\n\r\n    graphs.forEach((graph) => {\r\n        const time = graph.time\r\n        const timeIndex = times[time]\r\n        timeGraphSet[time] = { nodes: new Set(), links: new Set() }\r\n        timeGraphs[time] = { nodes: {}, links: {} }\r\n        let node2degree = {}\r\n        graph.nodes.forEach((node) => {\r\n            const id = node.id\r\n            const timeId = `${time}-${id}`\r\n            const type = node.type ? node.type : 'ele'\r\n            timeGraphs[time].nodes[id] = {\r\n                ...node,\r\n                type,\r\n                id,\r\n                timeId,\r\n                time,\r\n                status: [],\r\n                timeIndex,\r\n                style: {}\r\n            }\r\n            timeGraphSet[time].nodes.add(id)\r\n            nodeSet.add(id)\r\n            if (!sumGraphs.nodes[id]) {\r\n                let existTimeIndex = new Array(l).fill(0)\r\n                let existTimes = new Array(l).fill('')\r\n                let existStatus = new Array(l).fill(0).map(() => [])\r\n                sumGraphs.nodes[id] = {\r\n                    ...node,\r\n                    id,\r\n                    type,\r\n                    existTimeIndex,\r\n                    existTimes,\r\n                    existStatus,\r\n                    style: {}\r\n                }\r\n            }\r\n            sumGraphs.nodes[id].existTimeIndex[times[time]] = 1\r\n            sumGraphs.nodes[id].existTimes[times[time]] = time\r\n        })\r\n        graph.links.forEach((link) => {\r\n            let { source, target } = link\r\n            if (link.source < link.target) {\r\n                source = link.target\r\n                target = link.source\r\n            }\r\n            if (node2degree[source] === undefined) {\r\n                node2degree[source] = 1\r\n            } else {\r\n                node2degree[source]++\r\n            }\r\n            if (node2degree[target] === undefined) {\r\n                node2degree[target] = 1\r\n            } else {\r\n                node2degree[target]++\r\n            }\r\n            const id = `${source}-${target}`\r\n            const timeId = `${time}-${id}`\r\n            const type = link.type ? link.type : 'ele'\r\n            const sourceTimeId = timeGraphs[time].nodes[source].timeId\r\n            const targetTimeId = timeGraphs[time].nodes[target].timeId\r\n            timeGraphs[time].links[id] = {\r\n                id,\r\n                type,\r\n                timeId,\r\n                source,\r\n                target,\r\n                sourceTimeId,\r\n                targetTimeId,\r\n                time,\r\n                timeIndex,\r\n                status: [],\r\n                style: {}\r\n            }\r\n            linkSet.add(id)\r\n            timeGraphSet[time].links.add(id)\r\n            if (!sumGraphs.links[id]) {\r\n                let existTimeIndex = new Array(l).fill(0)\r\n                let existTimes = new Array(l).fill('')\r\n                let existStatus = new Array(l).fill(0).map(() => [])\r\n                sumGraphs.links[id] = {\r\n                    id,\r\n                    type,\r\n                    source,\r\n                    target,\r\n                    existTimeIndex,\r\n                    existTimes,\r\n                    existStatus,\r\n                    style: {}\r\n                }\r\n            }\r\n            sumGraphs.links[id].existTimeIndex[times[time]] = 1\r\n            sumGraphs.links[id].existTimes[times[time]] = time\r\n        })\r\n        // 给节点赋予度数属性\r\n        for (let nodeId in timeGraphs[time].nodes) {\r\n            timeGraphs[time].nodes[nodeId].degree = node2degree[nodeId]\r\n        }\r\n    })\r\n    return { timeGraphs, nodeSet, linkSet, timeGraphSet, sumGraphs }\r\n}\r\n\r\nexport function adjustLayout2Svg(nodes, links, width, height) {\r\n    let minX = width,\r\n        maxX = -1,\r\n        minY = height,\r\n        maxY = -1,\r\n        ratio\r\n    const margin = 10\r\n    // ratio取x轴和y轴比较小的\r\n    // 找到比例后，先调整节点的坐标，并记录映射值，再调整链接坐标\r\n    nodes.forEach((node) => {\r\n        if (node.x < minX) {\r\n            minX = node.x\r\n        }\r\n        if (node.x > maxX) {\r\n            maxX = node.x\r\n        }\r\n        if (node.y < minY) {\r\n            minY = node.y\r\n        }\r\n        if (node.y > maxY) {\r\n            maxY = node.y\r\n        }\r\n    })\r\n    const ratioX = (maxX - minX) / (width - margin * 2)\r\n    const ratioY = (maxY - minY) / (height - margin * 2)\r\n    ratio = ratioX > ratioY ? ratioX : ratioY\r\n    const translateX = minX - margin\r\n    const translateY = minY - margin\r\n    const nodeId2Coord = {}\r\n    // console.log(\"ratioX,ratioY, ratio,minX,maxX,minY, maxY\", ratioX,ratioY, ratio,minX,maxX,minY, maxY)\r\n    nodes.forEach((node) => {\r\n        // 平移\r\n        node.x -= translateX\r\n        node.y -= translateY\r\n        // 放缩\r\n        node.x = (node.x - margin) / ratio + margin\r\n        node.y = (node.y - margin) / ratio + margin\r\n        nodeId2Coord[node.id] = {\r\n            x: node.x,\r\n            y: node.y\r\n        }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source.x = nodeId2Coord[link.source.id].x\r\n        link.source.y = nodeId2Coord[link.source.id].y\r\n        link.target.x = nodeId2Coord[link.target.id].x\r\n        link.target.y = nodeId2Coord[link.target.id].y\r\n    })\r\n}\r\n\r\nexport const verticalLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const l = nodes.length\r\n    const step = (eachHeight - margin * 2) / l\r\n    let nodesObj = {}\r\n    nodes.forEach((node, index) => {\r\n        node.y = step * index + margin\r\n        node.x = eachWidth / 2\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n}\r\n\r\nexport const bipartiteLayout = (sumGraphs, timeGraphs, configs) => {\r\n    // 处理总图的节点和链接位置\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const len = nodes.length\r\n    const step = (eachHeight - margin * 2) / len\r\n    let firstNodesObj = {}\r\n    let secondNodesObj = {}\r\n    let secondNodes = []\r\n    nodes.forEach((node, index) => {\r\n        node.y = step * index + margin\r\n        node.x = margin\r\n        firstNodesObj[node.id] = node\r\n        let sNode = _.cloneDeep(node)\r\n        sNode.x = eachWidth - margin\r\n        sNode.id = `s-${node.id}`\r\n        secondNodes.push(sNode)\r\n        secondNodesObj[node.id] = sNode\r\n    })\r\n    while (secondNodes.length > 0) {\r\n        let sNode = secondNodes.pop()\r\n        nodes.push(sNode)\r\n    }\r\n    let sumRevertLinksArr = []\r\n    const sumLinksArr = {}\r\n    links.forEach((link) => {\r\n        const souceId = link.source\r\n        const targetId = link.target\r\n        link.source = firstNodesObj[souceId]\r\n        link.target = secondNodesObj[targetId]\r\n        sumLinksArr[link.id] = link\r\n        let sLink = _.cloneDeep(link)\r\n        sLink.id = `s-${link.id}`\r\n        sLink.source = firstNodesObj[targetId]\r\n        sLink.target = secondNodesObj[souceId]\r\n        sumLinksArr[sLink.id] = sLink\r\n        sumRevertLinksArr.push(sLink)\r\n    })\r\n    // 复制一份总图链接\r\n    while(sumRevertLinksArr.length>0){\r\n        const sLink = sumRevertLinksArr.pop()\r\n        links.push(sLink)\r\n    }\r\n    // 处理分帧图的数据\r\n    let timeGraphsValues = Object.values(timeGraphs)\r\n    timeGraphsValues.forEach((graph, graphIndex) => {\r\n        // 1. 给该分帧图的点赋予和总图一样的坐标，与此同时复制一份分帧图的点，并改变其id和坐标\r\n        let sNodesArr = []\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            assign(node, firstNodesObj[node.id])\r\n            let sNode = _.cloneDeep(node)\r\n            sNode.x = eachWidth - margin\r\n            sNode.id = `s-${node.id}`\r\n            sNodesArr.push(sNode)\r\n        })\r\n        // 2. 将复制的点加入到graph中\r\n        while (sNodesArr.length > 0) {\r\n            let sNode = sNodesArr.pop()\r\n            graph.nodes[sNode.id] = sNode\r\n        }\r\n\r\n        let subReverLinksArr=[]\r\n        // 3. 根据总图链接的位置，调整分帧图链接的位置\r\n        Object.values(graph.links).forEach((link) => {\r\n            const revertLink = _.cloneDeep(link)\r\n            assign(link, _.cloneDeep(sumLinksArr[link.id]))\r\n            revertLink.id = `s-${link.id}`\r\n            assign(revertLink, _.cloneDeep(sumLinksArr[revertLink.id]))\r\n            subReverLinksArr.push(revertLink)\r\n        })\r\n        while(subReverLinksArr.length>0){\r\n            const srLink = subReverLinksArr.pop()\r\n            graph.links[srLink.id] = srLink\r\n        }\r\n    })\r\n\r\n    //  平移节点、链接位置\r\n    const tempElement = configs.time.timeLine.element\r\n    if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n        const graphLength = timeGraphsValues.length\r\n        const positionTransMap = getTranslateMap(configs, graphLength)\r\n        if (tempElement === 'node') {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.nodes).forEach((node) => {\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                })\r\n            })\r\n        } else if (tempElement === 'link') {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.links).forEach((link) => {\r\n                    link.source.x += tranX\r\n                    link.target.x += tranX\r\n                    link.source.y += tranY\r\n                    link.target.y += tranY\r\n                })\r\n            })\r\n        } else {\r\n            timeGraphsValues.forEach((graph, graphIndex) => {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                Object.values(graph.nodes).forEach((node) => {\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                })\r\n                Object.values(graph.links).forEach((link) => {\r\n                    link.source.x += tranX\r\n                    link.target.x += tranX\r\n                    link.source.y += tranY\r\n                    link.target.y += tranY\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const dagreLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    var dagreLayout = new DagreLayout({\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        type: 'dagre',\r\n        rankdir: 'TB',\r\n        nodeSize: [2, 30],\r\n        nodesep: 1, // 可选\r\n        ranksep: 1 // 可选\r\n    })\r\n    const newData = dagreLayout.layout(data)\r\n    const { nodes: rNodes } = newData\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const oneMdsLayout = (sumGraphs, timeGraphs, configs) => {\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const { xDistance, yDistance} = configs.time.timeLine\r\n    let { nodes } = sumGraphs\r\n    // 总图的x是居中，y是按value值比例分布。\r\n    // 分帧图是x会产生平移，y也是按比例分布。两者的y坐标都得按比例求\r\n    let valueArr = []\r\n    Object.values(timeGraphs).forEach((graph,graphIndex)=>{\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            valueArr.push(node.value)\r\n        })\r\n    })\r\n    // 建立比例尺，循环nodes赋予节点的y坐标\r\n    const value2y = d3\r\n        .scaleLinear()\r\n        .domain(d3.extent(valueArr))\r\n        .range([margin, eachHeight - margin])\r\n    \r\n    nodes.forEach((node)=>{\r\n        node.x = eachWidth/2\r\n        node.y = value2y(node.value)\r\n    })\r\n\r\n    Object.values(timeGraphs).forEach((graph,graphIndex)=>{\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            node.x = eachWidth/2+graphIndex*xDistance\r\n            node.y = value2y(node.value) + graphIndex*yDistance\r\n        })\r\n    })\r\n}\r\n\r\nexport const mdsLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    const mdsLayout = new MDSLayout({\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        type: 'mds'\r\n    })\r\n    const newData = mdsLayout.layout(data)\r\n    const { nodes: rNodes} = newData\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const gridLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight, layout } = configs.graph\r\n    var gridLayout = new GridLayout({\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        type: 'grid',\r\n        begin: [0, 0], // 可选，\r\n        condense: false, // 可选\r\n        rows: layout.grid.rows, // 可选\r\n        sortBy: 'degree'\r\n    })\r\n    const newData = gridLayout.layout(data)\r\n    const { nodes: rNodes } = newData\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const circularLayout = (sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    const radius = Math.min(eachWidth, eachHeight) / 2\r\n    var circularLayout = new CircularLayout({\r\n        width: radius * 2,\r\n        height: radius * 2,\r\n        type: 'circular',\r\n        radius: radius,\r\n        center: [radius, radius]\r\n    })\r\n\r\n    const newData = circularLayout.layout(data)\r\n    const { nodes: rNodes } = newData\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const matrixLayout = (sumGraph, timeGraphs, configs) => {\r\n    // nodes复制一份，links被画作node形式，先不管网格线\r\n    let { nodes, links } = sumGraph\r\n    const { eachWidth, eachHeight, margin } = configs.graph\r\n    const width = eachWidth < eachHeight ? eachWidth : eachHeight\r\n    const len = nodes.length\r\n    const stepWidth = width / (len + 1)\r\n    let startX = stepWidth / 2 + margin\r\n    let startY = stepWidth / 2 + margin\r\n    // 处理x轴的节点\r\n    let nodeId2Xobj = {}\r\n    nodes.forEach((node, index) => {\r\n        node.y = startY\r\n        node.x = startX + (index + 1) * stepWidth\r\n        nodeId2Xobj[node.id] = { ...node }\r\n    })\r\n\r\n    // 处理y轴的节点\r\n    let yNodes = _.cloneDeep(nodes)\r\n    let nodeId2Yobj = {}\r\n    yNodes.forEach((node, index) => {\r\n        node.x = startX\r\n        node.y = startY + (index + 1) * stepWidth\r\n        nodeId2Yobj[node.id] = { ...node }\r\n        node.id = `y-${node.id}`\r\n        node.timeId = `y-${node.timeId}`\r\n        // 存入node中\r\n        nodes.push(node)\r\n    })\r\n    // 处理链接关系，一条链接在矩阵中会有两个对称的节点\r\n    let linkId2xyNode = {}\r\n    let linkId2yxNode = {}\r\n    links.forEach((link, index) => {\r\n        let linkNodeX2Y = {\r\n            ...link,\r\n            id: `x2y-link-${link.id}`,\r\n            type: 'link-node',\r\n            x: nodeId2Xobj[link.source].x,\r\n            y: nodeId2Yobj[link.target].y\r\n        }\r\n        linkId2xyNode[link.id] = linkNodeX2Y\r\n        let linkNodeY2X = {\r\n            ...link,\r\n            id: `y2x-link-${link.id}`,\r\n            type: 'link-node',\r\n            x: nodeId2Xobj[link.target].x,\r\n            y: nodeId2Yobj[link.source].y\r\n        }\r\n        linkId2yxNode[link.id] = linkNodeY2X\r\n        nodes.push(linkNodeX2Y)\r\n        nodes.push(linkNodeY2X)\r\n    })\r\n    // 添加总图的辅助线。\r\n    sumGraph.links = []\r\n    const sumLinks = sumGraph.links\r\n    for (let i = 0; i < len + 1; i++) {\r\n        sumLinks.push({\r\n            id: `x-grid-${i}`,\r\n            type: 'grid-line',\r\n            source: {\r\n                x: margin,\r\n                y: margin + (i + 1) * stepWidth\r\n            },\r\n            target: {\r\n                x: margin + width,\r\n                y: margin + (i + 1) * stepWidth\r\n            },\r\n            existTimeIndex: [],\r\n            status: [],\r\n            style: {}\r\n        })\r\n        sumLinks.push({\r\n            id: `y-grid-${i}`,\r\n            type: 'grid-line',\r\n            source: {\r\n                x: margin + (i + 1) * stepWidth,\r\n                y: margin\r\n            },\r\n            target: {\r\n                x: margin + (i + 1) * stepWidth,\r\n                y: margin + width\r\n            },\r\n            existTimeIndex: [],\r\n            status: [],\r\n            style: {}\r\n        })\r\n    }\r\n\r\n    // 根据配置、数据长度，拿到唯一的映射表。即每一帧图应该位移多少的映射数组。\r\n    const graphLength = Object.values(timeGraphs).length\r\n    const positionTransMap = getTranslateMap(configs, graphLength)\r\n    // 1 根据总图节点拿到分帧图节点初始位置\r\n    // 2 根据position函数调整位置\r\n    // 3 复制三份节点，赋予初始位置，并根据position函数修改位置\r\n    // 4 将三份节点也放入到分帧图中\r\n    Object.values(timeGraphs).forEach((graph, graphIndex) => {\r\n        const id2Xnode = {}\r\n        const id2Ynode = {}\r\n        const id2LinkNodeX2Y = {}\r\n        const id2LinkNodeY2X = {}\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            assign(node, nodeId2Xobj[node.id])\r\n            // node.x = nodeId2Xobj[node.id].x\r\n            // node.y = nodeId2Xobj[node.id].y\r\n\r\n            // console.log(\"node,configs,positionTransMap[graphIndex]\",node.x,node.y,configs,positionTransMap[graphIndex])\r\n            applyPosition2Node(node, configs, positionTransMap[graphIndex])\r\n\r\n            id2Xnode[node.id] = node\r\n            let yNode = _.cloneDeep(node)\r\n            assign(yNode, nodeId2Yobj[node.id])\r\n            // yNode.x = nodeId2Yobj[node.id].x\r\n            // yNode.y = nodeId2Yobj[node.id].y\r\n            applyPosition2Node(yNode, configs, positionTransMap[graphIndex])\r\n            yNode.id = `y-${node.id}`\r\n            yNode.timeId = `y-${node.timeId}`\r\n            id2Ynode[node.id] = yNode\r\n        })\r\n\r\n        // 得到链接节点\r\n        Object.values(graph.links).forEach((link) => {\r\n            let linkNodeX2Y = {\r\n                ...link,\r\n                id: `x2y-link-${link.id}`,\r\n                type: 'link-node',\r\n                x: id2Xnode[link.source].x,\r\n                y: id2Ynode[link.target].y,\r\n                existTimeIndex: linkId2yxNode[link.id].existTimeIndex,\r\n                existTimes: linkId2yxNode[link.id].existTimes\r\n            }\r\n            id2LinkNodeX2Y[linkNodeX2Y.id] = linkNodeX2Y\r\n            let linkNodeY2X = {\r\n                ...link,\r\n                type: 'link-node',\r\n                id: `y2x-link-${link.id}`,\r\n                x: id2Xnode[link.target].x,\r\n                y: id2Ynode[link.source].y,\r\n                existTimeIndex: linkId2yxNode[link.id].existTimeIndex,\r\n                existTimes: linkId2yxNode[link.id].existTimes\r\n            }\r\n            id2LinkNodeY2X[linkNodeY2X.id] = linkNodeY2X\r\n        })\r\n        // 把节点加入节点中\r\n        for (let key in id2Ynode) {\r\n            graph.nodes[id2Ynode[key].id] = id2Ynode[key]\r\n        }\r\n        for (let id in id2LinkNodeX2Y) {\r\n            graph.nodes[id] = id2LinkNodeX2Y[id]\r\n        }\r\n        for (let id in id2LinkNodeY2X) {\r\n            graph.nodes[id] = id2LinkNodeY2X[id]\r\n        }\r\n\r\n        graph.links = {}\r\n        const graphLinks = graph.links\r\n        for (let i = 0; i < len + 1; i++) {\r\n            const linkX = {\r\n                id: `x-grid-${i}`,\r\n                type: 'grid-line',\r\n                source: {\r\n                    x: margin,\r\n                    y: margin + (i + 1) * stepWidth\r\n                },\r\n                target: {\r\n                    x: margin + width,\r\n                    y: margin + (i + 1) * stepWidth\r\n                },\r\n                existTimeIndex: [],\r\n                status: [],\r\n                style: {}\r\n            }\r\n            applyPosition2Link(linkX, configs, positionTransMap[graphIndex])\r\n            graphLinks[linkX.id] = linkX\r\n            const linkY = {\r\n                id: `y-grid-${i}`,\r\n                type: 'grid-line',\r\n                source: {\r\n                    x: margin + (i + 1) * stepWidth,\r\n                    y: margin\r\n                },\r\n                target: {\r\n                    x: margin + (i + 1) * stepWidth,\r\n                    y: margin + width\r\n                },\r\n                existTimeIndex: [],\r\n                status: [],\r\n                style: {}\r\n            }\r\n            applyPosition2Link(linkY, configs, positionTransMap[graphIndex])\r\n            graphLinks[linkY.id] = linkY\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTranslateMap = (configs, len) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return []\r\n    }\r\n    let { xDistance, yDistance, type } = configs.time.timeLine\r\n    const result = []\r\n    if (type === 'circular') {\r\n        const tNodes = []\r\n        const tLinks = []\r\n        for (let i = 0; i < len; i++) {\r\n            tNodes.push({\r\n                id: i + ''\r\n            })\r\n            tLinks.push({\r\n                source: i + '',\r\n                target: i + 1 === len ? `${i - 2}` : `${i + 1}`\r\n            })\r\n        }\r\n        const data = {\r\n            nodes: tNodes,\r\n            edges: tLinks\r\n        }\r\n        const { eachWidth, eachHeight } = configs.graph\r\n        const eachDis = eachWidth < eachHeight ? eachWidth : eachHeight\r\n        let radius = (eachDis * len) / 5\r\n        var circularLayout = new CircularLayout({\r\n            width: radius * 2,\r\n            height: radius * 2,\r\n            type: 'circular',\r\n            radius: radius,\r\n            center: [radius, radius]\r\n        })\r\n        const newData = circularLayout.layout(data)\r\n        const { nodes: rNodes } = newData\r\n        rNodes.forEach((rNode, index) => {\r\n            result.push({\r\n                x: rNode.x,\r\n                y: rNode.y\r\n            })\r\n        })\r\n    } else {\r\n        for (let i = 0; i < len; i++) {\r\n            result.push({\r\n                x: i * xDistance,\r\n                y: i * yDistance\r\n            })\r\n        }\r\n    }\r\n    return result\r\n}\r\nexport const applyPosition2Link = (link, configs, posTranslate) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return\r\n    }\r\n    let { element } = configs.time.timeLine\r\n    if (element !== 'node') {\r\n        applyPosition2Node(link.source, configs, posTranslate)\r\n        applyPosition2Node(link.target, configs, posTranslate)\r\n    }\r\n}\r\n\r\nexport const applyPosition2Node = (node, configs, posTranslate) => {\r\n    if (configs.time.chooseTypes.indexOf('timeLine') === -1) {\r\n        return\r\n    }\r\n    node.x += posTranslate.x\r\n    node.y += posTranslate.y\r\n}\r\n\r\nexport const timeASnode = (graphs) => {\r\n    // 建立时间节点，在每一个图中，与每个节点都建立连接\r\n    graphs.forEach((graph) => {\r\n        graph.nodes.forEach((node) => {\r\n            const source = `time-${graph.time}`\r\n            const target = node.id\r\n            graph.links.push({ source, target, type: 'time' })\r\n        })\r\n        graph.nodes.push({ id: `time-${graph.time}`, type: 'time' })\r\n    })\r\n}\r\nexport const forceLayout = (sumGraphs, configs) => {\r\n\r\n    let { nodes, links } = sumGraphs\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    d3.forceSimulation(nodes)\r\n        .force(\r\n            'link',\r\n            d3.forceLink(links).id((d) => d.id)\r\n        )\r\n        .force('charge', d3.forceManyBody())\r\n        .force('center', d3.forceCenter(eachWidth / 2, eachHeight / 2))\r\n        // .stop()\r\n        .tick(40)\r\n        .stop()\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const randomLayout = (sumGraphs, configs) => {\r\n\r\n    let { nodes, links } = sumGraphs\r\n    const gNodes = nodes.map((node) => {\r\n        return {\r\n            id: node.id\r\n        }\r\n    })\r\n    const gEdges = links.map((link) => {\r\n        return {\r\n            source: link.source,\r\n            target: link.target\r\n        }\r\n    })\r\n    const data = {\r\n        nodes: gNodes,\r\n        edges: gEdges\r\n    }\r\n    const { eachWidth, eachHeight } = configs.graph\r\n    var randomLayout = new RandomLayout({\r\n        width: eachWidth,\r\n        height: eachHeight,\r\n        type: 'random'\r\n    })\r\n    const newData = randomLayout.layout(data)\r\n    const { nodes: rNodes } = newData\r\n    let nodesObj = {}\r\n    nodes.forEach((node, i) => {\r\n        node.x = rNodes[i].x\r\n        node.y = rNodes[i].y\r\n        nodesObj[node.id] = { ...node }\r\n    })\r\n    links.forEach((link) => {\r\n        link.source = nodesObj[link.source]\r\n        link.target = nodesObj[link.target]\r\n    })\r\n    adjustLayout2Svg(nodes, links, eachWidth, eachHeight)\r\n}\r\n\r\nexport const assignConfigs = (setConfigs) => {\r\n    let configs = _.cloneDeep(setConfigs)\r\n    let sumConfigs = {}\r\n    assign(sumConfigs, defaultConfigs.basic)\r\n    Object.keys(defaultConfigs).forEach((key) => {\r\n        sumConfigs[key] = {}\r\n    })\r\n    Object.keys(configs).forEach((key) => {\r\n        let encoding = configs[key]\r\n        if (typeof encoding === 'string') {\r\n            //timeLine\r\n            if (key in defaultConfigs) {\r\n                sumConfigs[key][encoding] = _.cloneDeep(defaultConfigs[key][encoding])\r\n            } else {\r\n                sumConfigs[key] = encoding\r\n            }\r\n        } else {\r\n            if (_.isArray(encoding)) {\r\n                // time: ['timeLine', 'insert', 'markLine'],\r\n                encoding.forEach((e) => {\r\n                    if (typeof e === 'string') {\r\n                        sumConfigs[key][e] = _.cloneDeep(defaultConfigs[key][e])\r\n                    } else {\r\n                        const e1 = Object.keys(e)[0]\r\n                        sumConfigs[key][e1] = _.cloneDeep(defaultConfigs[key][e1])\r\n                        assign(sumConfigs[key], e)\r\n                    }\r\n                })\r\n            } else {\r\n                const e = Object.keys(encoding)[0]\r\n                sumConfigs[key][e] = _.cloneDeep(defaultConfigs[key][e])\r\n                assign(sumConfigs[key], encoding)\r\n            }\r\n        }\r\n    })\r\n    if ('layout' in sumConfigs) {\r\n        sumConfigs.layoutName = Object.keys(sumConfigs.layout)[0]\r\n    }\r\n    console.log(defaultConfigs.time.timeLine.element)\r\n    return sumConfigs\r\n}\r\nexport const getmarkLine = (sumGraphs, timeGraphs, configs) => {\r\n    let markLine = {}\r\n    if (configs.time.timeLine.element === 'link') {\r\n        // 处理只平移链接的情况\r\n        Object.values(sumGraphs.nodes).forEach((node) => {\r\n            const { id, existTimes } = node\r\n            markLine[id] = []\r\n            existTimes.forEach((time) => {\r\n                if (time !== '') {\r\n                    const { tx: x, ty: y } = timeGraphs[time].nodes[id]\r\n                    const l = markLine[id].length\r\n                    if (l) {\r\n                        markLine[id][l - 1].target = { x, y }\r\n                    }\r\n                    markLine[id].push({ source: { x, y } })\r\n                }\r\n            })\r\n            markLine[id].pop()\r\n        })\r\n    } else {\r\n        Object.values(sumGraphs.nodes).forEach((node) => {\r\n            const { id, existTimes } = node\r\n            markLine[id] = []\r\n            existTimes.forEach((time) => {\r\n                if (time !== '') {\r\n                    const { x, y } = timeGraphs[time].nodes[id]\r\n\r\n                    const l = markLine[id].length\r\n                    if (l) {\r\n                        markLine[id][l - 1].target = { x, y }\r\n                    }\r\n                    markLine[id].push({ source: { x, y } })\r\n                }\r\n            })\r\n            markLine[id].pop()\r\n        })\r\n    }\r\n\r\n    markLine = getLinkPathData(markLine)\r\n    return markLine\r\n}\r\nexport function getLinkPathData(markLine) {\r\n    var link = d3\r\n        .linkHorizontal()\r\n        .x(function (d) {\r\n            return d.x\r\n        })\r\n        .y(function (d) {\r\n            return d.y\r\n        })\r\n    const linkPathData = Object.keys(markLine).map((markId, index) => {\r\n        const curveData = []\r\n        markLine[markId].forEach((markLineItem) => {\r\n            curveData.push(link(markLineItem))\r\n        })\r\n        return {\r\n            id: markId,\r\n            data: curveData\r\n        }\r\n    })\r\n    return linkPathData\r\n}\r\nexport const getPiePathColor = (len, startColor, endColor) => {\r\n    //设置颜色比例尺\r\n    // let colorScale\r\n    // if (!startColor || !endColor) {\r\n    //     colorScale = d3.scaleOrdinal().domain(d3.range(len)).range(d3.schemeCategory10)\r\n    // } else {\r\n    // console.log(\"d3.range(len)\", d3.range(len))\r\n    const colorScale = d3\r\n        .scaleLinear()\r\n        .domain([0, len - 1])\r\n        .range([startColor, endColor])\r\n    // }\r\n    return colorScale\r\n}\r\n\r\nfunction getChooseComparisonStyle(configs) {\r\n    const tempComparison = configs.task.comparison\r\n    const comparisonNode = _.cloneDeep({\r\n        stableNode: tempComparison.stableNode,\r\n        appearNode: tempComparison.appearNode,\r\n        disappearNode: tempComparison.disappearNode\r\n    })\r\n    const basicNodeStyle = _.cloneDeep(configs.graph.nodeStyle)\r\n    const comparisonLink = _.cloneDeep({\r\n        appearLink: tempComparison.appearLink,\r\n        stableLink: tempComparison.stableLink,\r\n        disappearLink: tempComparison.disappearLink\r\n    })\r\n    const basicLinkStyle = _.cloneDeep(configs.graph.linkStyle)\r\n    tempComparison.chooseTypes.forEach((v) => {\r\n        delete basicNodeStyle[v]\r\n        delete basicLinkStyle[v]\r\n    })\r\n    comparisonNode.stableNode = { ...comparisonNode.stableNode, ...basicNodeStyle }\r\n    comparisonNode.appearNode = { ...comparisonNode.appearNode, ...basicNodeStyle }\r\n    comparisonNode.disappearNode = { ...comparisonNode.disappearNode, ...basicNodeStyle }\r\n    comparisonLink.appearLink = { ...comparisonLink.appearLink, ...basicLinkStyle }\r\n    comparisonLink.stableLink = { ...comparisonLink.stableLink, ...basicLinkStyle }\r\n    comparisonLink.disappearLink = { ...comparisonLink.disappearLink, ...basicLinkStyle }\r\n    return {\r\n        comparisonNode,\r\n        comparisonLink\r\n    }\r\n}\r\n\r\nexport const setStyle = (timeGraphs, sumGraphs, configs) => {\r\n    let timeColorObj = {}\r\n    if (configs.time.chooseTypes.indexOf('color') > -1) {\r\n        const times = Object.keys(timeGraphs)\r\n        const l = times.length\r\n        const colorScale = getPiePathColor(\r\n            l,\r\n            configs.time.color.startColor,\r\n            configs.time.color.endColor\r\n        )\r\n        times.forEach((time, i) => {\r\n            timeColorObj[time] = colorScale(i)\r\n        })\r\n    }\r\n    const { comparisonNode, comparisonLink } = getChooseComparisonStyle(configs)\r\n    const basicNodeStyle = configs.graph.nodeStyle\r\n    const basicLinkStyle = configs.graph.linkStyle\r\n\r\n    // 给总图节点添加基本样式\r\n    let { nodes, links } = sumGraphs\r\n    nodes.forEach((node) => {\r\n        if (node.type === 'time') {\r\n            node.style.nodeStyle = configs.time.insert.nodeStyle\r\n        } else {\r\n            node.style.nodeStyle = basicNodeStyle\r\n        }\r\n        if(Array.isArray(node.status)){\r\n            node.status.forEach((d) => {\r\n                if (!comparisonNode[d]) {\r\n                    node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                } else {\r\n                    node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                }\r\n            })\r\n        }\r\n        if (node.type === 'link-node') {\r\n            node.style.nodeStyle = {\r\n                ...basicNodeStyle,\r\n                fillColor: basicLinkStyle.pointFillColor,\r\n                shape: basicLinkStyle.pointShape,\r\n                opacity: basicLinkStyle.pointOpacity\r\n            }\r\n        }\r\n    })\r\n    links.forEach((link) => {\r\n        if (link.type === 'time') {\r\n            link.style.linkStyle = configs.time.insert.linkStyle\r\n        } else {\r\n            link.style.linkStyle = basicLinkStyle\r\n        }\r\n        if(Array.isArray(link.status)){\r\n            link.status.forEach((d) => {\r\n                // 该style是用于comparison这种方式\r\n                link.style[d] = _.cloneDeep(comparisonLink[d])\r\n            })\r\n        }\r\n    })\r\n\r\n    const isChooseColor = !!(configs.time.chooseTypes.indexOf('color') > -1)\r\n    Object.values(timeGraphs).forEach((graph) => {\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            if (node.type === 'time') {\r\n                node.style.nodeStyle = _.cloneDeep({\r\n                    ...basicNodeStyle,\r\n                    ...configs.time.insert.nodeStyle\r\n                })\r\n                node.status.forEach((d) => {\r\n                    if (!comparisonNode[d]) {\r\n                        node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                    } else {\r\n                        node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                    }\r\n                })\r\n                return\r\n            }\r\n            node.style.nodeStyle = basicNodeStyle\r\n            // 如果用color编码了时间，则修改其填充颜色\r\n            // 处理matrix布局中的链接节点\r\n            if (node.type === 'link-node') {\r\n                node.style.nodeStyle = {\r\n                    ...basicNodeStyle,\r\n                    fillColor: basicLinkStyle.pointFillColor\r\n                        ? basicLinkStyle.pointFillColor\r\n                        : '#73C105',\r\n                    shape: basicLinkStyle.pointShape ? basicLinkStyle.pointShape : 'rect',\r\n                    opacity: basicLinkStyle.pointOpacity ? basicLinkStyle.pointOpacity : 0.8\r\n                }\r\n            }\r\n            if (isChooseColor) {\r\n                // 此处需要深复制\r\n                node.style.nodeStyle = _.cloneDeep(node.style.nodeStyle)\r\n                node.style.nodeStyle.fillColor = timeColorObj[node.time]\r\n            }\r\n            node.status.forEach((d) => {\r\n                if (!comparisonNode[d]) {\r\n                    node.style[d] = _.cloneDeep(comparisonLink[d])\r\n                } else {\r\n                    node.style[d] = _.cloneDeep(comparisonNode[d])\r\n                }\r\n            })\r\n        })\r\n        Object.values(graph.links).forEach((link) => {\r\n            if (link.type === 'time') {\r\n                link.style.linkStyle = _.cloneDeep({\r\n                    ...basicLinkStyle,\r\n                    ...configs.time.insert.linkStyle\r\n                })\r\n                return\r\n            }\r\n            link.style.linkStyle = basicLinkStyle\r\n            if (isChooseColor) {\r\n                link.style.linkStyle = _.cloneDeep(basicLinkStyle)\r\n                if (timeColorObj[link.time]) {\r\n                    link.style.linkStyle.strokeColor = timeColorObj[link.time]\r\n                }\r\n            }\r\n            link.status.forEach((d) => {\r\n                // 该style是用于comparison这种方式\r\n                link.style[d] = _.cloneDeep(comparisonLink[d])\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nexport const getGraphLayout = (timeGraphs, sumGraphs, configs) => {\r\n    let { nodes, links } = sumGraphs\r\n\r\n    const { margin } = configs.graph\r\n    const layoutNodes = Object.fromEntries(nodes.map((d) => [d.id, d]))\r\n    const layoutLinks = Object.fromEntries(links.map((d) => [d.id, d]))\r\n    let timeGraphsValues = Object.values(timeGraphs)\r\n\r\n    const isChangeInsertPosition =\r\n        configs.time.chooseTypes.indexOf('insert') > -1 &&\r\n        configs.time.insert.position !== 'origin' &&\r\n        configs.graph.layout.chooseType !== 'matrix'\r\n    if (isChangeInsertPosition) {\r\n        // 改变总图数据中time类型节点的位置\r\n        let timeNodeResult = {}\r\n        for (let node of nodes) {\r\n            if (node.type === 'time') {\r\n                timeNodeResult = getInsertPosition(configs)\r\n                node.x = timeNodeResult.x\r\n                node.y = timeNodeResult.y\r\n            }\r\n        }\r\n        // 改变总图数据中time类型链接的位置\r\n        for (let link of links) {\r\n            if (link.type === 'time') {\r\n                if (link.source.type === 'time') {\r\n                    link.source.x = timeNodeResult.x\r\n                    link.source.y = timeNodeResult.y\r\n                } else {\r\n                    link.target.x = timeNodeResult.x\r\n                    link.target.y = timeNodeResult.y\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 根据配置调整各帧图的位置\r\n    let newNodes = {}\r\n    const tempElement = configs.time.timeLine.element\r\n    const graphLength = timeGraphsValues.length\r\n    const positionTransMap = getTranslateMap(configs, graphLength)\r\n    timeGraphsValues.forEach((graph, graphIndex) => {\r\n        Object.values(graph.nodes).forEach((node) => {\r\n            // 将总图的位置信息复制到各个子图对应节点上\r\n            assign(node, layoutNodes[node.id])\r\n            let { x, y, timeId, id } = node\r\n            // 无论是否选中节点，margin偏移都是要的\r\n            node.x += margin\r\n            node.y += margin\r\n            if (configs.time.chooseTypes.indexOf('timeLine') > -1) {\r\n                const { x: tranX, y: tranY } = positionTransMap[graphIndex]\r\n                if (tempElement === 'node') {\r\n                    x = node.x\r\n                    y = node.y\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                } else if (tempElement === 'link') {\r\n                    // 只是链接进行偏移.\r\n                    x = node.x + tranX\r\n                    y = node.y + tranY\r\n                    node.tx = x\r\n                    node.ty = y\r\n                } else {\r\n                    // 都进行偏移\r\n                    node.x = node.x + tranX\r\n                    node.y = node.y + tranY\r\n                    x = node.x\r\n                    y = node.y\r\n                }\r\n            } else {\r\n                x = node.x\r\n                y = node.y\r\n            }\r\n            // 记录偏移后链接端点的位置信息\r\n            newNodes[node.timeId] = { timeId, x, y, id }\r\n        })\r\n    })\r\n    // 根据节点坐标调整链接坐标\r\n    timeGraphsValues.forEach((graph) => {\r\n        Object.values(graph.links).forEach((link) => {\r\n            assign(link, layoutLinks[link.id])\r\n            link.source = { ...newNodes[link.sourceTimeId] }\r\n            link.target = { ...newNodes[link.targetTimeId] }\r\n        })\r\n    })\r\n    // 调整总图sumGraphs的图面边距\r\n    const id2xy = {}\r\n    for (let node of nodes) {\r\n        node.x += margin\r\n        node.y += margin\r\n        id2xy[node.id] = {\r\n            x: node.x,\r\n            y: node.y\r\n        }\r\n    }\r\n    // 调整总图link的边距\r\n    // links的各个link端点之间有重复，\r\n    // 且存在重复引用。因此不能直接给各个link的端点加margin\r\n    for (let link of links) {\r\n        link.source.x = id2xy[link.source.id].x\r\n        link.source.y = id2xy[link.source.id].y\r\n        link.target.x = id2xy[link.target.id].x\r\n        link.target.y = id2xy[link.target.id].y\r\n    }\r\n    return timeGraphs\r\n}\r\nexport const getComparison = () => {}\r\nexport const _dealCompare = (graph, compareGraph, nodeSet, linkSet) => {\r\n    const appearNodes = _intersection(_difference(graph.nodes, compareGraph.nodes), nodeSet)\r\n    const disappearNodes = _intersection(_difference(compareGraph.nodes, graph.nodes), nodeSet)\r\n    const stableNodes = _intersection(_intersection(graph.nodes, compareGraph.nodes), nodeSet)\r\n    const appearLinks = _intersection(_difference(graph.links, compareGraph.links), linkSet)\r\n    const disappearLinks = _intersection(_difference(compareGraph.links, graph.links), linkSet)\r\n    const stableLinks = _intersection(_intersection(graph.links, compareGraph.links), linkSet)\r\n    return {\r\n        appear: { nodes: appearNodes, links: appearLinks },\r\n        disappear: { nodes: disappearNodes, links: disappearLinks },\r\n        stable: { nodes: stableNodes, links: stableLinks }\r\n    }\r\n}\r\n\r\nexport const getCompareData = (\r\n    timeGraphSet,\r\n    nodeSet,\r\n    linkSet,\r\n    keyFrame,\r\n    timeGraphs,\r\n    sumGraphs,\r\n    times\r\n) => {\r\n    const timeArr = Object.keys(timeGraphSet)\r\n    let result = Object.fromEntries(timeArr.map((time) => [time, {}]))\r\n    if (keyFrame === 'last') {\r\n        // 上一帧\r\n        timeArr.forEach((time, index) => {\r\n            // forEach中使用return终端本次循环，并不是所有的。相当于for中的continue\r\n            if (index === 0) return\r\n            const graphSet = timeGraphSet[time]\r\n            const lastTime = timeArr[index - 1]\r\n            const lastGraphSet = timeGraphSet[lastTime]\r\n            const { appear, disappear, stable } = _dealCompare(\r\n                graphSet,\r\n                lastGraphSet,\r\n                nodeSet,\r\n                linkSet\r\n            )\r\n            result[time].appear = appear\r\n            result[lastTime].disappear = disappear\r\n            result[lastTime].stable = stable\r\n        })\r\n    } else if (keyFrame === 'next') {\r\n        // 下一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === timeArr.length - 1) return\r\n            const graphSet = timeGraphSet[time]\r\n            const nextTime = timeArr[index + 1]\r\n            const nextGraphSet = timeGraphSet[nextTime]\r\n            const { appear, disappear, stable } = _dealCompare(\r\n                nextGraphSet,\r\n                graphSet,\r\n                nodeSet,\r\n                linkSet\r\n            )\r\n            result[nextTime].appear = appear\r\n            result[time].disappear = disappear\r\n            result[time].stable = stable\r\n        })\r\n    } else {\r\n        // 具体到某一帧\r\n        timeArr.forEach((time) => {\r\n            const graphSet = timeGraphSet[time]\r\n            result[time] = _dealCompare(graphSet, timeGraphSet[keyFrame], nodeSet, linkSet)\r\n        })\r\n    }\r\n\r\n    // 最外层的循环是以time为维度，循环\r\n    timeArr.forEach((time) => {\r\n        // 是3种状态：appear\\disappear\\stable为维度进行循环\r\n        Object.keys(result[time]).forEach((status) => {\r\n            const { nodes, links } = result[time][status]\r\n            nodes.forEach((id) => {\r\n                const s = status + 'Node'\r\n                timeGraphs[time].nodes[id].status.push(s)\r\n                sumGraphs.nodes[id].existStatus[times[time]].push(s)\r\n            })\r\n            links.forEach((id) => {\r\n                const s = status + 'Link'\r\n                timeGraphs[time].links[id].status.push(s)\r\n                sumGraphs.links[id].existStatus[times[time]].push(s)\r\n            })\r\n        })\r\n        Object.values(timeGraphs[time].nodes).forEach((node) => {\r\n            if (!node.status.length) {\r\n                node.status.push('stableNode')\r\n                sumGraphs.nodes[node.id].existStatus[times[time]].push('stableNode')\r\n            }\r\n        })\r\n        Object.values(timeGraphs[time].links).forEach((link) => {\r\n            if (!link.status.length) {\r\n                link.status.push('stableLink')\r\n                sumGraphs.links[link.id].existStatus[times[time]].push('stableLink')\r\n            }\r\n        })\r\n    })\r\n    return timeGraphs\r\n}\r\n\r\nexport const getShortestDistance = (matrix, start) => {\r\n    const rows = matrix.length,//rows和cols一样，其实就是顶点个数\r\n        cols = matrix[0].length\r\n \r\n    if(rows !== cols || start >= rows) return new Error(\"邻接矩阵错误或者源点错误\")\r\n \r\n    //初始化distance\r\n    let distance = new Array(rows).fill(Infinity)\r\n    // 记录逐渐加入点集的过程\r\n    // 初始化访问节点\r\n    let visited = new Array(rows).fill(false)\r\n    distance[start] = 0\r\n    for(let i = 0; i < rows; i++) {\r\n        // 更新节点访问\r\n        visited[start] = true\r\n        // 达到不了的顶点不能作为中转跳点\\\r\n        for(let j = 0; j < cols; j++) {\r\n            //通过比较distance[start] + matrix[start][j]和distance[j]的大小来决定是否更新distance[j]。\r\n            if(matrix[start][j]!==0&&(matrix[start][j] + distance[start] < distance[j])) {\r\n                distance[j] = matrix[start][j] + distance[start]\r\n            }\r\n        }\r\n        \r\n        // 找到当前最短路径顶点作为中转跳点\r\n        let minIndex = -1;\r\n        let min = Infinity;\r\n        for(let k = 0; k < rows; k++) {\r\n            if ((!visited[k]) && distance[k] < min) {\r\n                min = distance[k];\r\n                minIndex = k;\r\n            }\r\n        }\r\n        \r\n        if(minIndex!==-1){\r\n            start = minIndex\r\n        }else{\r\n            break\r\n        }\r\n    }\r\n    return distance;\r\n}\r\n\r\nexport const getShortestPath = (matrix, startIndex, endIndex)=>{\r\n    let visited = new Array(matrix.length).fill(false);\r\n    let shortestPath = []\r\n    let shortestDistance = Infinity\r\n    let distance = 0\r\n    let tempPath = []\r\n    visited[startIndex] = true\r\n    tempPath.push(startIndex)\r\n    function Dfs(startIndex){\r\n        for(let i=0;i<matrix[startIndex].length;i++){\r\n            if(visited[i]===false&&matrix[startIndex][i]===1){\r\n                distance++\r\n                tempPath.push(i)\r\n                visited[i]=true\r\n                if(i === endIndex){\r\n                    if(distance<shortestDistance){\r\n                        shortestDistance = distance\r\n                        shortestPath = [...tempPath]\r\n                    }\r\n                }else{\r\n                    Dfs(i)\r\n                }\r\n                distance--\r\n                visited[i] = false\r\n                tempPath.pop()\r\n            }\r\n        }\r\n    }\r\n    Dfs(startIndex)\r\n    return shortestPath\r\n}\r\n\r\nexport const getLongestPath = (matrix, startIndex, endIndex)=>{\r\n    let visited = new Array(matrix.length).fill(false);\r\n    let shortestPath = []\r\n    let shortestDistance = Infinity\r\n    let distance = 0\r\n    let tempPath = []\r\n    visited[startIndex] = true\r\n    tempPath.push(startIndex)\r\n    function Dfs(startIndex){\r\n        for(let i=0;i<matrix[startIndex].length;i++){\r\n            if(visited[i]===false&&matrix[startIndex][i]===1){\r\n                distance++\r\n                tempPath.push(i)\r\n                visited[i]=true\r\n                if(i === endIndex){\r\n                    if(distance<shortestDistance){\r\n                        shortestDistance = distance\r\n                        shortestPath = [...tempPath]\r\n                    }\r\n                }else{\r\n                    Dfs(i)\r\n                }\r\n                distance--\r\n                visited[i] = false\r\n                tempPath.pop()\r\n            }\r\n        }\r\n    }\r\n    Dfs(startIndex)\r\n    return shortestPath\r\n}\r\n\r\nexport const getFindData = (timeGraphs, configs,sumGraphs) => {\r\n    const {find: findOptions, pattern} = configs.task\r\n    if (configs.task.basedType === 'structure') {\r\n        if(pattern === 'dumb-bell'){\r\n        // if(findOptions.structure === 'dumb-bell'){\r\n            // 找结构，现在是假定是找这种类似于哑铃的形态结构。\r\n            for (let timeId in timeGraphs) {\r\n                const graph = timeGraphs[timeId]\r\n                for (let linkId in graph.links) {\r\n                    const link = graph.links[linkId]\r\n                    if (\r\n                        graph.nodes[link.source].degree === 1 &&\r\n                        graph.nodes[link.target].degree === 1\r\n                    ) {\r\n                        link.status.push('appearLink')\r\n                        graph.nodes[link.source].status.push('appearNode')\r\n                        graph.nodes[link.target].status.push('appearNode')\r\n                    }\r\n                }\r\n            }\r\n        // }else if(findOptions.structure==='shortest-path'){\r\n        }else if(pattern === 'shortest-path'){\r\n            let startIndex = 0\r\n            const mapId2Index = {}\r\n            const mapIndex2Id = []\r\n            const {nodes, links} = sumGraphs\r\n            Object.values(nodes).forEach((node)=>{\r\n                if(mapId2Index[node.id]===undefined){\r\n                    mapId2Index[node.id] = startIndex\r\n                    mapIndex2Id[startIndex] = node.id\r\n                    startIndex ++\r\n                }\r\n            })\r\n            let matrix = new Array(startIndex)\r\n            for(let i=0;i<matrix.length;i++){\r\n                matrix[i] = new Array(startIndex).fill(0)\r\n            }\r\n            Object.values(links).forEach((link)=>{\r\n                let sourceIndex = mapId2Index[link.source]\r\n                let targetIndex = mapId2Index[link.target]\r\n                matrix[sourceIndex][targetIndex] = 1\r\n                matrix[targetIndex][sourceIndex] = 1\r\n            })\r\n            let sIndex =0 ,eIndex = 0\r\n            let dis = -1\r\n            for(let i=0;i<startIndex;i++){\r\n                const distanceArr = getShortestDistance(matrix, i)\r\n                // 求出单源最短路径中的最长的那一个\r\n                let endIndex = i \r\n                let maxDistance = distanceArr[i]\r\n                distanceArr.forEach((v,index)=>{\r\n                    if(v!==Infinity&&v>maxDistance){\r\n                        endIndex = index\r\n                        maxDistance = v\r\n                    }\r\n                })\r\n                if(maxDistance>dis){\r\n                    dis = maxDistance\r\n                    sIndex = i\r\n                    eIndex = endIndex\r\n                }\r\n            }\r\n\r\n            const shortestPath = getShortestPath(matrix,sIndex,eIndex)\r\n            const nodeInPathMap = {}\r\n            const linkInPathMap = {}\r\n            shortestPath.forEach((v,i)=>{\r\n                const aId = mapIndex2Id[v]\r\n                nodeInPathMap[aId] = true\r\n                if(i!==0){\r\n                    const bId = mapIndex2Id[shortestPath[i-1]]\r\n                    linkInPathMap[`${aId}-${bId}`] = true\r\n                    linkInPathMap[`${bId}-${aId}`] = true\r\n                }\r\n            })\r\n\r\n            // 修改总图中的状态\r\n            for(let linkId in links){\r\n                if(linkInPathMap[linkId]===true){\r\n                    links[linkId].status = ['appearLink']\r\n                }\r\n            }\r\n            for(let nodeId in nodes) {\r\n                if(nodeInPathMap[nodeId] === true){\r\n                    nodes[nodeId].status = ['appearNode']\r\n                }\r\n            }\r\n\r\n            // 修改分帧图中的状态\r\n            for (let timeId in timeGraphs) {\r\n                const graph = timeGraphs[timeId]\r\n                for (let linkId in graph.links) {\r\n                    if(linkInPathMap[linkId]===true){\r\n                        graph.links[linkId].status.push('appearLink')\r\n                    }\r\n                }\r\n                for(let nodeId in graph.nodes) {\r\n                    if(nodeInPathMap[nodeId] === true){\r\n                        graph.nodes[nodeId].status.push('appearNode')\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    } else {\r\n        const { attr, relation, value } = findOptions\r\n            ? findOptions\r\n            : {\r\n                  attr: 'degree',\r\n                  relation: '>=',\r\n                  value: 3\r\n              }\r\n        for (let timeId in timeGraphs) {\r\n            const graph = timeGraphs[timeId]\r\n            for (let nodeId in graph.nodes) {\r\n                const node = graph.nodes[nodeId]\r\n                switch (relation) {\r\n                    case '>=':\r\n                        if (node[attr] >= value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                    case '<=':\r\n                        if (node[attr] <= value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                    default:\r\n                        if (node[attr] === value) {\r\n                            node.status.push('appearNode')\r\n                        }\r\n                        break\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const filterDataFromChange = (timeGraphs, sumGraphs, configs) =>{\r\n    const { change, taskType } = configs.task\r\n    \r\n    if(!change||taskType === 'none'){\r\n        return\r\n    }\r\n    // 都有就不处理了直接返回\r\n    if(change.length === TASK_CHANGE_TYPES.length){\r\n        return\r\n    }\r\n    // 没有change时，啥都不绘制\r\n    if(change.length === 0){\r\n        sumGraphs.nodes = []\r\n        sumGraphs.links = []\r\n        for(let graph in timeGraphs){\r\n            delete(timeGraphs[graph])\r\n        }\r\n        return \r\n    }\r\n\r\n    const changeOptionsToStatus = {\r\n        'appearNode':false,\r\n        'stableNode': false,\r\n        'disappearNode': false,\r\n        'appearLink':false,\r\n        'stableLink': false,\r\n        'disappearLink': false,\r\n    }\r\n    for(let i=0;i<change.length;i++){\r\n        switch(change[i]){\r\n            case 'appearedNode':\r\n                changeOptionsToStatus['appearNode'] = true\r\n                break\r\n            case 'unchangedNode':\r\n                changeOptionsToStatus['stableNode'] = true\r\n                break\r\n            case 'disappearedNode':\r\n                changeOptionsToStatus['disappearNode'] = true\r\n                break\r\n            case 'appearedEdge':\r\n                changeOptionsToStatus['appearLink'] = true\r\n                break\r\n            case 'unchangedEdge':\r\n                changeOptionsToStatus['stableLink'] = true\r\n                break\r\n            case 'disappearedEdge':\r\n                changeOptionsToStatus['disappearLink'] = true\r\n                break  \r\n            default:\r\n                break\r\n        }\r\n    }\r\n    // console.log(\"----change--changeOptionsToStatus\",change,changeOptionsToStatus)\r\n    // console.log(\"changeOptionsToStatus\",changeOptionsToStatus)\r\n    let { nodes, links } = sumGraphs\r\n    // 依据元素的status和changeOptionsToStatus去进行数据过滤\r\n    // status如果没有东西的话，那默认就是unchanged\r\n    // 如果status里面有两种状态的话。一个有一个没有的话，status就删除那个没有的\r\n\r\n    //过滤总图的节点\r\n    for(let i = 0;i<nodes.length;){\r\n        let node = nodes[i]\r\n        if(Array.isArray(node.status)){\r\n            if(node.status.length >=2){\r\n                for(let j =0;j<node.status.length;){\r\n                    if(changeOptionsToStatus[node.status[j]]===false){\r\n                        node.status.splice(j,1)\r\n                    }else{\r\n                        j++\r\n                    }\r\n                }\r\n                if(node.status.length===0){\r\n                    //删除掉该节点\r\n                    nodes.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else if (node.status.length===1){\r\n                if(changeOptionsToStatus[node.status[0]] === false){\r\n                    nodes.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else{\r\n                if(changeOptionsToStatus['stableNode']){\r\n                    i++\r\n                }else{\r\n                    nodes.splice(i,1)\r\n                }\r\n            }\r\n        }else{\r\n            //无状态，即是stabledNode\r\n            if(changeOptionsToStatus['stableNode']){\r\n                i++\r\n            }else{\r\n                nodes.splice(i,1)\r\n            }\r\n        }\r\n    }\r\n    // 过滤总图的连接\r\n    for(let i = 0;i<links.length;){\r\n        let link = links[i]\r\n        if(link.type==='grid-line'){\r\n            i++\r\n            continue\r\n        }\r\n        if(Array.isArray(link.status)){\r\n            if(link.status.length >=2){\r\n                for(let j =0;j<link.status.length;){\r\n                    if(changeOptionsToStatus[link.status[j]]===false){\r\n                        link.status.splice(j,1)\r\n                    }else{\r\n                        j++\r\n                    }\r\n                }\r\n                if(link.status.length===0){\r\n                    //删除掉该节点\r\n                    links.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else if (link.status.length===1){\r\n                if(changeOptionsToStatus[link.status[0]] === false){\r\n                    links.splice(i,1)\r\n                }else{\r\n                    i++\r\n                }\r\n            }else{\r\n                if(changeOptionsToStatus['stableLink']){\r\n                    i++\r\n                }else{\r\n                    links.splice(i,1)\r\n                }\r\n            }\r\n        }else{\r\n            //无状态，即是stabledNode\r\n            if(changeOptionsToStatus['stableLink']){\r\n                i++\r\n            }else{\r\n                links.splice(i,1)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 过滤分帧图的节点和链接\r\n    Object.values(timeGraphs).forEach((graph) => {\r\n        for(let nodeKey in graph.nodes){\r\n            let node = graph.nodes[nodeKey]\r\n            if(Array.isArray(node.status)){\r\n                if(node.status.length >=2){\r\n                    for(let j =0;j<node.status.length;){\r\n                        if(changeOptionsToStatus[node.status[j]]===false){\r\n                            node.status.splice(j,1)\r\n                        }else{\r\n                            j++\r\n                        }\r\n                    }\r\n                    if(node.status.length===0){\r\n                        //删除掉该节点\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }else if (node.status.length===1){\r\n                    if(changeOptionsToStatus[node.status[0]] === false){\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }else{\r\n                    if(!changeOptionsToStatus['stableNode']){\r\n                        delete graph.nodes[nodeKey]\r\n                    }\r\n                }\r\n            }else{\r\n                //无状态，即是stabledNode\r\n                if(!changeOptionsToStatus['stableNode']){\r\n                    delete graph.nodes[nodeKey]\r\n                }\r\n            }\r\n        }\r\n        for(let linkKey in graph.links){\r\n            let link = graph.links[linkKey]\r\n            if(link.type==='grid-line'){\r\n                continue\r\n            }\r\n            if(Array.isArray(link.status)){\r\n                if(link.status.length >=2){\r\n                    for(let j =0;j<link.status.length;){\r\n                        if(changeOptionsToStatus[link.status[j]]===false){\r\n                            link.status.splice(j,1)\r\n                        }else{\r\n                            j++\r\n                        }\r\n                    }\r\n                    if(link.status.length===0){\r\n                        //删除掉该节点\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }else if (link.status.length===1){\r\n                    if(changeOptionsToStatus[link.status[0]] === false){\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }else{\r\n                    if(!changeOptionsToStatus['stableLink']){\r\n                        delete graph.links[linkKey]\r\n                    }\r\n                }\r\n            }else{\r\n                //无状态，即是stabledNode\r\n                if(!changeOptionsToStatus['stableLink']){\r\n                    delete graph.links[linkKey]\r\n                }\r\n            }\r\n        }\r\n        \r\n    })\r\n\r\n\r\n}\r\nexport const compareTwoFrameAboutAttr = (localFrame, compareFrame) => {\r\n    const compareNodesDegree = {}\r\n    for (let nodeId in compareFrame.nodes) {\r\n        compareNodesDegree[nodeId] = compareFrame.nodes[nodeId].degree\r\n    }\r\n    for (let nodeId in localFrame.nodes) {\r\n        const localDegree = localFrame.nodes[nodeId].degree\r\n        if (compareNodesDegree[nodeId] === undefined || compareNodesDegree[nodeId] < localDegree) {\r\n            localFrame.nodes[nodeId].status.push('appearNode')\r\n        } else if (compareNodesDegree[nodeId] === localDegree) {\r\n            localFrame.nodes[nodeId].status.push('stableNode')\r\n        } else if (compareNodesDegree[nodeId] > localDegree) {\r\n            localFrame.nodes[nodeId].status.push('disappearNode')\r\n        }\r\n    }\r\n}\r\n\r\nexport const dealCompareAttr = (timeGraphs, task) => {\r\n    const timeArr = Object.keys(timeGraphs)\r\n    const keyFrame = task.comparison.keyFrame\r\n    if (keyFrame === 'last') {\r\n        // 上一帧\r\n        timeArr.forEach((time, index) => {\r\n            // forEach中使用return终端本次循环，并不是所有的。相当于for中的continue\r\n            if (index === 0) return\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[index - 1]])\r\n        })\r\n    } else if (keyFrame === 'next') {\r\n        // 下一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === timeArr.length - 1) return\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[index + 1]])\r\n        })\r\n    } else {\r\n        // 具体到某一帧\r\n        timeArr.forEach((time, index) => {\r\n            if (index === keyFrame) {\r\n                return\r\n            }\r\n            compareTwoFrameAboutAttr(timeGraphs[time], timeGraphs[timeArr[keyFrame]])\r\n        })\r\n    }\r\n}\r\n","// import { link, NetV } from './NetV'\r\nimport * as u from './dealfun'\r\nimport * as _lodash from 'lodash'\r\nclass DNetV {\r\n    constructor() {\r\n        this.elementsName = []\r\n        this.nodeSet = new Set()\r\n        this.linkSets = new Set()\r\n        this.timeGraphs = {}\r\n        this.timeGraphSet = {}\r\n        this.markLine = undefined\r\n    }\r\n    initData(setData, setConfigs) {\r\n        this.elementsName = ['nodes', 'links'] //元素：点、边\r\n        // 建立从times到index的对象映射\r\n        this.times = Object.fromEntries(setData.map((d, index) => [d.time, index])) //时间：key值\r\n        this.configs = setConfigs\r\n        this.oldData = setData\r\n        this.data = _lodash.cloneDeep(setData)\r\n        \r\n        // 判断如果configs的time中如果选择了insert，就执行timeASnode，给graph添加代表时间的节点\r\n        if(this.configs.time.chooseTypes.indexOf('insert') > -1){\r\n            u.timeASnode(this.data)\r\n        }\r\n\r\n        // console.log(\"this.data\",this.data)\r\n        // 建立最初数据结构\r\n        let { timeGraphs, nodeSet, linkSet, timeGraphSet, sumGraphs } = u.getTimeId(\r\n            this.data,\r\n            this.times\r\n        )\r\n\r\n        this.timeGraphs = timeGraphs\r\n        this.timeGraphSet = timeGraphSet\r\n        this.sumGraphs = sumGraphs\r\n        this.nodeSet = nodeSet\r\n        this.linkSet = linkSet\r\n\r\n        const { graph, time, task} = this.configs\r\n\r\n        // 处理和任务分析相关的逻辑\r\n        this.dealTask(task)\r\n        \r\n        this.sumGraphs.nodes = Object.values(this.sumGraphs.nodes)\r\n        this.sumGraphs.links = Object.values(this.sumGraphs.links)\r\n\r\n        // 依据layout的配置去赋予位置信息\r\n        this.dealLayout(graph.layout.chooseType ? graph.layout.chooseType : 'forceDirect')\r\n        // 根据time中的是否选择了markLine而决定是否要去计算markLine的数据\r\n        \r\n        this.markLine = time.chooseTypes.indexOf('markLine') > -1\r\n            ? u.getmarkLine(this.sumGraphs, this.timeGraphs, this.configs)\r\n            : undefined\r\n            \r\n        // 在布局确定之后再去，过滤数据。不然数据先过滤了，会影响布局\r\n        u.filterDataFromChange(this.timeGraphs, this.sumGraphs, this.configs)\r\n\r\n        // 根据配置信息中：样式，以及time，以及comparison信息，去设定样式\r\n        u.setStyle(this.timeGraphs, this.sumGraphs, this.configs)\r\n        this.subGraphs = Object.values(this.timeGraphs).map((v) => ({\r\n            links: Object.values(v.links),\r\n            nodes: Object.values(v.nodes)\r\n        }))\r\n    }\r\n\r\n    dealTask(task){\r\n        // 依据配置，给数据赋予3种状态的信息。这个应该根据config去判断要不要赋予\r\n        if(task.taskType === 'comparison'){\r\n            //函数里面直接改了timeGraphs、sumGraphs\r\n            if(task.basedType === 'structure'){\r\n                this.dealCompareData([{ times: 'all', nodes: 'all', links: 'all', keyFrame: task.comparison.keyFrame }]) \r\n            }else if(task.basedType === 'attr'){\r\n                u.dealCompareAttr(this.timeGraphs, task)\r\n            }\r\n        }else if(task.taskType === 'find'){\r\n            //函数里面直接改了timeGraphs、sumGraphs\r\n            u.getFindData(this.timeGraphs, this.configs, this.sumGraphs) //函数里面直接改了timeGraphs\r\n        }\r\n    }\r\n    dealLayout(layout = 'forceDirect') {\r\n        // 先根据sumGraphs获得布局信息\r\n        if(layout === 'matrix'){\r\n            u.matrixLayout(this.sumGraphs, this.timeGraphs,this.configs)\r\n        }else if(layout === 'bipartite'){\r\n            u.bipartiteLayout(this.sumGraphs, this.timeGraphs, this.configs)\r\n        }else if(layout === 'oneMds'&&this.sumGraphs.nodes[0].value!==undefined){\r\n            u.oneMdsLayout(this.sumGraphs, this.timeGraphs,this.configs)\r\n        }else{  \r\n            switch (layout){\r\n                case 'forceDirect':\r\n                    u.forceLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'vertical':\r\n                    u.verticalLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'circular':\r\n                    u.circularLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'dagre':\r\n                    u.dagreLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'mds':\r\n                    u.mdsLayout(this.sumGraphs, this.configs)\r\n                    break\r\n                case 'grid':\r\n                    u.gridLayout(this.sumGraphs, this.configs)\r\n                    break \r\n                default:\r\n                    u.randomLayout(this.sumGraphs, this.configs)\r\n            }\r\n            // 将位置信息放入每个子图中，并根据time调整位置\r\n            u.getGraphLayout(this.timeGraphs, this.sumGraphs, this.configs)\r\n        }\r\n    }\r\n\r\n    dealCompareData(configs) {\r\n        configs.forEach((d) => {\r\n            const { times, nodes, links, keyFrame } = d\r\n            const timeSet = times === 'all' ? new Set(Object.keys(this.times)) : new Set(times)\r\n            const nodeSet = nodes === 'all' ? this.nodeSet : new Set(nodes)\r\n            const linkSet = links === 'all' ? this.linkSet : new Set(links)\r\n            let timeGraphSet = {}\r\n            // this.timeGraphSet中有的放到timeGraphSet中\r\n            Object.keys(this.timeGraphSet).forEach((time) => {\r\n                if (timeSet.has(time)) {\r\n                    timeGraphSet[time] = this.timeGraphSet[time]\r\n                }\r\n            })\r\n            // 给timeGraphs和sumGraphs赋予3种状态的信息\r\n            u.getCompareData(\r\n                timeGraphSet,\r\n                nodeSet,\r\n                linkSet,\r\n                keyFrame,\r\n                this.timeGraphs,\r\n                this.sumGraphs,\r\n                this.times\r\n            ) //函数里面直接改了timeGraphs\r\n        })\r\n    } \r\n\r\n    end(simulation) {\r\n        return new Promise((resolve) => {\r\n            simulation.on('end', resolve)\r\n        })\r\n    }\r\n}\r\n\r\nexport default () => {\r\n    const dnetv = new DNetV()\r\n    return dnetv\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { converObject2Array } from '../../util/preview.js'\r\nimport DnetChartContainer from '../dnetCharts/dnetChartContainer/dnetChartContainer.js'\r\nimport dnetv from '../../util/dnetv.js'\r\nimport { getRenderType } from '../../util/dnetChart'\r\n\r\n\r\nexport default function PreviewItem(props) {\r\n    // 要计算\r\n    const [subGraphs, setSubGraphs] = useState([])\r\n    const [sumGraphs, setSumGraphs] = useState({ nodes: [], links: [] })\r\n    const [markLine, setMarkLine] = useState({})\r\n    const [renderType, setRenderType] = useState('')\r\n    const [isSample, setIsSample] = useState(false)\r\n    const [sampleWidth, setSampleWidth] = useState(false)\r\n    const [sampleHeight, setSampleHeight] = useState(false)\r\n    const [config, setConfig] = useState({})\r\n    useEffect(() => {\r\n        if (props.data.length > 0) {\r\n            let dnetvInstance = dnetv()\r\n            dnetvInstance.initData(props.data, props.config)\r\n            let { timeGraphs: tempTimeGraphs, markLine: tempMarkLine, sumGraphs: tempSumGraphs} = dnetvInstance\r\n            tempTimeGraphs = converObject2Array(tempTimeGraphs)\r\n            if(JSON.stringify(subGraphs)!==JSON.stringify(tempTimeGraphs)){\r\n                setSubGraphs(tempTimeGraphs)\r\n            }\r\n            if(JSON.stringify(markLine)!==JSON.stringify(tempMarkLine)){\r\n                setMarkLine(tempMarkLine)\r\n            }\r\n            if(JSON.stringify(sumGraphs)!==JSON.stringify(tempSumGraphs)){\r\n                setSumGraphs(tempSumGraphs)\r\n            }   \r\n        }\r\n        if(JSON.stringify(config)!==JSON.stringify(props.config)){\r\n            setConfig(props.config)\r\n        }\r\n    }, [props.config, props.data])\r\n\r\n    useEffect(() => {\r\n        if(isSample!==props.isSample){\r\n            setIsSample( props.isSample)\r\n        }\r\n        if(sampleWidth!==props.sampleWidth){\r\n            setSampleWidth(props.sampleWidth)\r\n        }\r\n        if(sampleHeight!== props.sampleHeight){\r\n            setSampleHeight(props.sampleHeight)\r\n        }\r\n    }, [props.sampleWidth, props.sampleHeight, props.isSample])\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.data.length > 0) {\r\n            let tempRenderType = getRenderType(props.config.time.chooseTypes)\r\n            if(tempRenderType!==renderType){\r\n                setRenderType(tempRenderType)\r\n            }\r\n        } else {\r\n            setRenderType('')\r\n        }\r\n    }, [props.data, props.config.time.chooseTypes])\r\n    if (props.data.length === 0) return null\r\n    return (\r\n        <DnetChartContainer\r\n            sampleWidth={sampleWidth}\r\n            sampleHeight={sampleHeight}\r\n            isSample={isSample}\r\n            renderType={renderType}\r\n            subGraphs={subGraphs}\r\n            sumGraphs={sumGraphs}\r\n            config={config}\r\n            len={subGraphs.length}\r\n            markLine={markLine}\r\n        />\r\n    )\r\n}\r\n\r\n\r\n/*\r\nexport default class PreviewItem extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            renderType: '',\r\n            markLine: {},\r\n            subGraphs: [],\r\n            sumGraphs: { nodes: [], links: [] }\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        \r\n        let flag = false\r\n        const stateFields = Object.keys(this.state)\r\n        const sLength = stateFields.length\r\n        for (let i = 0; i < sLength; i = i + 1) {\r\n            const field = stateFields[i]\r\n            if (JSON.stringify(this.state[field]) !== JSON.stringify(nextState[field])) {\r\n                flag = true\r\n                break\r\n            }\r\n        }\r\n        if(!flag){\r\n            const fields = Object.keys(this.props)\r\n            const fieldsLength = fields.length\r\n            let flag = false\r\n            for (let i = 0; i < fieldsLength; i = i + 1) {\r\n                const field = fields[i]\r\n                if (JSON.stringify(this.props[field]) !== JSON.stringify(nextProps[field])) {\r\n                    flag = true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        console.log(\"shouldComponentUpdate----flag\", flag)\r\n        return flag\r\n    }\r\n    componentDidMount() {\r\n        this.updateData('componentDidMount')\r\n    }\r\n    getSnapshotBeforeUpdate() {\r\n        this.updateData('getSnapshotBeforeUpdate')\r\n    }\r\n\r\n    updateData(params) {\r\n        \r\n        let renderType, subGraphs, markLine, sumGraphs\r\n        const { data, config } = this.props\r\n        renderType = getRenderType(config.time.chooseTypes)\r\n        let dnetvInstance = dnetv()\r\n        dnetvInstance.initData(data, config)\r\n        subGraphs = converObject2Array(dnetvInstance.timeGraphs)\r\n        markLine = dnetvInstance.markLine\r\n        sumGraphs = dnetvInstance.sumGraphs\r\n        this.setState({\r\n            renderType,\r\n            markLine,\r\n            subGraphs,\r\n            sumGraphs\r\n        })\r\n        console.log(\"updateData-----------------\",params)\r\n    }\r\n\r\n    render() {\r\n        const { config, sampleWidth, sampleHeight } = this.props\r\n        console.log('---PreviewItem---render', config.time.chooseTypes)\r\n        if (this.props.data.length === 0) {\r\n            return null\r\n        }\r\n        return (\r\n            <DnetChartContainer\r\n                sampleWidth={sampleWidth}\r\n                sampleHeight={sampleHeight}\r\n                isSample={true}\r\n                renderType={this.state.renderType}\r\n                subGraphs={this.state.subGraphs}\r\n                sumGraphs={this.state.sumGraphs}\r\n                config={config}\r\n                len={this.state.subGraphs.length}\r\n                markLine={this.state.markLine}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n*/","import * as d3 from 'd3'\r\n\r\n// 返回值是 {subgraphs, sumgraphs}\r\nexport function dealData(originData, width, height) {\r\n    // console.log('dealData---', width, height)\r\n    const sumGraphs = getLayout(originData, width, height)\r\n    const subGraphs = assignPos(originData, sumGraphs)\r\n    return { sumGraphs, subGraphs }\r\n}\r\n\r\n// 将所有图的点和边合并到一起，求出每个点和边的相对布局位置\r\nfunction getLayout(originData, width, height) {\r\n    let nodes = []\r\n    let links = []\r\n    let nodeSets = new Set()\r\n    let linkSets = new Set()\r\n    originData.forEach((graph, i) => {\r\n        graph.nodes.forEach((node) => {\r\n            nodeSets.add(node.id)\r\n        })\r\n        graph.links.forEach((link, j) => {\r\n            let { source, target } = link\r\n            if (links.source < links.target) {\r\n                source = link.target\r\n                target = links.source\r\n            }\r\n            const id = `${source}-${target}`\r\n            linkSets.add(id)\r\n        })\r\n    })\r\n    nodeSets.forEach((id) => {\r\n        nodes.push({ id })\r\n    })\r\n    linkSets.forEach((link) => {\r\n        const s = link.split('-')\r\n        const source = s[0]\r\n        const target = s[1]\r\n        links.push({ source, target })\r\n    })\r\n    d3.forceSimulation(nodes)\r\n        .force(\r\n            'link',\r\n            d3.forceLink(links).id((d) => d.id)\r\n        )\r\n        .force('charge', d3.forceManyBody())\r\n        .force('center', d3.forceCenter(width / 2, height / 2))\r\n        .tick(10)\r\n        .stop()\r\n    return { nodes, links }\r\n}\r\n\r\n// 给子图添加位置，给总图添加节点和链接随时间分布情况\r\nfunction assignPos(originData, sumGraphs) {\r\n    let idPos = {}\r\n    // 建立从id到节点的映射\r\n    sumGraphs.nodes.forEach((node) => {\r\n        idPos[node.id] = node\r\n    })\r\n    let node2Array = {}\r\n    let link2Array = {}\r\n    // 每一个time下每个点的位置,同时新建图，每个node在不同时间下id不一样\r\n    const subGraphs = originData.map((graph, index) => {\r\n        const nodes = graph.nodes.map((node) => {\r\n            const id = node.id\r\n            const x = idPos[node.id].x\r\n            const y = idPos[node.id].y\r\n            const time = index\r\n            if (!node2Array[id]) {\r\n                node2Array[id] = new Array(index + 1).fill(0)\r\n            } else {\r\n                while (node2Array[id].length < index + 1) {\r\n                    node2Array[id].push(0)\r\n                }\r\n            }\r\n            node2Array[id][index] = 1\r\n            return { id, x, y, time }\r\n        })\r\n        const links = graph.links.map((link) => {\r\n            const sourcePos = idPos[link.source]\r\n            const targetPos = idPos[link.target]\r\n            const source = {\r\n                id: link.source,\r\n                x: sourcePos.x,\r\n                y: sourcePos.y\r\n            }\r\n            const target = {\r\n                id: link.target,\r\n                x: targetPos.x,\r\n                y: targetPos.y\r\n            }\r\n            const time = index\r\n            const id = `${link.source}-${link.target}`\r\n            if (!link2Array[id]) {\r\n                link2Array[id] = new Array(index + 1).fill(0)\r\n            } else {\r\n                while (link2Array[id].length < index + 1) {\r\n                    link2Array[id].push(0)\r\n                }\r\n            }\r\n            link2Array[id][index] = 1\r\n            return {\r\n                source,\r\n                target,\r\n                time,\r\n                id\r\n            }\r\n        })\r\n        return { nodes, links }\r\n    })\r\n\r\n    const graphLength = originData.length\r\n    for (let key in node2Array) {\r\n        while (node2Array[key].length < graphLength) {\r\n            node2Array[key].push(0)\r\n        }\r\n    }\r\n    for (let key in link2Array) {\r\n        while (link2Array[key].length < graphLength) {\r\n            link2Array[key].push(0)\r\n        }\r\n    }\r\n    sumGraphs.nodes.forEach((node) => {\r\n        node.exsitStatus = node2Array[node.id]\r\n    })\r\n    sumGraphs.links.forEach((link) => {\r\n        link.id = `${link.source.id}-${link.target.id}`\r\n        link.exsitStatus = link2Array[link.id]\r\n    })\r\n    return subGraphs\r\n}\r\n\r\n// 将对象数据转化为数组数据\r\nexport function converObject2Array(data) {\r\n    return Object.values(data).map((v) => {\r\n        return {\r\n            links: Object.values(v.links),\r\n            nodes: Object.values(v.nodes)\r\n        }\r\n    })\r\n}\r\n\r\n/*\r\n// 求交集\r\nfunction intersection(setA, setB) {\r\n    let _intersection = new Set(setA)\r\n    for (let elem of setA) {\r\n        if (!setB.has(elem)) {\r\n            _intersection.delete(elem)\r\n        }\r\n    }\r\n    return _intersection\r\n}\r\n\r\n// setA 减去 setB\r\nfunction difference(setA, setB) {\r\n    let _difference = new Set(setA)\r\n    for (let elem of setB) {\r\n        _difference.delete(elem)\r\n    }\r\n    return _difference\r\n}\r\n\r\nfunction union(setA, setB) {\r\n    let _union = new Set(setA)\r\n    for (let elem of setB) {\r\n        _union.add(elem)\r\n    }\r\n    return _union\r\n}\r\n*/","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport PreviewItem from '../previewItem/previewItem.js'\r\nimport downloadSvg from '../../assets/download.svg'\r\n\r\nfunction Preview(props) {\r\n    // 要计算\r\n    return (\r\n        <div\r\n            style={{\r\n                width: `${props.width ? props.width : 1030}px`,\r\n                height: `${props.height ? props.height : 538}px`,\r\n            }}\r\n            className=\"preview-box\"\r\n        >\r\n            <div className=\"sub-title\">\r\n                &nbsp;Preview\r\n                <img\r\n                    className=\"icon\"\r\n                    src={downloadSvg}\r\n                    alt={\"downloadSvg\"}\r\n                />\r\n            </div>\r\n            <div\r\n                className = \"simple_scrollbar\"\r\n                style={{\r\n                    width: '100%',\r\n                    height: '508px',\r\n                    position: 'relative',\r\n                    overflowX: 'auto',\r\n                    overflowY:'auto'\r\n                }}\r\n            >\r\n                <PreviewItem\r\n                    isSample = {false}\r\n                    data= {props.data}\r\n                    config = {props.config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n\tdata: state.graphData,\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n} \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Preview)\r\n","import {PATTERN_TO_CHANGE} from './const.js'\r\nexport const COMPARISON_CONFIG = [\r\n    'shape',\r\n    'fillColor',\r\n    'strokeColor',\r\n    'strokeWidth',\r\n    'strokeType',\r\n    'radius',\r\n    'strokeDasharray',\r\n    'textColor'\r\n]\r\nexport const initConfig = {\r\n    graph: {\r\n        eachWidth: 300,\r\n        eachHeight: 300,\r\n        margin: 30,\r\n        layout: {\r\n            chooseType: 'matrix',\r\n            vertical: {\r\n                yDistance: 40,\r\n                linkStyle: {\r\n                    shape: 'curve'\r\n                }\r\n            },\r\n            offLine:{\r\n\r\n            },\r\n            onLine: {\r\n    \r\n            },\r\n            bipartite: {\r\n    \r\n            },\r\n            circular: {\r\n    \r\n            },\r\n            dagre: {\r\n\r\n            },\r\n            mds: {\r\n\r\n            },\r\n            grid: {\r\n                rows: 4\r\n            },\r\n            matrix: {\r\n                \r\n            }\r\n        },\r\n        nodeStyle: {\r\n            shape: 'circle',\r\n            fillColor: '#e6e6e6',\r\n            strokeColor: '#000000',\r\n            strokeWidth: 1,\r\n            radius: 8,\r\n            strokeType: 'solid',\r\n            textColor: 'white',\r\n            opacity: 1\r\n        },\r\n        linkStyle: {\r\n            shape: 'line',\r\n            strokeColor: '#908F8F',\r\n            strokeType: 'solid',\r\n            strokeWidth: 1,\r\n            opacity: 1,\r\n            strokeDasharray: '3,3',\r\n            pointShape: 'rect',\r\n            pointFillColor: '#E6E6E6',\r\n            pointOpacity: 1,\r\n            pointRadius: 8,\r\n            pointStrokeWidth:1,\r\n            pointStrokeColor: '#000000',\r\n            pointStrokeType: 'solid',\r\n        }\r\n    },\r\n    time: {\r\n        chooseTypes:['timeLine'],\r\n        timeLine: {\r\n            xDistance: 330,\r\n            yDistance: 0,\r\n            // 有可能只对节点进行该操作\r\n            element: 'all',\r\n            // 表示位置变换的函数，还有就是环状。。circular\r\n            type: 'linear'\r\n        },\r\n        insert: {\r\n            position:'origin',\r\n            margin: 10,\r\n            nodeStyle: {\r\n                shape: 'circle',\r\n                fillColor: '#FF5F00',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            linkStyle: {\r\n                shape: 'curve',\r\n                strokeColor: '#FF5F00',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                fillColor: '#ffffff',\r\n                radius: 8,\r\n            }\r\n        },\r\n        color: {\r\n            element: 'all',\r\n            startColor: '#F39350',\r\n            endColor: '#5DBDAD'\r\n        },\r\n        animation: {\r\n            speed: 500\r\n        },\r\n        markLine: {\r\n            shape: 'line',\r\n            strokeType: 'dashed',\r\n            strokeColor: '#FD8F8F',\r\n            strokeWidth: 1,\r\n            strokeDasharray: '5,5',\r\n            opacity:1,\r\n        },\r\n        chart: {\r\n            type:'line'\r\n        }\r\n    },\r\n    task: {\r\n        // 任务类型有：comparison\\find\\filter\r\n        taskType: 'comparison',\r\n        basedType: 'structure',\r\n        find:{\r\n            attr:'degree',\r\n            // 结构有shortest-path，也有哑铃结构dumb-bell\r\n            structure: 'graph',\r\n            relation: '>=',\r\n            value: 3\r\n        },\r\n        pattern: 'compare-structure',\r\n        change: [...PATTERN_TO_CHANGE['compare-structure']],\r\n        // change: [],\r\n        comparison: {\r\n            chooseItem: 'stable-Node',\r\n            chooseTypes: COMPARISON_CONFIG,\r\n            attr: '',\r\n            // keyFrame可为上一帧、下一帧、具体某一帧\r\n            keyFrame: 'next',\r\n            elements: 'all',\r\n            appearNode: {\r\n                shape: 'rect',\r\n                fillColor: '#F0785D',\r\n                strokeColor: '#454444',\r\n                strokeWidth: 1,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                radius: 8,\r\n                opacity: 1\r\n            },\r\n            stableNode: {\r\n                shape: 'circle',\r\n                fillColor: '#E6E6E6',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 6,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            disappearNode: {\r\n                shape: 'circle',\r\n                fillColor: '#24B8E8',\r\n                strokeColor: '#000000',\r\n                strokeWidth: 1,\r\n                radius: 8,\r\n                strokeType: 'solid',\r\n                textColor: 'white',\r\n                opacity: 1\r\n            },\r\n            appearLink: {\r\n                shape: 'curve',\r\n                strokeColor: '#F0785D',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            },\r\n            stableLink: {\r\n                shape: 'line',\r\n                strokeColor: '#DAD5D5',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            },\r\n            disappearLink: {\r\n                shape: 'curve',\r\n                strokeColor: '#24B8E8',\r\n                strokeType: 'solid',\r\n                strokeWidth: 1,\r\n                opacity: 1,\r\n                strokeDasharray: '3,3',\r\n                // fillColor: '#ffffff',\r\n                radius: 8,\r\n            }\r\n        }\r\n    }\r\n}","import {initConfig} from '../util/initConfig.js'\r\n\r\nconst UPDATE_CONFIG = \"UPDATE_CONFIG\";\r\nconst MODIFY_CONFIG = \"MODIFY_CONFIG\";\r\n\r\nexport function config(state = initConfig, action) {\r\n\tswitch (action.type) {\r\n\t\tcase MODIFY_CONFIG:\r\n            return {\r\n                ...state,\r\n                [action.payload.key]:{\r\n                    ...state[action.payload.key],\r\n                    ...action.payload.value\r\n                }\r\n            }\r\n        case UPDATE_CONFIG: \r\n            return action.data\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n// 修改\r\nexport function modifyConfig(payload) {\r\n\treturn { type: MODIFY_CONFIG, payload };\r\n}\r\n\r\n// 重设一套新的config\r\nexport function update(config) {\r\n\treturn { type: UPDATE_CONFIG, data: config };\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport ReactJson from 'react-json-view'\r\nimport FileSaver from 'file-saver'\r\nimport { \r\n    REACT_JSON_OPTIONS,\r\n} from '../../util/const'\r\nimport { connect } from 'react-redux'\r\nimport { update, modifyConfig } from '../../redux/config.redux.js'                                                                                                                            \r\nimport './grammarPanel.css'\r\nimport { getSimpleGrammar, updateSimpleConfig } from '../../util/dnetChart.js'\r\nimport addSvg from '../../assets/add.svg'\r\nimport downloadSvg from '../../assets/download.svg'\r\n\r\nfunction GrammarPanel(props) {\r\n    const [grammarType, setGrammarType] = useState('simple')\r\n    function handleTemplateAdd() {\r\n        console.log('未实现grammar的加载')\r\n    }\r\n\r\n    function handleTemplateSave() {\r\n        let content = JSON.stringify(props.config)\r\n        let type = 'data:application/json;charset=utf-8'\r\n        let blob = new Blob([content], { type: type })\r\n\r\n        let isFileSaverSupported = false\r\n        try {\r\n            isFileSaverSupported = !!new Blob()\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n        if (isFileSaverSupported) {\r\n            FileSaver.saveAs(blob, 'template.json')\r\n        } else {\r\n            FileSaver.open(encodeURI(type + ',' + content))\r\n        }\r\n    }\r\n\r\n    function handleReactJsonEdit(obj) {\r\n        // console.log(\"obj, type\", JSON.stringify(obj), type)\r\n       \r\n        if(grammarType==='all'){\r\n            props.update(obj.updated_src)\r\n        }else{\r\n            const flag = updateSimpleConfig(obj, props.config, props.modifyConfig)\r\n            if(!flag){\r\n                return false\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"grammar-panel-box\">\r\n            <div className=\"sub-title\">\r\n                &nbsp;Grammar\r\n                <img\r\n                    className=\"icon\"\r\n                    src={addSvg}\r\n                    onClick={handleTemplateAdd}\r\n                />\r\n                <img\r\n                    className=\"icon\"\r\n                    src={downloadSvg}\r\n                    onClick={handleTemplateSave}\r\n                />\r\n            </div>\r\n            <div className=\"gp-header-text\">\r\n                <div\r\n                    className={`gp-sub-title ${grammarType === 'simple' ? 'gp-sub-choose' : ''}`}\r\n                    onClick={() => setGrammarType('simple')}\r\n                >\r\n                    Simple\r\n                </div>\r\n                <div className=\"gp-sub-divide\"></div>\r\n                <div\r\n                    className={`gp-sub-title ${grammarType === 'all' ? 'gp-sub-choose' : ''}`}\r\n                    onClick={() => setGrammarType('all')}\r\n                >\r\n                    All\r\n                </div>\r\n            </div>\r\n            <div className=\"json-text simple_scrollbar\">\r\n                <ReactJson\r\n                    className=\"json-box\"\r\n                    onEdit={handleReactJsonEdit}\r\n                    {...REACT_JSON_OPTIONS}\r\n                    src={grammarType === 'simple' ? getSimpleGrammar(props.config) : props.config}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    update,\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GrammarPanel)\r\n","import React from \"react\"\nimport ReactJson from \"react-json-view\"\nimport { Upload } from \"antd\"\nimport FileSaver from \"file-saver\"\n\nexport default class Grammar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            filename: \"\",\n            jsonData: {},\n            jsonOptions: {\n                displayDataTypes: false,\n                name: null,\n                indentWidth: 2,\n                collapseStringsAfterLength: 20,\n //               iconStyle: \"circle\",\n                enableClipboard: false,\n                displayObjectSize: false\n            },\n        }\n    }\n    componentDidMount() {}\n\n    Export = () => {\n        let content = JSON.stringify(this.state.jsonData)\n        let type = \"data:application/json;charset=utf-8\"\n        let blob = new Blob([content], { type: type })\n\n        let isFileSaverSupported = false\n        try {\n            isFileSaverSupported = !!new Blob()\n        } catch (e) {\n            console.log(e)\n        }\n\n        if (isFileSaverSupported) {\n            FileSaver.saveAs(blob, this.state.filename)\n        } else {\n            FileSaver.open(encodeURI(type + \",\" + content))\n        }\n    }\n    render() {\n        const { fileList } = this.state\n        const props = {\n            name: \"UploadFile\", //name得看接口需求，name与接口需要的name一致\n            showUploadList: false,\n            data: {}, //接口需要的参数，无参数可以不写\n            beforeUpload: (file) => {\n                console.log(file)\n                const reader = new FileReader()\n                reader.readAsText(file)\n                reader.onload = () => {\n                    let myData = reader.result\n                    let myJson = JSON.parse(myData)\n                    \n                    this.setState((state) => ({\n                        fileList: [file],\n                        jsonData: myJson,\n                        filename: file.name,\n                    }))\n                    if (this.props.onSubmit) {\n                        const { filename, jsonData } = this.state\n                        this.props.onSubmit({ filename, jsonData })\n                    }\n                }\n                console.log(file.data)\n                return false\n            },\n        }\n        return (\n            <div \n                style={{\n                    width:`${this.props.width ? this.props.width: 1035}px`,\n                    height: `${this.props.height ? this.props.height: 380}px`\n                }}\n                className=\"grammar-box \">\n                <div className=\"sub-title\">\n                    &nbsp;Grammar\n                    <Upload\n                        className=\"upload-item\"\n                        {...props}\n                        fileList={fileList}\n                    >\n                        <svg className=\"icon\" aria-hidden=\"true\">\n                            <use xlinkHref=\"#icon-add\"></use>\n                        </svg>\n                    </Upload>\n                    <svg\n                        className=\"icon\"\n                        aria-hidden=\"true\"\n                    >\n                        <use onClick={this.Export} xlinkHref=\"#icon-download\"></use>\n                    </svg>\n                </div>\n                <div className=\"filename\">{this.state.filename}</div>\n                <div className=\"json-text simple_scrollbar\">\n                    <ReactJson\n                        className=\"json-box\"\n                        {...this.state.jsonOptions}\n                        src={this.props.options}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n","export const configSet = [\r\n    {},\r\n    {\r\n        time: 'timeLine'\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: ['timeLine', 'markLine']\r\n    },\r\n    {\r\n        time: 'animation',\r\n        comparison: {\r\n            isOn: true,\r\n            chooseTypes: ['fillColor']\r\n        }\r\n    },\r\n    {\r\n        time: ['animation', 'timeLine'],\r\n        comparison: true\r\n    },\r\n    {\r\n        time: {\r\n            chooseTypes: ['timeLine','insert'],\r\n            insert: {\r\n                position: 'center', //目前就实现这一个。。。\r\n                linkStyle: {\r\n                    shape: 'line'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        time: {\r\n            chooseTypes: ['timeLine','insert'],\r\n            insert: {\r\n                position: 'bottomRight', //目前就实现这一个。。。\r\n                linkStyle: {\r\n                    shape: 'curve'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    {\r\n        time: [\r\n            'timeLine',\r\n            {\r\n                insert: {\r\n                    timeLine: 'bottom', //目前就实现这一个。。。\r\n                    linkStyle: {\r\n                        shape: 'curve'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        time: 'timeLine'\r\n    },\r\n    {\r\n        comparison: 'color'\r\n    },\r\n\r\n    {\r\n        time: 'timeLine',\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: {\r\n            timeLine: {\r\n                element: 'link'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: [\r\n            'animation',\r\n            {\r\n                timeLine: {\r\n                    element: 'node'\r\n                }\r\n            }\r\n        ],\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: [\r\n            'animation',\r\n            {\r\n                timeLine: {\r\n                    element: 'link'\r\n                }\r\n            }\r\n        ],\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'link'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        }\r\n    },\r\n    {\r\n        layout: 'vertical',\r\n        time: {\r\n            timeLine: {\r\n                element: 'node'\r\n            }\r\n        },\r\n        comparison: 'color'\r\n    },\r\n    {\r\n        time: ['timeLine', 'insert']\r\n    },\r\n    \r\n    {\r\n        time: [\r\n            'timeLine',\r\n            'color',\r\n            {\r\n                insert: {\r\n                    timeLine: 'bottom', //目前就实现这一个。。。\r\n                    linkStyle: {\r\n                        shape: 'curve'\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    }\r\n    */\r\n]\r\n","import React, { useState } from 'react'\r\nimport Grammar from '../../components/grammar.js'\r\nimport Preview from '../../components/preview/preview.js'\r\nimport * as testData from '../../data/import/test1.json'\r\nimport { configSet } from './config.js'\r\nimport './exampleBoard.css'\r\nimport { assignConfigs } from '../../util/dnetChart'\r\nconst dataset = [\r\n    {\r\n        dataName: 'testData',\r\n        description: 'Barley yield by variety across the upper midwest in 1931 and 1932',\r\n        data: testData.default\r\n    }\r\n]\r\n\r\nexport default function ExampleBoard() {\r\n    const [jsonData, setJsonData] = useState(dataset[0].data)\r\n    return (\r\n        <div className=\"example-board\">\r\n            {configSet.map((configItem, index) => {\r\n                const config = assignConfigs(configItem)\r\n                // return null\r\n                return (\r\n                    <div className=\"example-row\" key={`example-row-${index}`}>\r\n                        <Grammar\r\n                            options={configItem}\r\n                            width={340}\r\n                            height={500}\r\n                        />\r\n                        <Preview data={jsonData.graphs} config={config} width={1545} height={500} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport deleteSvg from '../../assets/delete.svg'\r\nimport checkSvg from '../../assets/check.svg'\r\nimport PreviewItem from '../previewItem/previewItem.js'\r\nimport * as exampleData from '../../data/import/test2.json'\r\nimport { DNET_SAMPLE_WIDTH, DNET_SAMPLE_HEIGHT } from '../../util/const'\r\n\r\nexport default class TemplateList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        \r\n\r\n        // let flag = false\r\n        if(this.props.storageKeyArr.length===nextProps.storageKeyArr.length){\r\n            return false\r\n        }\r\n        return true\r\n\r\n        // const stateFields = Object.keys(this.state)\r\n        // const sLength = stateFields.length\r\n        // for (let i = 0; i < sLength; i = i + 1) {\r\n        //     const field = stateFields[i]\r\n        //     if (JSON.stringify(this.state[field]) !== JSON.stringify(nextState[field])) {\r\n        //         flag = true\r\n        //         break\r\n        //     }\r\n        // }\r\n        // if(!flag){\r\n        //     const fields = Object.keys(this.props)\r\n        //     const fieldsLength = fields.length\r\n        //     let flag = false\r\n        //     for (let i = 0; i < fieldsLength; i = i + 1) {\r\n        //         const field = fields[i]\r\n        //         if (JSON.stringify(this.props[field]) !== JSON.stringify(nextProps[field])) {\r\n        //             flag = true\r\n        //             break\r\n        //         }\r\n        //     }\r\n        // }\r\n        // return flag\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"template-content-box simple_scrollbar\">\r\n                {this.props.storageKeyArr.map((v, storageIndex) => {\r\n                    const vContent = JSON.parse(window.localStorage.getItem(v))\r\n                    if (!vContent) {\r\n                        return null\r\n                    }\r\n                    return (\r\n                        <div className=\"sample-item-wrap\" key={`sample-${storageIndex}`}>\r\n                            <div className=\"sample-item-information\">\r\n                                <div className=\"sample-item-icon\">\r\n                                    <div className=\"item-image-wrap\">\r\n                                        <img\r\n                                            className=\"sample-item-svg\"\r\n                                            src={checkSvg}\r\n                                            onClick={() => this.props.handleTemplateCheck(v)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"item-image-wrap\">\r\n                                        <img\r\n                                            className=\"sample-item-svg\"\r\n                                            src={deleteSvg}\r\n                                            onClick={() => this.props.handleTemplateRemove(v)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"sample-item-name\">{`Specification-${storageIndex}`}</div>\r\n                            </div>\r\n                            <div\r\n                                className=\"sample-item-chart\"\r\n                                style={{\r\n                                    // width: DNET_SAMPLE_WIDTH,\r\n                                    height: DNET_SAMPLE_HEIGHT\r\n                                }}\r\n                            >\r\n                                <PreviewItem \r\n                                    data={exampleData.graphs} \r\n                                    config={vContent.config} \r\n                                    sampleWidth = {DNET_SAMPLE_WIDTH}\r\n                                    sampleHeight = {DNET_SAMPLE_HEIGHT}\r\n                                    isSample = {true}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}","export const  isDnetStorageKey = (v) => {\r\n  const tempArr = v.split('-')\r\n  if(tempArr.length>1&&tempArr[0]==='DnetG'){\r\n    return true\r\n  }else{\r\n    return false\r\n  }\r\n}\r\n\r\nexport const keySort = (a, b)=>{\r\n  const aIndex = Number(a.split('-')[1])\r\n  const bIndex = Number(b.split('-')[1])\r\n  return bIndex - aIndex\r\n}\r\n\r\nexport const getStorageKeyArr = (localStorage) => {\r\n    const storageKeyArr = [] \r\n    new Array(localStorage.length).fill(\"0\").forEach((v,i)=>{\r\n      const key = localStorage.key(i)\r\n      if(isDnetStorageKey(key)){\r\n        // 过滤拿到本应用的localStorage键值\r\n        storageKeyArr.push(key)\r\n      }\r\n    })\r\n    storageKeyArr.sort(keySort)\r\n    return storageKeyArr\r\n}","export const defaultTemplates =  [\r\n  {\r\n    name:\"oneMds\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"oneMds\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"none\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 0,\r\n          \"radius\": 2,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 0,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\"\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 5,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#ECAA7B\",\r\n          \"endColor\": \"#98F3E3\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"attr\",\r\n        \"find\": { \"attr\": \"degree\", \"relation\": \">=\", \"value\": 3 },\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#ECAA7B\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#98F3E3\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#ECAA7B\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#98F3E3\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: \"vertical-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 350,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 10,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"force-color\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 350,\r\n        \"eachHeight\": 350,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"color\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-animation',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"animation\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-markLine',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'timeLine-insert',\r\n    template: {\r\n      \"graph\": {\r\n        \"width\": 250,\r\n        \"height\": 250,\r\n        \"eachWidth\": 250,\r\n        \"eachHeight\": 250,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circle\": {},\r\n          \"dagre\": {\r\n    \r\n          },\r\n          \"mds\": {\r\n\r\n          },\r\n          \"grid\": {\r\n              \"rows\": 4\r\n          }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": 'comparison',\r\n        \"basedType\": 'structure',\r\n        \"comparison\": {\r\n          \"isOn\": true,\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n    },\r\n      \r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\", \"insert\"],\r\n        \"timeLine\": { \"xDistance\": 250, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ffcc00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"dashed\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"find-structure\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 160,\r\n        \"eachHeight\": 290,\r\n        \"margin\": 20,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 4,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"find\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"appear-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 6,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": { \"xDistance\": 160, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"find-attr\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 200,\r\n        \"eachHeight\": 200,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"circular\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 6,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"insert\", \"animation\", \"markLine\"],\r\n        \"timeLine\": { \"xDistance\": 270, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"center\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#ff5f00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name:\"find-structure\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 160,\r\n        \"eachHeight\": 290,\r\n        \"margin\": 20,\r\n        \"layout\": {\r\n          \"chooseType\": \"circular\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 }\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#DAD5D5\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 4,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\"\r\n        }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"attr\",\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"keyFrame\": \"last\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 6,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": { \"xDistance\": 160, \"yDistance\": 0, \"element\": \"all\" },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\"\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name:'bipartite-timeLine',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 200,\r\n        \"eachHeight\": 400,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"bipartite\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 7,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#73C105\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\"\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"color\", \"markLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 140,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#797878\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"attr\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  },\r\n  {\r\n    name:\"bipartite-color-chart\",\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 200,\r\n        \"eachHeight\": 500,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"bipartite\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"rect\",\r\n          \"fillColor\": \"#f9f5f5\",\r\n          \"strokeColor\": \"#b3afaf\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 9,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\"\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"chart\", \"markLine\", \"color\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 140,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"origin\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#f39350\",\r\n          \"endColor\": \"#5dbdad\"\r\n        },\r\n        \"animation\": { \"speed\": 500 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#ECAA7B\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#fffafa\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#98F3E3\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#ECAA7B\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#98F3E3\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name:'timeLine-link',\r\n    template:{\r\n      \"graph\": {\r\n        \"eachWidth\": 100,\r\n        \"eachHeight\": 420,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#5baafa\",\r\n          \"strokeColor\": \"#255583\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 9,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#5baafa\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 9,\r\n          \"opacity\": 0.3,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\", \"color\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 100,\r\n          \"yDistance\": 0,\r\n          \"element\": \"link\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#b5b2b2\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#5baafa\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name:'forceDirect-chart',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 400,\r\n        \"eachHeight\": 400,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#5baafa\",\r\n          \"strokeColor\": \"#255583\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 9,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#5baafa\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 5,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"chart\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 6,\r\n          \"yDistance\": 3,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"bar\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#5baafa\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name:'position-xy',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"forceDirect\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#5baafa\",\r\n          \"strokeColor\": \"#255583\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 8,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#5baafa\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 6,\r\n          \"yDistance\": 3,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#5baafa\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'grid-chart',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"grid\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#aaa7a7\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 8,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#aaa7a7\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 6,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"chart\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 350,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"bar\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'grid-position-chart-time',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"matrix\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"rect\",\r\n          \"fillColor\": \"#777676\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 8,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#a09e9e\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"chart\", \"color\", \"timeLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 350,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"bar\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"compare-structure\",\r\n        \"change\": [\r\n          \"appearedNode\",\r\n          \"appearedEdge\",\r\n          \"disappearedNode\",\r\n          \"disappearedEdge\",\r\n          \"unchangedNode\",\r\n          \"unchangedEdge\"\r\n        ],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }    \r\n  },\r\n  {\r\n    name: 'vertical-position',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 100,\r\n        \"eachHeight\": 420,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"vertical\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#5baafa\",\r\n          \"strokeColor\": \"#255583\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 9,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"curve\",\r\n          \"strokeColor\": \"#5baafa\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\", \"markLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 300,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeColor\": \"#b5b2b2\",\r\n          \"strokeWidth\": 2,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"disappear-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#5baafa\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  },\r\n  {\r\n    name: 'matrix-only',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 20,\r\n        \"layout\": {\r\n          \"chooseType\": \"matrix\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 7,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 2,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#ffffff\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\"\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [],\r\n        \"timeLine\": {\r\n          \"xDistance\": 330,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#fd8f8f\",\r\n          \"endColor\": \"#90b5fb\"\r\n        },\r\n        \"animation\": { \"speed\": 500 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"appear-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#ECAA7B\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 6,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#98F3E3\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#ECAA7B\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 5\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#98F3E3\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'insert',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 300,\r\n        \"eachHeight\": 300,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"matrix\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#baeafd\",\r\n          \"strokeColor\": \"#626262\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 5,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"chart\", \"timeLine\", \"insert\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 400,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 5,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"none\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"graph\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"graph\",\r\n        \"change\": [\"unchangedNode\", \"unchangedEdge\"],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'matrix-chart',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 400,\r\n        \"eachHeight\": 400,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"matrix\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"circle\",\r\n          \"fillColor\": \"#fbf6f6\",\r\n          \"strokeColor\": \"#434242\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 10,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#8a8585\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#ffffff\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"chart\", \"color\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 350,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"linear\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"compare-structure\",\r\n        \"change\": [\r\n          \"appearedNode\",\r\n          \"appearedEdge\",\r\n          \"disappearedNode\",\r\n          \"disappearedEdge\",\r\n          \"unchangedNode\",\r\n          \"unchangedEdge\"\r\n        ],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Node\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 8,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 8,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#908F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 8,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  {\r\n    name: 'matrix-position-circular-comparison',\r\n    template: {\r\n      \"graph\": {\r\n        \"eachWidth\": 200,\r\n        \"eachHeight\": 200,\r\n        \"margin\": 30,\r\n        \"layout\": {\r\n          \"chooseType\": \"matrix\",\r\n          \"vertical\": { \"yDistance\": 40, \"linkStyle\": { \"shape\": \"curve\" } },\r\n          \"offLine\": {},\r\n          \"onLine\": {},\r\n          \"bipartite\": {},\r\n          \"circular\": {},\r\n          \"dagre\": {},\r\n          \"mds\": {},\r\n          \"grid\": { \"rows\": 4 },\r\n          \"matrix\": {}\r\n        },\r\n        \"nodeStyle\": {\r\n          \"shape\": \"rect\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"strokeColor\": \"#000000\",\r\n          \"strokeWidth\": 1,\r\n          \"radius\": 3,\r\n          \"strokeType\": \"solid\",\r\n          \"textColor\": \"white\",\r\n          \"opacity\": 1\r\n        },\r\n        \"linkStyle\": {\r\n          \"shape\": \"line\",\r\n          \"strokeColor\": \"#908F8F\",\r\n          \"strokeType\": \"solid\",\r\n          \"strokeWidth\": 1,\r\n          \"opacity\": 1,\r\n          \"strokeDasharray\": \"3,3\",\r\n          \"pointShape\": \"rect\",\r\n          \"pointFillColor\": \"#98F3E3\",\r\n          \"pointOpacity\": 1,\r\n          \"pointRadius\": 8,\r\n          \"pointStrokeWidth\": 1,\r\n          \"pointStrokeColor\": \"#000000\",\r\n          \"pointStrokeType\": \"solid\",\r\n          \"fillColor\": \"#ffffff\",\r\n          \"radius\": 8\r\n        }\r\n      },\r\n      \"time\": {\r\n        \"chooseTypes\": [\"timeLine\"],\r\n        \"timeLine\": {\r\n          \"xDistance\": 300,\r\n          \"yDistance\": 0,\r\n          \"element\": \"all\",\r\n          \"type\": \"circular\"\r\n        },\r\n        \"insert\": {\r\n          \"position\": \"bottom\",\r\n          \"margin\": 10,\r\n          \"nodeStyle\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#FF5F00\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 6,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"linkStyle\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FF5F00\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 1,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"fillColor\": \"#ffffff\",\r\n            \"radius\": 8\r\n          }\r\n        },\r\n        \"color\": {\r\n          \"element\": \"all\",\r\n          \"startColor\": \"#FD8F8F\",\r\n          \"endColor\": \"#90B5FB\"\r\n        },\r\n        \"animation\": { \"speed\": 1800 },\r\n        \"markLine\": {\r\n          \"shape\": \"line\",\r\n          \"strokeType\": \"dashed\",\r\n          \"strokeColor\": \"#FD8F8F\",\r\n          \"strokeWidth\": 1,\r\n          \"strokeDasharray\": \"5,5\",\r\n          \"opacity\": 1\r\n        },\r\n        \"chart\": { \"type\": \"line\" }\r\n      },\r\n      \"task\": {\r\n        \"taskType\": \"comparison\",\r\n        \"basedType\": \"structure\",\r\n        \"find\": {\r\n          \"attr\": \"degree\",\r\n          \"structure\": \"short-path\",\r\n          \"relation\": \">=\",\r\n          \"value\": 3\r\n        },\r\n        \"pattern\": \"compare-structure\",\r\n        \"change\": [\r\n          \"appearedNode\",\r\n          \"appearedEdge\",\r\n          \"disappearedNode\",\r\n          \"disappearedEdge\",\r\n          \"unchangedNode\",\r\n          \"unchangedEdge\"\r\n        ],\r\n        \"comparison\": {\r\n          \"chooseItem\": \"stable-Link\",\r\n          \"chooseTypes\": [\r\n            \"shape\",\r\n            \"fillColor\",\r\n            \"strokeColor\",\r\n            \"strokeWidth\",\r\n            \"strokeType\",\r\n            \"radius\",\r\n            \"strokeDasharray\",\r\n            \"textColor\"\r\n          ],\r\n          \"attr\": \"\",\r\n          \"keyFrame\": \"next\",\r\n          \"elements\": \"all\",\r\n          \"appearNode\": {\r\n            \"shape\": \"rect\",\r\n            \"fillColor\": \"#FD8F8F\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"radius\": 5,\r\n            \"opacity\": 1\r\n          },\r\n          \"stableNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#DAD5D5\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 5,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"disappearNode\": {\r\n            \"shape\": \"circle\",\r\n            \"fillColor\": \"#90B5FB\",\r\n            \"strokeColor\": \"#000000\",\r\n            \"strokeWidth\": 1,\r\n            \"radius\": 5,\r\n            \"strokeType\": \"solid\",\r\n            \"textColor\": \"white\",\r\n            \"opacity\": 1\r\n          },\r\n          \"appearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#FD8F8F\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 4,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 5,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"stableLink\": {\r\n            \"shape\": \"line\",\r\n            \"strokeColor\": \"#8f8f8e\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 2,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 4,\r\n            \"fillColor\": \"#ffffff\"\r\n          },\r\n          \"disappearLink\": {\r\n            \"shape\": \"curve\",\r\n            \"strokeColor\": \"#90B5FB\",\r\n            \"strokeType\": \"solid\",\r\n            \"strokeWidth\": 3,\r\n            \"opacity\": 1,\r\n            \"strokeDasharray\": \"3,3\",\r\n            \"radius\": 5,\r\n            \"fillColor\": \"#ffffff\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n]\r\n  \r\n","import React, { useState, useEffect } from 'react'\r\nimport './templatePanel.css'\r\nimport TemplateList from '../templateList/templateList.js'\r\nimport { getStorageKeyArr } from '../../util/template'\r\nimport addSvg from '../../assets/add.svg'\r\nimport { defaultTemplates } from '../../data/template.js'\r\nimport { connect } from 'react-redux'\r\nimport { update } from '../../redux/config.redux.js'\r\nimport { initConfig } from '../../util/initConfig.js'\r\nimport * as _ from 'lodash'\r\nimport { coverTemplateConfig } from '../../util/dnetChart'\r\n\r\nfunction TemplatePanel(props) {\r\n    const [localStorage] = useState(window.localStorage)\r\n    const [storageLength, setStorageLength] = useState(0)\r\n    const [storageKeyArr, setStorageKeyArr] = useState(getStorageKeyArr(localStorage))\r\n\r\n\r\n    useEffect(() => {\r\n        // 初始化，判断该电脑的localStorage是否加载过默认的模板，没有先加载\r\n        if (localStorage.lastIndex === undefined) {\r\n            // 没有加载过模板\r\n            localStorage.lastIndex = 0\r\n            for (let i = defaultTemplates.length - 1; i > 0; i--) {\r\n                const item = defaultTemplates[i]\r\n                const lastIndex = localStorage.lastIndex\r\n                const key = `DnetG-${lastIndex}`\r\n                const content = JSON.stringify({\r\n                    config: item.template,\r\n                    name: item.name,\r\n                    index: lastIndex\r\n                })\r\n                localStorage.setItem(key, content)\r\n                localStorage.lastIndex = 1 + Number(lastIndex)\r\n            }\r\n            setStorageLength(localStorage.length)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setStorageKeyArr(getStorageKeyArr(localStorage))\r\n    }, [storageLength])\r\n\r\n    function handleTemplateAdd() {\r\n        if (localStorage.lastIndex === undefined) {\r\n            // 初始化\r\n            localStorage.lastIndex = 0\r\n        }\r\n        if (!localStorage) {\r\n            alert('浏览器支持localstorage')\r\n            return false\r\n        } else {\r\n            //写入当前config\r\n            const lastIndex = localStorage.lastIndex\r\n            const key = `DnetG-${lastIndex}`\r\n            const content = JSON.stringify({\r\n                config: props.config,\r\n                name: `specification-${lastIndex}`,\r\n                index: lastIndex\r\n            })\r\n            localStorage.setItem(key, content)\r\n            localStorage.lastIndex = 1 + Number(lastIndex)\r\n            setStorageLength(localStorage.length)\r\n        }\r\n    }\r\n\r\n    function handleTemplateCheck(v) {\r\n        const vContent = JSON.parse(localStorage.getItem(v))\r\n        if (vContent && vContent.config) {\r\n            const newInitConfig = _.cloneDeep(initConfig)\r\n            coverTemplateConfig(newInitConfig, vContent.config)\r\n            props.update(newInitConfig)\r\n        }\r\n    }\r\n\r\n    function handleTemplateRemove(storeKey) {\r\n        localStorage.removeItem(storeKey)\r\n        setStorageLength(localStorage.length)\r\n    }\r\n     \r\n    return (\r\n        <div\r\n            style={{\r\n                width: '1030px',\r\n                height: '456px'\r\n            }}\r\n            className=\"template-panel-box\"\r\n        >\r\n            <div className=\"sub-title\">\r\n                &nbsp;template\r\n                <img\r\n                    className=\"icon\"\r\n                    src={addSvg}\r\n                    onClick={handleTemplateAdd}\r\n                />\r\n            </div>\r\n            <TemplateList\r\n                storageKeyArr = {storageKeyArr}\r\n                handleTemplateCheck = {handleTemplateCheck}\r\n                handleTemplateRemove = {handleTemplateRemove}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    config: state.config\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    update\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePanel)\r\n","import React, { useState } from 'react'\r\nimport { Select, Input, Collapse, InputNumber } from 'antd'\r\nimport { ChromePicker } from 'react-color'\r\nimport './nodeLinkStylePanel.css'\r\n\r\nconst colorIndexToName = ['strokeColor', 'fillColor', 'textColor','pointFillColor']\r\nconst { Option } = Select\r\nconst { Panel } = Collapse\r\n\r\nexport default function NodeLinkStylePanel(props) {\r\n    const [colorPickerDisplay, setColorPickerDisplay] = useState([false, false, false, false])\r\n    const { changeOptions, type } = props\r\n    const strokeDasharrayOption = changeOptions.strokeDasharray\r\n        ? changeOptions.strokeDasharray.split(',').map((v) => parseInt(v))\r\n        : null\r\n    const changeElementStyle = (option) => {\r\n        const changeOptions = { ...props.changeOptions, ...option }\r\n        props.onSubmit({ [props.optionKey]: { ...changeOptions, ...option } })\r\n    }\r\n    const handleStyleChange = (key, value) => {\r\n        changeElementStyle({ [key]: value })\r\n    }\r\n    const handleStrokeDashChange = (index, value) => {\r\n        const tempArr = [...strokeDasharrayOption]\r\n        tempArr[index] = value\r\n        changeElementStyle({ strokeDasharray: tempArr.join(',') })\r\n    }\r\n\r\n    const handleElementColorClick = (index) => {\r\n        const tempArr = [...colorPickerDisplay]\r\n        tempArr[index] = !tempArr[index]\r\n        setColorPickerDisplay(tempArr)\r\n    }\r\n\r\n    const handleElementColorChange = (colorCode, index) => {\r\n        changeElementStyle({ [colorIndexToName[index]]: colorCode.hex })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"change-option-panel\"\r\n            style={{\r\n                margin: '10px'\r\n            }}\r\n        >\r\n            {/* 选择形状：节点和链接是不一样的。\r\n                节点：圆形、三角形、方形 \r\n                链接：直线、曲线\r\n            */}\r\n            <Collapse\r\n                // bordered={false}\r\n                expandIconPosition={'right'}\r\n                style={{\r\n                    backgroundColor: '#ffffff',\r\n                }}\r\n            >\r\n                <Panel className=\"nlsp-panel\" header={props.optionKey}>\r\n                    {type === 'Node' ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Shape:</div>\r\n                            <Select\r\n                                value={changeOptions.shape}\r\n                                size=\"small\"\r\n                                onChange={(value) => handleStyleChange('shape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"circle\">\r\n                                    <div>circle</div>\r\n                                </Option>\r\n                                <Option key=\"rect\">\r\n                                    <div>rect</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Shape:</div>\r\n                            <Select\r\n                                size=\"small\"\r\n                                value={changeOptions.shape}\r\n                                onChange={(value) => handleStyleChange('shape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"line\">\r\n                                    <div>line</div>\r\n                                </Option>\r\n                                <Option key=\"curve\">\r\n                                    <div>curve</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    )}\r\n                    {/* 选择线型 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>StrokeType:</div>\r\n                        <Select\r\n                            size=\"small\"\r\n                            value={changeOptions.strokeType}\r\n                            style={{ width: 115 }}\r\n                            onChange={(value) => handleStyleChange('strokeType', value)}\r\n                        >\r\n                            <Option value=\"solid\">solid</Option>\r\n                            <Option value=\"dashed\">dashed</Option>\r\n                        </Select>\r\n                    </div>\r\n                    {/* 输入线宽 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>StrokeWidth:</div>\r\n                        <Input\r\n                            value={changeOptions.strokeWidth}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            onChange={(e) =>\r\n                                handleStyleChange('strokeWidth', Number(e.target.value))\r\n                            }\r\n                            style={{ width: '115px' }}\r\n                        />\r\n                    </div>\r\n                    {/* 输入透明度 */}\r\n                    <div className=\"change-option-item\">\r\n                        <div>Opacity:</div>\r\n                        <InputNumber\r\n                            value={changeOptions.opacity}\r\n                            type=\"number\"\r\n                            size=\"small\"\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.1}\r\n                            onChange={(e) => handleStyleChange('opacity', e)}\r\n                            style={{ width: '115px' }}\r\n                        />\r\n                    </div>\r\n                    {/* 输入半径长度 */}\r\n                    {changeOptions.radius ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>Radius:</div>\r\n                            <Input\r\n                                value={changeOptions.radius}\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                onChange={(e) =>\r\n                                    handleStyleChange('radius', Number(e.target.value))\r\n                                }\r\n                                style={{ width: '115px' }}\r\n                            />\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接虚线的设置 */}\r\n                    {strokeDasharrayOption ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>StrokeDasharray:</div>\r\n                            <div>\r\n                                <Input\r\n                                    value={strokeDasharrayOption[0]}\r\n                                    type=\"number\"\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        handleStrokeDashChange(0, Number(e.target.value))\r\n                                    }\r\n                                    style={{ width: '50px' }}\r\n                                />\r\n                                <Input\r\n                                    value={strokeDasharrayOption[1]}\r\n                                    type=\"number\"\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        handleStrokeDashChange(1, Number(e.target.value))\r\n                                    }\r\n                                    style={{\r\n                                        width: '50px',\r\n                                        marginLeft: '10px'\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 节点的外边颜色或 线型颜色 */}\r\n                    {\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>strokeColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(0)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.strokeColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[0] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.strokeColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 0)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    }\r\n                    {/* 节点内部的填充颜色 */}\r\n                    {changeOptions.fillColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>fillColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(1)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.fillColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[1] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.fillColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 1)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 节点内部的填充颜色 */}\r\n                    {changeOptions.textColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>textColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(2)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.textColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[2] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.textColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 2)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                    {/** 链接的节点形式的形状设置，用在matrix布局中 */}\r\n                    {changeOptions.pointShape ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>PointShape:</div>\r\n                            <Select\r\n                                value={changeOptions.pointShape}\r\n                                size=\"small\"\r\n                                onChange={(value) => handleStyleChange('pointShape', value)}\r\n                                style={{ width: 115 }}\r\n                            >\r\n                                <Option key=\"circle\">\r\n                                    <div>circle</div>\r\n                                </Option>\r\n                                <Option key=\"rect\">\r\n                                    <div>rect</div>\r\n                                </Option>\r\n                            </Select>\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接的节点形式的透明度设置，用在matrix布局中 */}\r\n                    {changeOptions.pointOpacity ? (\r\n                        <div className=\"change-option-item\">\r\n                            <div>PointOpacity:</div>\r\n                            <InputNumber\r\n                                value={changeOptions.pointOpacity}\r\n                                type=\"number\"\r\n                                size=\"small\"\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.1}\r\n                                onChange={(e) => handleStyleChange('pointOpacity', e)}\r\n                                style={{ width: '115px' }}\r\n                            />\r\n                        </div>\r\n                    ) : null}\r\n                    {/* 链接的节点形式的填充颜色，用在matrix布局中 */}\r\n                    {changeOptions.pointFillColor ? (\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>PointFillColor</div>\r\n                                <div\r\n                                    onClick={() => handleElementColorClick(3)}\r\n                                    style={{\r\n                                        backgroundColor: changeOptions.pointFillColor,\r\n                                        width: '115px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {colorPickerDisplay[3] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={changeOptions.pointFillColor}\r\n                                    onChange={(value) => handleElementColorChange(value, 3)}\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    ) : null}\r\n                </Panel>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ArcLinkItem from '../arcLinkItem/arcLinkItem.js'\r\nimport NodeItem from '../nodeItem/nodeItem.js'\r\nimport LinkItem from '../linkItem/linkItem.js'\r\nimport { getArcPathData } from '../../util/dnetChart.js'\r\nimport { SAMPLE_LINK_SOURCE as SLS,  \r\n         SAMPLE_LINK_TARGET as SLT, \r\n         SAMPLE_ITEM_WIDTH as SIW,\r\n         SAMPLE_ITEM_HEIGHT as SIH\r\n        } from '../../util/const.js'\r\n\r\nexport default function SampleItem(props) {\r\n    const { config, source = SLS, target = SLT, width = SIW, height = SIH, index = -1, type } = props\r\n\r\n    return (\r\n        <svg\r\n            className={`sample-item-${index}`}\r\n            width={`${width}px`}\r\n            height={`${height}px`}\r\n            viewBox={`0 0 ${width} ${height}`}\r\n            preserveAspectRatio=\"xMinYMin\"\r\n        >\r\n            {type === 'link' ? (\r\n                config.shape === 'line' ?\r\n                <LinkItem\r\n                    {...config}\r\n                    source={source}\r\n                    target={target}\r\n                />:\r\n                <ArcLinkItem\r\n                    {...config}\r\n                    data = {getArcPathData(source, target)}\r\n                />\r\n            ) : (\r\n                <NodeItem {...config} x={width / 2} y={height / 2} />\r\n            )}\r\n        </svg>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { Radio } from 'antd'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport { ROW_BUTTON_STYLE } from '../../util/const.js'\r\n\r\n\r\nexport default function NodeLinkSample(props) {\r\n    const { nodeStyle, linkStyle,  chooseItem} = props\r\n    const handleIconsClick = (value) => {\r\n      props.onSubmit(value)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"node-link-sample\">\r\n            <div onClick={() => handleIconsClick('Node')} className=\"second-line-left\">\r\n                <Radio.Group value={chooseItem}>\r\n                    <Radio.Button style={ROW_BUTTON_STYLE} value=\"Node\" type>\r\n                        Node\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div\r\n                onClick={() => handleIconsClick('Node')}\r\n                className={`bp-line-icon-container ${\r\n                    chooseItem === 'Node' ? 'choose-icon' : ''\r\n                }`}\r\n            >\r\n                <SampleItem config={nodeStyle} />\r\n            </div>\r\n            <div onClick={() => handleIconsClick('Link')} className=\"second-line-left\">\r\n                <Radio.Group value={chooseItem}>\r\n                    <Radio.Button style={ROW_BUTTON_STYLE} value=\"Link\">\r\n                        Link\r\n                    </Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n            <div\r\n                onClick={() => handleIconsClick('Link')}\r\n                className={`bp-line-icon-container ${\r\n                    chooseItem === 'Link' ? 'choose-icon' : ''\r\n                }`}\r\n            >\r\n                <SampleItem config={linkStyle} type={'link'} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Select, Radio, InputNumber } from 'antd'\r\nimport { ChromePicker } from 'react-color'\r\nimport { INSERT_POSITION } from '../../util/dnetChart'\r\nimport {\r\n    TIME_PANEL_INPUT_WIDTH as TPIW,\r\n    MARK_LINK_SOURCE as MLS,\r\n    MARK_LINK_TARGET as MLT,\r\n    TIME_TIMELINE_ELEMENT,\r\n    TIME_CHART_TYPE,\r\n    TIME_TIMELINE_TYPE,\r\n    TIME_BUTTON_STYLE\r\n} from '../../util/const'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport NodeLinkSample from '../nodeLinkSample/nodeLinkSample.js'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport './timePanel.css'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\n\r\nclass TimePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            colorPickerDisplay: false,\r\n            elementColorPickerDisplay: [false, false, false],\r\n            chooseItem: 'Node'\r\n        }\r\n    }\r\n    handleButtonOnClick(type, event) {\r\n        const tempArr = [...this.props.options.chooseTypes]\r\n        const tempIndex = tempArr.indexOf(type)\r\n        if (tempIndex === -1) {\r\n            tempArr.push(type)\r\n        } else {\r\n            tempArr.splice(tempIndex, 1)\r\n        }\r\n        this.changeTimeConfig({\r\n            chooseTypes: tempArr\r\n        })\r\n    }\r\n    handleElementColorClick = (index) => {\r\n        const tempArr = this.state.elementColorPickerDisplay\r\n        tempArr[index] = !tempArr[index]\r\n        this.setState({\r\n            elementColorPickerDisplay: tempArr\r\n        })\r\n    }\r\n    handleElementColorChange = (colorCode, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = colorCode.hex\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n    handleTimeOptionsInput = (value, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = Number(value)\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n    handleTimeOptionsSelect = (value, option, key) => {\r\n        const optionObject = this.props.options[option]\r\n        optionObject[key] = value\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n\r\n    handleTimeLayoutType =(e) => {\r\n        switch(e){\r\n            case 'juxtaposed':\r\n                if(this.props.options.chooseTypes.indexOf('timeLine') === -1){\r\n                    this.handleButtonOnClick('timeLine')\r\n                }\r\n                this.handleTimeOptionsSelect('linear', 'timeLine', 'type')\r\n                break\r\n            case 'circular':\r\n                if(this.props.options.chooseTypes.indexOf('timeLine') === -1){\r\n                    this.handleButtonOnClick('timeLine')\r\n                }\r\n                this.handleTimeOptionsSelect('circular', 'timeLine', 'type')\r\n                break\r\n            default:\r\n                this.handleButtonOnClick('timeLine')\r\n                break\r\n        }\r\n    }\r\n\r\n    handleTimeOptionsChange = (option, value) => {\r\n        const optionObject = { ...this.props.options[option], ...value }\r\n        // optionObject[key] = value\r\n        this.changeTimeConfig({ [option]: optionObject })\r\n    }\r\n\r\n    handleIconsClick = (value) => {\r\n        this.setState({\r\n            chooseItem: value\r\n        })\r\n    }\r\n    changeTimeConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'time', value })\r\n    }\r\n    render() {\r\n        const options = this.props.options\r\n        const optionKey = this.state.chooseItem === 'Node' ? 'nodeStyle' : 'linkStyle'\r\n        const changeOptions = this.props.options.insert[optionKey]\r\n        return (\r\n            <div className=\"time-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Time</div>\r\n                <div className=\"encoding-table-container\">\r\n                    {/* timeLine */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('timeLine') > -1 ? 'TimeLine' : ''\r\n                                }\r\n                                size={\"small\"}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('timeLine', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"TimeLine\"\r\n                                    size={\"small\"}\r\n                                    type\r\n                                >\r\n                                    TimeLine\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Type:</div>\r\n                                <Select\r\n                                    value={options.timeLine.type}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'timeLine', 'type')\r\n                                     }\r\n                                >\r\n                                    {TIME_TIMELINE_TYPE.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>xDistance:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={1000}\r\n                                    value={options.timeLine.xDistance}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'timeLine', 'xDistance')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>yDistance:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={1000}\r\n                                    value={options.timeLine.yDistance}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'timeLine', 'yDistance')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>Element:</div>\r\n                                <Select\r\n                                    value={options.timeLine.element}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'timeLine', 'element')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {TIME_TIMELINE_ELEMENT.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* animaiton */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('animation') > -1 ? 'animation' : ''\r\n                                }\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('animation', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"animation\"\r\n                                    type\r\n                                >\r\n                                    Animation\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Speed:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={1}\r\n                                    max={1000}\r\n                                    value={options.animation.speed}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'animation', 'speed')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* color */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('color') > -1 ? 'color' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('color', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"color\"\r\n                                    type\r\n                                >\r\n                                    Color\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>startColor</div>\r\n                                <div\r\n                                    onClick={() => this.handleElementColorClick(0)}\r\n                                    style={{\r\n                                        backgroundColor: options.color.startColor,\r\n                                        width: '125px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {this.state.elementColorPickerDisplay[0] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={options.color.startColor}\r\n                                    onChange={(colorCode) =>\r\n                                        this.handleElementColorChange(\r\n                                            colorCode,\r\n                                            'color',\r\n                                            'startColor'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>endColor</div>\r\n                                <div\r\n                                    onClick={() => this.handleElementColorClick(1)}\r\n                                    style={{\r\n                                        backgroundColor: options.color.endColor,\r\n                                        width: '125px',\r\n                                        height: '24px'\r\n                                    }}\r\n                                ></div>\r\n                            </div>\r\n                            {this.state.elementColorPickerDisplay[1] ? (\r\n                                <ChromePicker\r\n                                    className=\"item-color-picker\"\r\n                                    color={options.color.endColor}\r\n                                    onChange={(colorCode) =>\r\n                                        this.handleElementColorChange(\r\n                                            colorCode,\r\n                                            'color',\r\n                                            'endColor'\r\n                                        )\r\n                                    }\r\n                                />\r\n                            ) : null}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* MarkLine */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={\r\n                                    options.chooseTypes.indexOf('markLine') > -1 ? 'markLine' : ''\r\n                                }\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('markLine', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"markLine\"\r\n                                    type\r\n                                >\r\n                                    MarkLine\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content sample-item-border\">\r\n                            <SampleItem\r\n                                config={options.markLine}\r\n                                type={'link'}\r\n                                width={258}\r\n                                height={42}\r\n                                source={MLS}\r\n                                target={MLT}\r\n                            />\r\n                        </div>\r\n                        <NodeLinkStylePanel\r\n                            type={'Link'}\r\n                            optionKey={'markLine'}\r\n                            changeOptions={options.markLine}\r\n                            onSubmit={this.changeTimeConfig}\r\n                        />\r\n                    </div>\r\n                    {/* Chart */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('chart') > -1 ? 'chart' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('chart', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"chart\"\r\n                                    type\r\n                                >\r\n                                    Chart\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Type:</div>\r\n                                <Select\r\n                                    value={\r\n                                        options.chart.type === undefined\r\n                                            ? 'line'\r\n                                            : options.chart.type\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'chart', 'type')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {TIME_CHART_TYPE.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* insert */}\r\n                    <div className=\"encoding-item\">\r\n                        <div className=\"encoding-item-title\">\r\n                            <Radio.Group\r\n                                value={options.chooseTypes.indexOf('insert') > -1 ? 'insert' : ''}\r\n                            >\r\n                                <Radio.Button\r\n                                    onClick={(e) => {\r\n                                        this.handleButtonOnClick('insert', e)\r\n                                    }}\r\n                                    style={TIME_BUTTON_STYLE}\r\n                                    value=\"insert\"\r\n                                    type\r\n                                >\r\n                                    Insert\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <div className=\"item-right-option\">\r\n                                <div>Margin:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={1}\r\n                                    max={1000}\r\n                                    value={options.insert.margin}\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsInput(e, 'insert', 'margin')\r\n                                    }\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"item-right-option\">\r\n                                <div>Position:</div>\r\n                                <Select\r\n                                    value={options.insert.position}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(e) =>\r\n                                        this.handleTimeOptionsSelect(e, 'insert', 'position')\r\n                                    }\r\n                                >\r\n                                    {' '}\r\n                                    {INSERT_POSITION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"encoding-item-content\">\r\n                            <NodeLinkSample\r\n                                nodeStyle={options.insert.nodeStyle}\r\n                                linkStyle={options.insert.linkStyle}\r\n                                chooseItem={this.state.chooseItem}\r\n                                onSubmit={this.handleIconsClick}\r\n                            />\r\n                        </div>\r\n                        <NodeLinkStylePanel\r\n                            type={this.state.chooseItem}\r\n                            optionKey={optionKey}\r\n                            changeOptions={changeOptions}\r\n                            onSubmit={(value) => this.handleTimeOptionsChange('insert', value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.time\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimePanel)\r\n","import React from 'react'\r\nimport SampleItem from '../sampleItem/sampleItem.js'\r\nimport { Radio, Select, Collapse, Checkbox, Col, Row, InputNumber } from 'antd'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport {\r\n    TIME_PANEL_INPUT_WIDTH as TPIW,\r\n    TIME_TIMELINE_ELEMENT,\r\n    KEYFRAM_OPTIONS,\r\n    TASK_FIND_ATTR,\r\n    TASK_FIND_RELATION,\r\n    TASK_CHANGE_TYPES,\r\n    PATTERN_TO_CHANGE,\r\n    TASK_TYPES,\r\n    TASK_BASED_TYPES\r\n} from '../../util/const'\r\nimport { COMPARISON_CONFIG } from '../../util/defaultConfig.js'\r\nimport './comparisonPanel.css'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\nconst { Panel } = Collapse\r\n// Trend或者 Diff 配置\r\n// 下面是trend配置\r\n\r\nconst columnButtonStyle = {\r\n    boxSizing: 'border-box',\r\n    width: '62px',\r\n    padding: '0px',\r\n    fontSize: '12px',\r\n    height: '30px',\r\n    lineHeight: '30px',\r\n    alighItems: 'center'\r\n}\r\nconst rowButtonStyle = {\r\n    boxSizing: 'border-box',\r\n    width: '62px',\r\n    padding: '0px',\r\n    fontSize: '12px',\r\n    height: '62px',\r\n    lineHeight: '62px',\r\n    alighItems: 'center'\r\n}\r\n\r\nconst index2chooseItem = [\r\n    'appear-Node',\r\n    'stable-Node',\r\n    'disappear-Node',\r\n    'appear-Link',\r\n    'stable-Link',\r\n    'disappear-Link'\r\n]\r\n\r\nclass TaskPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            indeterminate: true,\r\n            checkAll: false,\r\n            changeIndeterminate: true,\r\n            changeCheckAll: true,\r\n            changeList: [...TASK_CHANGE_TYPES],\r\n            taskPattern: 'graph',\r\n            taskChange: 'all'\r\n        }\r\n    }\r\n    handleOptionChange = (value) => {\r\n        this.handleComparisonChange({ ...value })\r\n    }\r\n    handleSelectChange = (value, key, option) => {\r\n        if (option === 'comparison') {\r\n            this.handleComparisonChange({ [key]: value })\r\n        } else if (option === 'find') {\r\n            this.handleFindChange({ [key]: value })\r\n        }\r\n    }\r\n    handleColumnChange = (e) => {\r\n        const nodeOrLink = this.props.options.comparison.chooseItem.split('-')[1]\r\n        this.handleComparisonChange({ chooseItem: `${e.target.value}-${nodeOrLink}` })\r\n    }\r\n    handleRowChange = (e) => {\r\n        const changeAttr = this.props.options.comparison.chooseItem.split('-')[0]\r\n        this.handleComparisonChange({ chooseItem: `${changeAttr}-${e.target.value}` })\r\n    }\r\n    handleIconsClick = (index) => {\r\n        this.handleComparisonChange({ chooseItem: index2chooseItem[Number(index)] })\r\n    }\r\n    handleIsOnChange = (value) => {\r\n        this.handleComparisonChange({ isOn: value })\r\n    }\r\n\r\n    handleCheckChange = (list) => {\r\n        this.handleComparisonChange({ chooseTypes: list })\r\n        this.setState({ indeterminate: !!list.length && list.length < COMPARISON_CONFIG.length })\r\n        this.setState({ checkAll: list.length === COMPARISON_CONFIG.length })\r\n    }\r\n    handleAllCheckChange = (e) => {\r\n        this.handleComparisonChange({ chooseTypes: e.target.checked ? COMPARISON_CONFIG : [] })\r\n        this.setState({ indeterminate: false })\r\n        this.setState({ checkAll: e.target.checked })\r\n    }\r\n\r\n    handleChangeCheckChange = (list) => {\r\n        this.handleTaskPanelChange('change', list)\r\n    }\r\n    handleAllChangeCheckChange = (e) => {\r\n        this.handleTaskPanelChange('change', [...TASK_CHANGE_TYPES])\r\n    }\r\n\r\n    handleComparisonChange = (value) => {\r\n        this.changeTaskConfig({\r\n            comparison: {\r\n                ...this.props.options.comparison,\r\n                ...value\r\n            }\r\n        })\r\n    }\r\n    handleFindChange = (value) => {\r\n        this.changeTaskConfig({\r\n            find: {\r\n                ...this.props.options.find,\r\n                ...value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleTaskPanelChange = (key, value) => {\r\n        this.changeTaskConfig({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    handleTaskPatternSelect = (value) => {\r\n        switch (value) {\r\n            case 'graph':\r\n                this.handleTaskPanelChange('taskType', 'none')\r\n                this.handleTaskPanelChange('pattern', 'graph')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['graph']])\r\n                break\r\n            case 'compare-structure':\r\n                this.handleTaskPanelChange('taskType', 'comparison')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleTaskPanelChange('pattern', 'compare-structure')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['compare-structure']])\r\n                break\r\n            case 'shortest-path':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleTaskPanelChange('pattern', 'shortest-path')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['shortest-path']])\r\n                break\r\n            case 'dumb-bell':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'structure')\r\n                this.handleSelectChange('dumb-bell', 'structure', 'find')\r\n                this.handleTaskPanelChange('pattern', 'dumb-bell')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['dumb-bell']])\r\n                break\r\n            case 'compare-degree':\r\n                this.handleTaskPanelChange('taskType', 'comparison')\r\n                this.handleTaskPanelChange('basedType', 'attr')\r\n                this.handleTaskPanelChange('pattern', 'compare-degree')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['compare-degree']])\r\n                break\r\n            case 'find-degree':\r\n                this.handleTaskPanelChange('taskType', 'find')\r\n                this.handleTaskPanelChange('basedType', 'attr')\r\n                this.handleTaskPanelChange('pattern', 'find-degree')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['find-degree']])\r\n                break\r\n            default:\r\n                this.handleTaskPanelChange('taskType', 'none')\r\n                this.handleTaskPanelChange('pattern', 'graph')\r\n                this.handleTaskPanelChange('change', [...PATTERN_TO_CHANGE['graph']])\r\n        }\r\n    }\r\n    handleTaskChangeSelect = (value) => {\r\n        this.setState({\r\n            taskChange: value\r\n        })\r\n    }\r\n    changeTaskConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'task', value })\r\n    }\r\n\r\n    render() {\r\n        const { comparison, find, taskType, basedType, pattern, change} = this.props.options\r\n        const {\r\n            chooseItem,\r\n            keyFrame,\r\n            elements,\r\n            chooseTypes,\r\n            appearNode,\r\n            appearLink,\r\n            stableNode,\r\n            stableLink,\r\n            disappearNode,\r\n            disappearLink\r\n        } = comparison\r\n        let changeKey = chooseItem.split('-')\r\n        changeKey = changeKey.join('')\r\n        const changeOptions = comparison[changeKey]\r\n        return (\r\n            <div className=\"Comparison-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Task</div>\r\n                <div className=\"encoding-table-container\">\r\n                    <div className=\"change-option-item\">\r\n                        <div>TaskType</div>\r\n                        <Select\r\n                            value={taskType}\r\n                            size=\"small\"\r\n                            style={{ width: TPIW }}\r\n                            onChange={(value) => this.handleTaskPanelChange('taskType', value)}\r\n                        >\r\n                            {\r\n                                TASK_TYPES.map(v=>{\r\n                                    return <Option key={v} value={v}>{v}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div >BasedType</div>\r\n                        <Select\r\n                            value={basedType}\r\n                            size=\"small\"\r\n                            style={{ width: TPIW }}\r\n                            onChange={(value) => this.handleTaskPanelChange('basedType', value)}\r\n                        >\r\n                            {\r\n                                TASK_BASED_TYPES.map(v=>{\r\n                                    return <Option  key={v} value={v}>{v}</Option> \r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <Collapse\r\n                            expandIconPosition={'right'}\r\n                            size=\"small\"\r\n                            style={{\r\n                                backgroundColor: '#ffffff',\r\n                                width: '100%'\r\n                            }}\r\n                            defaultActiveKey={['1']}\r\n                        >\r\n                            <Panel key=\"1\" className=\"nlsp-panel\" header={'Change'}>\r\n                                <Col\r\n                                    style={{\r\n                                        width: '50%',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'flex-start',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                >\r\n                                    <Checkbox\r\n                                        indeterminate={false}\r\n                                        onChange={this.handleAllChangeCheckChange}\r\n                                        checked={\r\n                                            change.length === TASK_CHANGE_TYPES.length\r\n                                        }\r\n                                    >\r\n                                        all\r\n                                    </Checkbox>\r\n                                </Col>\r\n                                <Checkbox.Group\r\n                                    style={{\r\n                                        textAlign: 'left',\r\n                                        width: '100%',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                    value={change}\r\n                                    onChange={this.handleChangeCheckChange}\r\n                                >\r\n                                    {[0, 2, 4].map((v) => {\r\n                                        return (\r\n                                            <Row\r\n                                                style={{\r\n                                                    width: '100%'\r\n                                                }}\r\n                                                key={`row-${v}`}\r\n                                            >\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '50%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={TASK_CHANGE_TYPES[v]}>\r\n                                                        {TASK_CHANGE_TYPES[v]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '50%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox\r\n                                                        style={{ fontSize: '10px' }}\r\n                                                        value={TASK_CHANGE_TYPES[v + 1]}\r\n                                                    >\r\n                                                        {TASK_CHANGE_TYPES[v + 1]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </Checkbox.Group>\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>\r\n                    {pattern === 'shortest-path' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Start:</div>\r\n                                <Select\r\n                                    value={'A'}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                >\r\n                                    <Option key={'A'} value={'A'}>\r\n                                        {'A'}\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>End:</div>\r\n                                <Select\r\n                                    value={'F'}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                >\r\n                                    <Option key={'F'} value={'F'}>\r\n                                        {'F'}\r\n                                    </Option>\r\n                                </Select>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {pattern === 'find-degree' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Relation:</div>\r\n                                <Select\r\n                                    value={find.relation}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'relation', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_RELATION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Value:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={100}\r\n                                    value={find.value}\r\n                                    onChange={(e) => this.handleFindChange({ value: Number(e) })}\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    <div className=\"change-option-item\">\r\n                        <Collapse\r\n                            expandIconPosition={'right'}\r\n                            style={{\r\n                                backgroundColor: '#ffffff',\r\n                                width: '100%'\r\n                            }}\r\n                            size=\"small\"\r\n                            defaultActiveKey={['0']}\r\n                        >\r\n                            <Panel key=\"1\" className=\"nlsp-panel\" header={'chooseTypes'}>\r\n                                <Col\r\n                                    style={{\r\n                                        width: '50%',\r\n                                        display: 'flex',\r\n                                        flexDirection: 'flex-start',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                >\r\n                                    <Checkbox\r\n                                        indeterminate={this.state.indeterminate}\r\n                                        onChange={this.handleAllCheckChange}\r\n                                        checked={this.state.checkAll}\r\n                                    >\r\n                                        all\r\n                                    </Checkbox>\r\n                                </Col>\r\n                                <Checkbox.Group\r\n                                    style={{\r\n                                        textAlign: 'left',\r\n                                        width: '100%',\r\n                                        paddingLeft: '10px'\r\n                                    }}\r\n                                    value={chooseTypes}\r\n                                    onChange={this.handleCheckChange}\r\n                                >\r\n                                    {[0, 2, 4, 6].map((v) => {\r\n                                        return (\r\n                                            <Row\r\n                                                style={{\r\n                                                    width: '100%'\r\n                                                }}\r\n                                                key={`row-${v}`}\r\n                                            >\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '55%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={COMPARISON_CONFIG[v]}>\r\n                                                        {COMPARISON_CONFIG[v]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                                <Col\r\n                                                    style={{\r\n                                                        width: '45%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'flex-start'\r\n                                                    }}\r\n                                                >\r\n                                                    <Checkbox value={COMPARISON_CONFIG[v + 1]}>\r\n                                                        {COMPARISON_CONFIG[v + 1]}\r\n                                                    </Checkbox>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )\r\n                                    })}\r\n                                </Checkbox.Group>\r\n                            </Panel>\r\n                        </Collapse>\r\n                    </div>    \r\n                    {taskType === 'comparison' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>KeyFrame:</div>\r\n                                <Select\r\n                                    value={keyFrame}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'keyFrame', 'comparison')\r\n                                    }\r\n                                >\r\n                                    {KEYFRAM_OPTIONS.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Elements:</div>\r\n                                <Select\r\n                                    value={elements}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'elements', 'comparison')\r\n                                    }\r\n                                >\r\n                                    {TIME_TIMELINE_ELEMENT.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n                    {taskType === 'find' && basedType === 'attr' ? (\r\n                        <>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Attr:</div>\r\n                                <Select\r\n                                    value={find.attr}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'attr', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_ATTR.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Relation:</div>\r\n                                <Select\r\n                                    value={find.relation}\r\n                                    style={{ width: TPIW }}\r\n                                    size=\"small\"\r\n                                    onChange={(value) =>\r\n                                        this.handleSelectChange(value, 'relation', 'find')\r\n                                    }\r\n                                >\r\n                                    {TASK_FIND_RELATION.map((v) => {\r\n                                        return (\r\n                                            <Option key={v} value={v}>\r\n                                                {v}\r\n                                            </Option>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"change-option-item\">\r\n                                <div>Value:</div>\r\n                                <InputNumber\r\n                                    size=\"small\"\r\n                                    min={0}\r\n                                    max={100}\r\n                                    value={find.value}\r\n                                    onChange={(e) => this.handleFindChange({ value: Number(e) })}\r\n                                    style={{ width: TPIW }}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <div className=\"comparison-table-container\">\r\n                        <div className=\"table-first-line\">\r\n                            <div className=\"blank-icon\"></div>\r\n                            <Radio.Group\r\n                                onChange={this.handleColumnChange}\r\n                                value={chooseItem.split('-')[0]}\r\n                                className=\"first-line-right\"\r\n                            >\r\n                                <Radio.Button style={columnButtonStyle} value=\"appear\">\r\n                                    appear\r\n                                </Radio.Button>\r\n                                <Radio.Button style={columnButtonStyle} value=\"stable\">\r\n                                    stable\r\n                                </Radio.Button>\r\n                                <Radio.Button style={columnButtonStyle} value=\"disappear\">\r\n                                    disappear\r\n                                </Radio.Button>\r\n                            </Radio.Group>\r\n                        </div>\r\n                        <div className=\"table-second-line\">\r\n                            <div className=\"second-line-left\">\r\n                                <Radio.Group\r\n                                    onChange={this.handleRowChange}\r\n                                    value={chooseItem.split('-')[1]}\r\n                                >\r\n                                    <Radio.Button style={rowButtonStyle} value=\"Node\">\r\n                                        Node\r\n                                    </Radio.Button>\r\n                                    <Radio.Button style={rowButtonStyle} value=\"Link\">\r\n                                        Link\r\n                                    </Radio.Button>\r\n                                </Radio.Group>\r\n                            </div>\r\n                            <div className=\"second-line-right\">\r\n                                <div\r\n                                    id=\"appear-Node\"\r\n                                    onClick={() => this.handleIconsClick(0)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'appear-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={appearNode} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(1)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'stable-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={stableNode} />\r\n                                </div>\r\n                                <div\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'disappear-Node' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                    onClick={() => this.handleIconsClick(2)}\r\n                                >\r\n                                    <SampleItem config={disappearNode} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(3)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'appear-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={appearLink} type={'link'} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(4)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'stable-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={stableLink} type={'link'} />\r\n                                </div>\r\n                                <div\r\n                                    onClick={() => this.handleIconsClick(5)}\r\n                                    className={`line-icon-container ${\r\n                                        chooseItem === 'disappear-Link' ? 'choose-icon' : ''\r\n                                    }`}\r\n                                >\r\n                                    <SampleItem config={disappearLink} type={'link'} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <NodeLinkStylePanel\r\n                        type={chooseItem.split('-')[1]}\r\n                        optionKey={chooseItem.split('-').join('')}\r\n                        changeOptions={changeOptions}\r\n                        onSubmit={this.handleComparisonChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.task\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskPanel)\r\n","import React from 'react'\r\nimport { InputNumber, Select } from 'antd'\r\nimport NodeLinkStylePanel from '../nodeLinkStylePanel/nodeLinkStylePanel.js'\r\nimport NodeLinkSample from '../nodeLinkSample/nodeLinkSample.js'\r\nimport { GRAPH_LAYOUT_TYPE } from '../../util/const'\r\nimport { connect } from 'react-redux'\r\nimport { modifyConfig } from '../../redux/config.redux.js'\r\n\r\nconst { Option } = Select\r\n\r\n// const rowButtonStyle = {\r\n//     boxSizing: 'border-box',\r\n//     width: '64px',\r\n//     padding: '0px',\r\n//     fontSize: '12px',\r\n//     height: '64px',\r\n//     lineHeight: '64px',\r\n//     alighItems: 'center'\r\n// }\r\n\r\nclass GraphPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            chooseItem: 'Node'\r\n        }\r\n    }\r\n    handleConfigChange = (e, key) => {\r\n        this.changeGraphConfig({\r\n            [key]: parseInt(e)\r\n        })\r\n    }\r\n    handleStyleChange = (option, key, value) => {\r\n        const optionItem = this.props.options[option]\r\n        const displayItem = {\r\n            ...optionItem,\r\n            [key]: value\r\n        }\r\n        this.changeGraphConfig({\r\n            [option]: displayItem\r\n        })\r\n    }\r\n\r\n    handleIconsClick = (value) => {\r\n        this.setState({\r\n            chooseItem: value\r\n        })\r\n    }\r\n\r\n    handleLayoutTypeChange = (value) => {\r\n        const layoutItem = this.props.options.layout\r\n        const displayItem = {\r\n            ...layoutItem,\r\n            chooseType: value\r\n        }\r\n        this.changeGraphConfig({ layout: displayItem })\r\n    }\r\n\r\n    changeGraphConfig = (value) => {\r\n        this.props.modifyConfig({ key: 'graph', value })\r\n    }\r\n\r\n    render() {\r\n        const optionKey = this.state.chooseItem === 'Node' ? 'nodeStyle' : 'linkStyle'\r\n        const changeOptions = this.props.options[optionKey]\r\n        return (\r\n            <div className=\"basic-box combine-inner-border\">\r\n                <div className=\"combine-inner-title\">&nbsp;Graph</div>\r\n                <div className=\"encoding-table-container\">\r\n                    <div className=\"change-option-item\">\r\n                        <div>Layout:</div>\r\n                        <Select\r\n                            size=\"small\"\r\n                            value={this.props.options.layout.chooseType}\r\n                            style={{ width: 125 }}\r\n                            onChange={this.handleLayoutTypeChange}\r\n                        >\r\n                            {GRAPH_LAYOUT_TYPE.map((v) => {\r\n                                return (\r\n                                    <Option key={v} value={v}>\r\n                                        {v}\r\n                                    </Option>\r\n                                )\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>eachWidth:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={1000}\r\n                            value={this.props.options.eachWidth}\r\n                            style={{ width: 125 }}\r\n                            onChange={(e) => this.handleConfigChange(e, 'eachWidth')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>eachHeight:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={7000}\r\n                            style={{ width: 125 }}\r\n                            value={this.props.options.eachHeight}\r\n                            onChange={(e) => this.handleConfigChange(e, 'eachHeight')}\r\n                        />\r\n                    </div>\r\n                    <div className=\"change-option-item\">\r\n                        <div>margin:</div>\r\n                        <InputNumber\r\n                            size=\"small\"\r\n                            min={1}\r\n                            max={200}\r\n                            style={{ width: 125 }}\r\n                            value={this.props.options.margin}\r\n                            onChange={(e) => this.handleConfigChange(e, 'margin')}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"basic-panel-line\">\r\n                        <NodeLinkSample\r\n                            nodeStyle={this.props.options.nodeStyle}\r\n                            linkStyle={this.props.options.linkStyle}\r\n                            chooseItem={this.state.chooseItem}\r\n                            onSubmit={this.handleIconsClick}\r\n                        />\r\n                    </div>\r\n                    <NodeLinkStylePanel\r\n                        type={this.state.chooseItem}\r\n                        optionKey={optionKey}\r\n                        changeOptions={changeOptions}\r\n                        onSubmit={this.changeGraphConfig}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    options: state.config.graph\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    modifyConfig\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GraphPanel)\r\n","import React from 'react'\r\nimport './combinePanel.css'\r\nimport TimePanel from '../timePanel/timePanel.js'\r\nimport TaskPanel from '../taskPanel/taskPanel.js'\r\nimport GraphPanel from '../graphPanel/graphPanel.js'\r\nimport saveSvg from '../../assets/save.svg'\r\nimport settingsSvg from '../../assets/settings.svg'\r\n\r\nexport default function CombinePanel(props) {\r\n    return (\r\n        <div className=\"combine-panel-box\">\r\n            <div className=\"sub-title\">\r\n                &nbsp;Specification\r\n                <img\r\n                    className=\"icon\"\r\n                    alt = \"saveSvg\"\r\n                    src={saveSvg}\r\n                />\r\n                <img\r\n                    className=\"icon\"\r\n                    alt = \"settingsSvg\"\r\n                    src={settingsSvg}\r\n                />\r\n            </div>\r\n            <div\r\n                className=\"cbpl-content-container simple_scrollbar\"\r\n            >\r\n                <div>\r\n                    <GraphPanel/>\r\n                    <TaskPanel/>\r\n                </div>\r\n                <TimePanel/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport DataPanel from './components/dataPanel/dataPanel.js'\r\nimport Preview from './components/preview/preview.js'\r\nimport GrammarPanel from './components/grammarPanel/grammarPanel.js'\r\nimport ExampleBoard from './components/exampleBoard/exampleBoard.js'\r\nimport TemplatePanel from './components/templatePanel/templatePanel.js'\r\nimport CombinePanel from './components/combinePanel/combinePanel.js'\r\nimport graphSvg from './assets/graphIcon.svg'\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n    setGraphData,\r\n} from './redux/graphData.redux.js'\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        let scale = 1\r\n        if (document.documentElement.clientWidth > 1920) {\r\n            scale = document.documentElement.clientWidth / 1920\r\n        }\r\n        this.state = {\r\n            board: 'system',\r\n            jsonfile: {},\r\n            filename: '',\r\n            ratio: scale,\r\n        }\r\n    }\r\n    handleBoardSwitch = (value) => {\r\n        if (this.state.board !== value) {\r\n            this.setState({\r\n                board: value\r\n            })\r\n        }\r\n    }\r\n    componentDidMount = () => {\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"board\" style={{\r\n                transform: `scale(${this.state.ratio})`\r\n            }} >\r\n                <div className=\"window-header\">\r\n                    <img\r\n                        className=\"title-graph-svg\"\r\n                        alt={'graph'}\r\n                        src={graphSvg}\r\n                    />\r\n                    <div className=\"window-header-text\">\r\n                        <div className=\"title\">DNet-<span className=\"bold-font\">Gra</span> </div>\r\n                        {/* <div\r\n                            className={`header-sub-title ${\r\n                                this.state.board === 'system' ? 'header-sub-choose' : ''\r\n                            }`}\r\n                            onClick={() => this.handleBoardSwitch('system')}\r\n                        >\r\n                            System\r\n                        </div>\r\n                        <div className=\"header-sub-divide\"></div>\r\n                        <div\r\n                            className={`header-sub-title ${\r\n                                this.state.board === 'example' ? 'header-sub-choose' : ''\r\n                            }`}\r\n                            onClick={() => this.handleBoardSwitch('example')}\r\n                        >\r\n                            Example\r\n                        </div> */}\r\n                    </div>\r\n\r\n                </div>\r\n                {this.state.board === 'example' ? (\r\n                    <ExampleBoard></ExampleBoard>\r\n                ) : (\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <DataPanel />\r\n                            <GrammarPanel />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <CombinePanel />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <TemplatePanel />\r\n                            <Preview />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    graphData: state.graphData\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setGraphData,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board)","import { combineReducers } from 'redux';\r\n// import { dragStatus } from './drag.redux.js'\r\n// import {encodingItems} from './encoding.redux.js'\r\nimport {graphData} from './graphData.redux.js'\r\n// import {editIndex} from './editIndex.redux.js'\r\nimport {config} from './config.redux.js'\r\nexport default combineReducers({\r\n    config,\r\n    graphData\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n// import 'antd/dist/antd.dark.css'\r\n// import 'antd/dist/antd.less'\r\nimport './util/antd.css'\r\nimport Board from './board.js'\r\nimport reducers from './redux/index.js'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(reducers)\r\n\r\nlet script = document.createElement('script')\r\nscript.type = 'text/javascript'\r\nscript.src = 'http://at.alicdn.com/t/font_2104982_fxuicqlij3m.js'\r\ndocument.getElementById('root').appendChild(script)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Board />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}